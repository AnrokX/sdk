{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.47.11",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "projectFolderUrl": "https://github.com/hytopiagg/sdk",
  "kind": "Package",
  "canonicalReference": "server!",
  "docComment": "",
  "name": "server",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "server!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Class",
          "canonicalReference": "server!Audio:class",
          "docComment": "/**\n * An instance of audio, supporting a variety of configuration options.\n *\n * @remarks\n *\n * Audio instances are created directly as instances. They support a variety of configuration options through the {@link AudioOptions} constructor argument.\n *\n * @example\n * ```typescript\n * (new Audio({\n *   uri: 'assets/music/song.mp3',\n *   loop: true,\n *   volume: 0.5,\n * })).play(world);\n * ```\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default class Audio implements "
            },
            {
              "kind": "Reference",
              "text": "protocol.Serializable",
              "canonicalReference": "@hytopia.com/server-protocol!Serializable:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/world/audios/Audio.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Audio",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "server!Audio:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Audio` class\n *\n * @param audioData - The options for the audio instance.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(options: "
                },
                {
                  "kind": "Reference",
                  "text": "AudioOptions",
                  "canonicalReference": "server!AudioOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Audio#attachedToEntity:member",
              "docComment": "/**\n * The entity to which the audio is attached if explicitly set.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get attachedToEntity(): "
                },
                {
                  "kind": "Reference",
                  "text": "Entity",
                  "canonicalReference": "server!Entity:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "attachedToEntity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Audio#detune:member",
              "docComment": "/**\n * The detune of the audio in cents if explicitly set.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get detune(): "
                },
                {
                  "kind": "Content",
                  "text": "number | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "detune",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Audio#distortion:member",
              "docComment": "/**\n * The amount of distortion to apply to the audio if explicitly set.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get distortion(): "
                },
                {
                  "kind": "Content",
                  "text": "number | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "distortion",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Audio#duration:member",
              "docComment": "/**\n * The duration of the audio in seconds if explicitly set.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get duration(): "
                },
                {
                  "kind": "Content",
                  "text": "number | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "duration",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Audio#id:member",
              "docComment": "/**\n * The unique identifier for the audio.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get id(): "
                },
                {
                  "kind": "Content",
                  "text": "number | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Audio#isLoaded:member",
              "docComment": "/**\n * Whether the audio has loaded into the world. Audio is loaded the first time play() is called.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isLoaded(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isLoaded",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Audio#isPlaying:member",
              "docComment": "/**\n * Whether the audio is currently playing.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isPlaying(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isPlaying",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Audio#isPositional:member",
              "docComment": "/**\n * Whether the audio is positional (Entity or position attached).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isPositional(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isPositional",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Audio#loop:member",
              "docComment": "/**\n * Whether the audio is looped.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get loop(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "loop",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Audio#offset:member",
              "docComment": "/**\n * The offset time in seconds from which the audio should start playing if explicitly set.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get offset(): "
                },
                {
                  "kind": "Content",
                  "text": "number | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "offset",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Audio#pause:member(1)",
              "docComment": "/**\n * Pauses the audio.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pause(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "pause"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Audio#play:member(1)",
              "docComment": "/**\n * Plays or resumes the audio.\n *\n * @param world - The world to play the audio in.\n *\n * @param restart - If true, the audio will restart from the beginning if it is already playing.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "play(world: "
                },
                {
                  "kind": "Reference",
                  "text": "World",
                  "canonicalReference": "server!World:class"
                },
                {
                  "kind": "Content",
                  "text": ", restart?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "world",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "restart",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "play"
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Audio#playbackRate:member",
              "docComment": "/**\n * The playback rate of the audio if explicitly set.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get playbackRate(): "
                },
                {
                  "kind": "Content",
                  "text": "number | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "playbackRate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Audio#position:member",
              "docComment": "/**\n * The position of the audio in the world if explicitly set.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get position(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "position",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Audio#referenceDistance:member",
              "docComment": "/**\n * The reference distance of the audio if explicitly set.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get referenceDistance(): "
                },
                {
                  "kind": "Content",
                  "text": "number | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "referenceDistance",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Audio#setAttachedToEntity:member(1)",
              "docComment": "/**\n * Sets the entity to which the audio is attached, following its position.\n *\n * @param entity - The entity to attach the audio to.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setAttachedToEntity(entity: "
                },
                {
                  "kind": "Reference",
                  "text": "Entity",
                  "canonicalReference": "server!Entity:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "entity",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setAttachedToEntity"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Audio#setDetune:member(1)",
              "docComment": "/**\n * Sets the detune of the audio.\n *\n * @param detune - The detune in cents.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setDetune(detune: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "detune",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setDetune"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Audio#setDistortion:member(1)",
              "docComment": "/**\n * Sets the distortion of the audio.\n *\n * @param distortion - The distortion amount.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setDistortion(distortion: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "distortion",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setDistortion"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Audio#setPlaybackRate:member(1)",
              "docComment": "/**\n * Sets the playback rate of the audio.\n *\n * @param playbackRate - The playback rate.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setPlaybackRate(playbackRate: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "playbackRate",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setPlaybackRate"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Audio#setPosition:member(1)",
              "docComment": "/**\n * Sets the position of the audio. Will detach from entity if attached.\n *\n * @param position - The position in the world.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setPosition(position: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "position",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setPosition"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Audio#setReferenceDistance:member(1)",
              "docComment": "/**\n * Sets the reference distance of the audio.\n *\n * @param referenceDistance - The reference distance.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setReferenceDistance(referenceDistance: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "referenceDistance",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setReferenceDistance"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Audio#setVolume:member(1)",
              "docComment": "/**\n * Sets the volume of the audio.\n *\n * @param volume - The volume level.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setVolume(volume: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "volume",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setVolume"
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Audio#startTick:member",
              "docComment": "/**\n * The server tick at which the audio started playing.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get startTick(): "
                },
                {
                  "kind": "Content",
                  "text": "number | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "startTick",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Audio#uri:member",
              "docComment": "/**\n * The URI of the audio asset.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get uri(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "uri",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Audio#volume:member",
              "docComment": "/**\n * The volume of the audio if explicitly set.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get volume(): "
                },
                {
                  "kind": "Content",
                  "text": "number | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "volume",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Audio#world:member",
              "docComment": "/**\n * The world the audio is in if already loaded.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get world(): "
                },
                {
                  "kind": "Reference",
                  "text": "World",
                  "canonicalReference": "server!World:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "world",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "server!AudioEventPayload:namespace",
          "docComment": "/**\n * Payloads for events an Audio instance can emit.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace AudioEventPayload "
            }
          ],
          "fileUrlPath": "src/world/audios/Audio.ts",
          "releaseTag": "Public",
          "name": "AudioEventPayload",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Interface",
              "canonicalReference": "server!AudioEventPayload.Pause:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface Pause "
                }
              ],
              "releaseTag": "Public",
              "name": "Pause",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!AudioEventPayload.Pause#audio:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "audio: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Audio",
                      "canonicalReference": "server!Audio:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "audio",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "server!AudioEventPayload.Play:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface Play "
                }
              ],
              "releaseTag": "Public",
              "name": "Play",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!AudioEventPayload.Play#audio:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "audio: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Audio",
                      "canonicalReference": "server!Audio:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "audio",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "server!AudioEventPayload.PlayRestart:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface PlayRestart "
                }
              ],
              "releaseTag": "Public",
              "name": "PlayRestart",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!AudioEventPayload.PlayRestart#audio:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "audio: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Audio",
                      "canonicalReference": "server!Audio:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "audio",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "server!AudioEventPayload.SetAttachedToEntity:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface SetAttachedToEntity "
                }
              ],
              "releaseTag": "Public",
              "name": "SetAttachedToEntity",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!AudioEventPayload.SetAttachedToEntity#audio:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "audio: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Audio",
                      "canonicalReference": "server!Audio:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "audio",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!AudioEventPayload.SetAttachedToEntity#entity:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "entity: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entity",
                      "canonicalReference": "server!Entity:class"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "entity",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "server!AudioEventPayload.SetDetune:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface SetDetune "
                }
              ],
              "releaseTag": "Public",
              "name": "SetDetune",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!AudioEventPayload.SetDetune#audio:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "audio: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Audio",
                      "canonicalReference": "server!Audio:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "audio",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!AudioEventPayload.SetDetune#detune:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "detune: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "detune",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "server!AudioEventPayload.SetDistortion:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface SetDistortion "
                }
              ],
              "releaseTag": "Public",
              "name": "SetDistortion",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!AudioEventPayload.SetDistortion#audio:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "audio: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Audio",
                      "canonicalReference": "server!Audio:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "audio",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!AudioEventPayload.SetDistortion#distortion:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "distortion: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "distortion",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "server!AudioEventPayload.SetPlaybackRate:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface SetPlaybackRate "
                }
              ],
              "releaseTag": "Public",
              "name": "SetPlaybackRate",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!AudioEventPayload.SetPlaybackRate#audio:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "audio: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Audio",
                      "canonicalReference": "server!Audio:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "audio",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!AudioEventPayload.SetPlaybackRate#playbackRate:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "playbackRate: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "playbackRate",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "server!AudioEventPayload.SetPosition:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface SetPosition "
                }
              ],
              "releaseTag": "Public",
              "name": "SetPosition",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!AudioEventPayload.SetPosition#audio:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "audio: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Audio",
                      "canonicalReference": "server!Audio:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "audio",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!AudioEventPayload.SetPosition#position:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "position: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "position",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "server!AudioEventPayload.SetReferenceDistance:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface SetReferenceDistance "
                }
              ],
              "releaseTag": "Public",
              "name": "SetReferenceDistance",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!AudioEventPayload.SetReferenceDistance#audio:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "audio: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Audio",
                      "canonicalReference": "server!Audio:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "audio",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!AudioEventPayload.SetReferenceDistance#referenceDistance:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "referenceDistance: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "referenceDistance",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "server!AudioEventPayload.SetVolume:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface SetVolume "
                }
              ],
              "releaseTag": "Public",
              "name": "SetVolume",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!AudioEventPayload.SetVolume#audio:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "audio: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Audio",
                      "canonicalReference": "server!Audio:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "audio",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!AudioEventPayload.SetVolume#volume:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "volume: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "volume",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "server!AudioEventType:enum",
          "docComment": "/**\n * Event types an Audio instance can emit.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum AudioEventType "
            }
          ],
          "fileUrlPath": "src/world/audios/Audio.ts",
          "releaseTag": "Public",
          "name": "AudioEventType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "server!AudioEventType.PAUSE:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PAUSE = "
                },
                {
                  "kind": "Content",
                  "text": "\"AUDIO.PAUSE\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "PAUSE"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "server!AudioEventType.PLAY:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PLAY = "
                },
                {
                  "kind": "Content",
                  "text": "\"AUDIO.PLAY\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "PLAY"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "server!AudioEventType.PLAY_RESTART:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PLAY_RESTART = "
                },
                {
                  "kind": "Content",
                  "text": "\"AUDIO.PLAY_RESTART\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "PLAY_RESTART"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "server!AudioEventType.SET_ATTACHED_TO_ENTITY:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SET_ATTACHED_TO_ENTITY = "
                },
                {
                  "kind": "Content",
                  "text": "\"AUDIO.SET_ATTACHED_TO_ENTITY\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "SET_ATTACHED_TO_ENTITY"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "server!AudioEventType.SET_DETUNE:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SET_DETUNE = "
                },
                {
                  "kind": "Content",
                  "text": "\"AUDIO.SET_DETUNE\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "SET_DETUNE"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "server!AudioEventType.SET_DISTORTION:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SET_DISTORTION = "
                },
                {
                  "kind": "Content",
                  "text": "\"AUDIO.SET_DISTORTION\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "SET_DISTORTION"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "server!AudioEventType.SET_PLAYBACK_RATE:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SET_PLAYBACK_RATE = "
                },
                {
                  "kind": "Content",
                  "text": "\"AUDIO.SET_PLAYBACK_RATE\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "SET_PLAYBACK_RATE"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "server!AudioEventType.SET_POSITION:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SET_POSITION = "
                },
                {
                  "kind": "Content",
                  "text": "\"AUDIO.SET_POSITION\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "SET_POSITION"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "server!AudioEventType.SET_REFERENCE_DISTANCE:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SET_REFERENCE_DISTANCE = "
                },
                {
                  "kind": "Content",
                  "text": "\"AUDIO.SET_REFERENCE_DISTANCE\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "SET_REFERENCE_DISTANCE"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "server!AudioEventType.SET_VOLUME:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SET_VOLUME = "
                },
                {
                  "kind": "Content",
                  "text": "\"AUDIO.SET_VOLUME\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "SET_VOLUME"
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "server!AudioManager:class",
          "docComment": "/**\n * Manages audio instances in a world.\n *\n * @remarks\n *\n * The AudioManager is created internally as a singleton for each {@link World} instance in a game server. It allows retrieval of all loaded audio, entity attached audio, looped audio, and more.\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `AudioManager` class.\n *\n * @example\n * ```typescript\n * // Stop all audio in the world\n * const audioManager = world.audioManager;\n * audioManager.getAllAudios().map(audio => audio.pause());\n * ```\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default class AudioManager "
            }
          ],
          "fileUrlPath": "src/world/audios/AudioManager.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "AudioManager",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "server!AudioManager#getAllAudios:member(1)",
              "docComment": "/**\n * Retrieves all loaded audio instances for the world.\n *\n * @returns An array of audio instances.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAllAudios(): "
                },
                {
                  "kind": "Reference",
                  "text": "Audio",
                  "canonicalReference": "server!Audio:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getAllAudios"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!AudioManager#getAllEntityAttachedAudios:member(1)",
              "docComment": "/**\n * Retrieves all loaded audio instances attached to a specific entity.\n *\n * @param entity - The entity to get attached audio instances for.\n *\n * @returns An array of audio instances.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAllEntityAttachedAudios(entity: "
                },
                {
                  "kind": "Reference",
                  "text": "Entity",
                  "canonicalReference": "server!Entity:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Audio",
                  "canonicalReference": "server!Audio:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "entity",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getAllEntityAttachedAudios"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!AudioManager#getAllLoopedAudios:member(1)",
              "docComment": "/**\n * Retrieves all looped audio instances for the world.\n *\n * @returns An array of audio instances.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAllLoopedAudios(): "
                },
                {
                  "kind": "Reference",
                  "text": "Audio",
                  "canonicalReference": "server!Audio:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getAllLoopedAudios"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!AudioManager#getAllOneshotAudios:member(1)",
              "docComment": "/**\n * Retrieves all oneshot (non-looped) audio instances for the world.\n *\n * @returns An array of audio instances.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAllOneshotAudios(): "
                },
                {
                  "kind": "Reference",
                  "text": "Audio",
                  "canonicalReference": "server!Audio:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getAllOneshotAudios"
            },
            {
              "kind": "Property",
              "canonicalReference": "server!AudioManager#world:member",
              "docComment": "/**\n * The world the audio manager is for.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get world(): "
                },
                {
                  "kind": "Reference",
                  "text": "World",
                  "canonicalReference": "server!World:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "world",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "server!AudioOptions:interface",
          "docComment": "/**\n * Options for creating an Audio instance.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AudioOptions "
            }
          ],
          "fileUrlPath": "src/world/audios/Audio.ts",
          "releaseTag": "Public",
          "name": "AudioOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!AudioOptions#attachedToEntity:member",
              "docComment": "/**\n * If set, audio playback will follow the entity's position.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "attachedToEntity?: "
                },
                {
                  "kind": "Reference",
                  "text": "Entity",
                  "canonicalReference": "server!Entity:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "attachedToEntity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!AudioOptions#detune:member",
              "docComment": "/**\n * The detuning of the audio in cents.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "detune?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "detune",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!AudioOptions#distortion:member",
              "docComment": "/**\n * The amount of distortion to apply to the audio.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "distortion?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "distortion",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!AudioOptions#duration:member",
              "docComment": "/**\n * The duration of the audio in seconds. Defaults to full duration.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "duration?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "duration",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!AudioOptions#loop:member",
              "docComment": "/**\n * Whether the audio should loop when it reaches the end. Defaults to false.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "loop?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "loop",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!AudioOptions#offset:member",
              "docComment": "/**\n * The offset time in seconds from which the audio should start playing.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "offset?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "offset",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!AudioOptions#playbackRate:member",
              "docComment": "/**\n * The playback speed of the audio. Defaults to 1.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "playbackRate?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "playbackRate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!AudioOptions#position:member",
              "docComment": "/**\n * The position in the world where the audio is played.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "position?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "position",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!AudioOptions#referenceDistance:member",
              "docComment": "/**\n * The reference distance for reducing volume as the audio source moves away from the listener.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "referenceDistance?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "referenceDistance",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!AudioOptions#uri:member",
              "docComment": "/**\n * The URI or path to the audio asset to be played.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "uri: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "uri",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!AudioOptions#volume:member",
              "docComment": "/**\n * The volume level of the audio. Defaults to 0.5.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "volume?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "volume",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "server!BaseCharacterController:class",
          "docComment": "/**\n * A base class for character controller implementations.\n *\n * @remarks\n *\n * The BaseCharacterController should be extended by a more specific character controller that you or a plugin implements.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default abstract class BaseCharacterController "
            }
          ],
          "fileUrlPath": "src/world/entities/controllers/BaseCharacterController.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "BaseCharacterController",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "server!BaseCharacterController:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `BaseCharacterController` class\n *\n * @param entity - The entity the controller is for.\n *\n * @param _options - Arbitrary options you may provide or omit for your controller implementation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(entity: "
                },
                {
                  "kind": "Reference",
                  "text": "Entity",
                  "canonicalReference": "server!Entity:class"
                },
                {
                  "kind": "Content",
                  "text": ", _options?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, unknown>"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "entity",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "_options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "server!BaseCharacterController#createSensorColliders:member(1)",
              "docComment": "/**\n * Override this method to create sensor colliders to be attached to the controlled entity when it spawns.\n *\n * @returns An array of colliders.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createSensorColliders(): "
                },
                {
                  "kind": "Reference",
                  "text": "Collider",
                  "canonicalReference": "server!Collider:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "createSensorColliders"
            },
            {
              "kind": "Property",
              "canonicalReference": "server!BaseCharacterController#entity:member",
              "docComment": "/**\n * The entity the controller is for.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly entity: "
                },
                {
                  "kind": "Reference",
                  "text": "Entity",
                  "canonicalReference": "server!Entity:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "entity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!BaseCharacterController#onTickPathfindingMovement:member",
              "docComment": "/**\n * A callback function for when the controller ticks pathfinding movement.\n *\n * @param destination - The destination to move to.\n *\n * @param deltaTimeMs - The delta time in milliseconds since the last tick.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onTickPathfindingMovement?: "
                },
                {
                  "kind": "Content",
                  "text": "(destination: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": ", deltaTimeMs: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onTickPathfindingMovement",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!BaseCharacterController#onTickPlayerMovement:member",
              "docComment": "/**\n * A callback function for when the controller ticks player movement.\n *\n * @param inputState - The current input state of the player.\n *\n * @param orientationState - The current orientation state of the player.\n *\n * @param deltaTimeMs - The delta time in milliseconds since the last tick.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onTickPlayerMovement?: "
                },
                {
                  "kind": "Content",
                  "text": "(inputState: "
                },
                {
                  "kind": "Reference",
                  "text": "PlayerInputState",
                  "canonicalReference": "server!PlayerInputState:type"
                },
                {
                  "kind": "Content",
                  "text": ", orientationState: "
                },
                {
                  "kind": "Reference",
                  "text": "PlayerOrientationState",
                  "canonicalReference": "server!PlayerOrientationState:type"
                },
                {
                  "kind": "Content",
                  "text": ", deltaTimeMs: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onTickPlayerMovement",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "server!BaseCharacterController#tickPathfindingMovement:member(1)",
              "docComment": "/**\n * Override this method to implement pathfinding movement logic for your character controller. NOTE: This method is not fully supported yet.\n *\n * @param destination - The destination target to move to.\n *\n * @param deltaTimeMs - The delta time in milliseconds since the last tick.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tickPathfindingMovement(destination: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": ", deltaTimeMs: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "destination",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "deltaTimeMs",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "tickPathfindingMovement"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!BaseCharacterController#tickPlayerMovement:member(1)",
              "docComment": "/**\n * Override this method to handle entity movements based on player input for your character controller.\n *\n * @param inputState - The current input state of the player.\n *\n * @param orientationState - The current orientation state of the player.\n *\n * @param deltaTimeMs - The delta time in milliseconds since the last tick.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tickPlayerMovement(inputState: "
                },
                {
                  "kind": "Reference",
                  "text": "PlayerInputState",
                  "canonicalReference": "server!PlayerInputState:type"
                },
                {
                  "kind": "Content",
                  "text": ", orientationState: "
                },
                {
                  "kind": "Reference",
                  "text": "PlayerOrientationState",
                  "canonicalReference": "server!PlayerOrientationState:type"
                },
                {
                  "kind": "Content",
                  "text": ", deltaTimeMs: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "inputState",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "orientationState",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "deltaTimeMs",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "tickPlayerMovement"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "server!Block:class",
          "docComment": "/**\n * Represents a block in a world.\n *\n * @remarks\n *\n * Instances of this class are created internally but made publicly available through various public facing API methods.\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `Block` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default class Block "
            }
          ],
          "fileUrlPath": "src/world/blocks/Block.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Block",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "server!Block#blockType:member",
              "docComment": "/**\n * The block type of the block.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly blockType: "
                },
                {
                  "kind": "Reference",
                  "text": "BlockType",
                  "canonicalReference": "server!BlockType:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "blockType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Block#globalCoordinate:member",
              "docComment": "/**\n * The global coordinate of the block.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly globalCoordinate: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "globalCoordinate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "server!BlockType:class",
          "docComment": "/**\n * An instance of a block type, supporting a variety of configuration options.\n *\n * @remarks\n *\n * Block types are created directly as instances. They support a variety of configuration options through the {@link BlockTypeOptions} constructor argument. Block types are registered with a {@link BlockTypeRegistry} instance, allowing you to create custom blocks with unique visual representations and behaviors.\n *\n * @example\n * ```typescript\n * const stoneBlockTypeId = 10;\n * world.blockTypeRegistry.registerBlockType(stoneBlockTypeId, new BlockType({\n *   id: stoneBlockTypeId,\n *   textureUri: 'assets/textures/stone.png',\n *   name: 'Stone',\n * }));\n *\n * // Create a stone block at coordinate 0, 1, 0\n * world.chunkLattice.setBlock({ x: 0, y: 1, z: 0 }, stoneBlockTypeId);\n * ```\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default class BlockType implements "
            },
            {
              "kind": "Reference",
              "text": "protocol.Serializable",
              "canonicalReference": "@hytopia.com/server-protocol!Serializable:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/world/blocks/BlockType.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "BlockType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "server!BlockType:constructor(1)",
              "docComment": "/**\n * Creates a new block type instance.\n *\n * @param world - The world the block type is for.\n *\n * @param options - The options for the block type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(options?: "
                },
                {
                  "kind": "Reference",
                  "text": "BlockTypeOptions",
                  "canonicalReference": "server!BlockTypeOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "server!BlockType#colliderOptions:member",
              "docComment": "/**\n * The collider options for the block type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get colliderOptions(): "
                },
                {
                  "kind": "Reference",
                  "text": "ColliderOptions",
                  "canonicalReference": "server!ColliderOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "colliderOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!BlockType#id:member",
              "docComment": "/**\n * The unique identifier for the block type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get id(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!BlockType#isMeshable:member",
              "docComment": "/**\n * Whether the block type is meshable.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isMeshable(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isMeshable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!BlockType#name:member",
              "docComment": "/**\n * The name of the block type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!BlockType#onEntityCollision:member",
              "docComment": "/**\n * A callback function that is invoked when an entity collides with blocks of this type.\n *\n * @param entity - The entity that collided with the block.\n *\n * @param started - Whether the collision started.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onEntityCollision?: "
                },
                {
                  "kind": "Content",
                  "text": "(this: "
                },
                {
                  "kind": "Reference",
                  "text": "BlockType",
                  "canonicalReference": "server!BlockType:class"
                },
                {
                  "kind": "Content",
                  "text": ", entity: "
                },
                {
                  "kind": "Reference",
                  "text": "Entity",
                  "canonicalReference": "server!Entity:class"
                },
                {
                  "kind": "Content",
                  "text": ", started: boolean) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onEntityCollision",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!BlockType#onEntityContactForce:member",
              "docComment": "/**\n * A callback function that is invoked when an entity contacts a block of this type.\n *\n * @param entity - The entity that contacted the block.\n *\n * @param contactForceData - The contact force data.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onEntityContactForce?: "
                },
                {
                  "kind": "Content",
                  "text": "(this: "
                },
                {
                  "kind": "Reference",
                  "text": "BlockType",
                  "canonicalReference": "server!BlockType:class"
                },
                {
                  "kind": "Content",
                  "text": ", entity: "
                },
                {
                  "kind": "Reference",
                  "text": "Entity",
                  "canonicalReference": "server!Entity:class"
                },
                {
                  "kind": "Content",
                  "text": ", contactForceData: "
                },
                {
                  "kind": "Reference",
                  "text": "ContactForceData",
                  "canonicalReference": "server!~ContactForceData:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onEntityContactForce",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!BlockType#textureUri:member",
              "docComment": "/**\n * The URI of the texture for the block type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get textureUri(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "textureUri",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "server!BlockTypeOptions:interface",
          "docComment": "/**\n * Options for creating a block type instance.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface BlockTypeOptions "
            }
          ],
          "fileUrlPath": "src/world/blocks/BlockType.ts",
          "releaseTag": "Public",
          "name": "BlockTypeOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!BlockTypeOptions#customColliderOptions:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "customColliderOptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "ColliderOptions",
                  "canonicalReference": "server!ColliderOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "customColliderOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!BlockTypeOptions#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!BlockTypeOptions#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!BlockTypeOptions#textureUri:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "textureUri: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "textureUri",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "server!BlockTypeRegistry:class",
          "docComment": "/**\n * Manages known block types in a world.\n *\n * @remarks\n *\n * Block type registries are created internally as a singleton for each {@link World} instance in a game server. A block type registry allows you to register and retrieve block types by their unique id for a world.\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `BlockTypeRegistry` class.\n *\n * @example\n * ```typescript\n * world.blockTypeRegistry.registerGenericBlockType({\n *   id: 15,\n *   textureUri: 'assets/textures/dirt.png',\n *   name: 'Dirt',\n * });\n * ```\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default class BlockTypeRegistry implements "
            },
            {
              "kind": "Reference",
              "text": "protocol.Serializable",
              "canonicalReference": "@hytopia.com/server-protocol!Serializable:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/world/blocks/BlockTypeRegistry.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "BlockTypeRegistry",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "server!BlockTypeRegistry#getAllBlockTypes:member(1)",
              "docComment": "/**\n * Get all registered block types.\n *\n * @returns An array of all registered block types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAllBlockTypes(): "
                },
                {
                  "kind": "Reference",
                  "text": "BlockType",
                  "canonicalReference": "server!BlockType:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getAllBlockTypes"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!BlockTypeRegistry#getBlockType:member(1)",
              "docComment": "/**\n * Get a registered block type by its id.\n *\n * @param id - The id of the block type to get.\n *\n * @returns The block type with the given id.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getBlockType(id: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "BlockType",
                  "canonicalReference": "server!BlockType:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getBlockType"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!BlockTypeRegistry#registerBlockType:member(1)",
              "docComment": "/**\n * Register a block type.\n *\n * @param id - The id of the block type to register.\n *\n * @param blockTypeReference - The block type to register.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "registerBlockType(id: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", blockTypeReference: "
                },
                {
                  "kind": "Reference",
                  "text": "BlockType",
                  "canonicalReference": "server!BlockType:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "blockTypeReference",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "registerBlockType"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!BlockTypeRegistry#registerGenericBlockType:member(1)",
              "docComment": "/**\n * Register a generic block type.\n *\n * @param blockTypeOptions - The options for the block type.\n *\n * @returns The registered block type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "registerGenericBlockType(blockTypeOptions: "
                },
                {
                  "kind": "Reference",
                  "text": "BlockTypeOptions",
                  "canonicalReference": "server!BlockTypeOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "BlockType",
                  "canonicalReference": "server!BlockType:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "blockTypeOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "registerGenericBlockType"
            },
            {
              "kind": "Property",
              "canonicalReference": "server!BlockTypeRegistry#world:member",
              "docComment": "/**\n * The world the block type registry is for.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get world(): "
                },
                {
                  "kind": "Reference",
                  "text": "World",
                  "canonicalReference": "server!World:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "world",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "server!BlockTypeRegistryEventPayload:namespace",
          "docComment": "/**\n * Payloads for events a BlockTypeRegistry instance can emit.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace BlockTypeRegistryEventPayload "
            }
          ],
          "fileUrlPath": "src/world/blocks/BlockTypeRegistry.ts",
          "releaseTag": "Public",
          "name": "BlockTypeRegistryEventPayload",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Interface",
              "canonicalReference": "server!BlockTypeRegistryEventPayload.RegisterBlockType:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface RegisterBlockType "
                }
              ],
              "releaseTag": "Public",
              "name": "RegisterBlockType",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!BlockTypeRegistryEventPayload.RegisterBlockType#blockType:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "blockType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BlockType",
                      "canonicalReference": "server!BlockType:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "blockType",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!BlockTypeRegistryEventPayload.RegisterBlockType#blockTypeRegistry:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "blockTypeRegistry: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BlockTypeRegistry",
                      "canonicalReference": "server!BlockTypeRegistry:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "blockTypeRegistry",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!BlockTypeRegistryEventPayload.RegisterBlockType#id:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "id: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "id",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "server!BlockTypeRegistryEventType:enum",
          "docComment": "/**\n * Event types a BlockTypeRegistry instance can emit.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum BlockTypeRegistryEventType "
            }
          ],
          "fileUrlPath": "src/world/blocks/BlockTypeRegistry.ts",
          "releaseTag": "Public",
          "name": "BlockTypeRegistryEventType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "server!BlockTypeRegistryEventType.REGISTER_BLOCK_TYPE:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "REGISTER_BLOCK_TYPE = "
                },
                {
                  "kind": "Content",
                  "text": "\"BLOCK_TYPE_REGISTRY.REGISTER_BLOCK_TYPE\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "REGISTER_BLOCK_TYPE"
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "server!ChatEventPayload:namespace",
          "docComment": "/**\n * Payloads for events a ChatManager instance can emit.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace ChatEventPayload "
            }
          ],
          "fileUrlPath": "src/world/chat/ChatManager.ts",
          "releaseTag": "Public",
          "name": "ChatEventPayload",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Interface",
              "canonicalReference": "server!ChatEventPayload.SendBroadcastMessage:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface SendBroadcastMessage "
                }
              ],
              "releaseTag": "Public",
              "name": "SendBroadcastMessage",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!ChatEventPayload.SendBroadcastMessage#color:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "color?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "color",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!ChatEventPayload.SendBroadcastMessage#message:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "message: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "message",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "server!ChatEventPayload.SendPlayerMessage:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface SendPlayerMessage "
                }
              ],
              "releaseTag": "Public",
              "name": "SendPlayerMessage",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!ChatEventPayload.SendPlayerMessage#color:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "color?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "color",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!ChatEventPayload.SendPlayerMessage#message:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "message: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "message",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!ChatEventPayload.SendPlayerMessage#player:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "player: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Player",
                      "canonicalReference": "server!Player:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "player",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "server!ChatEventType:enum",
          "docComment": "/**\n * Event types a ChatManager instance can emit.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum ChatEventType "
            }
          ],
          "fileUrlPath": "src/world/chat/ChatManager.ts",
          "releaseTag": "Public",
          "name": "ChatEventType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "server!ChatEventType.SEND_BROADCAST_MESSAGE:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SEND_BROADCAST_MESSAGE = "
                },
                {
                  "kind": "Content",
                  "text": "\"CHAT.SEND_BROADCAST_MESSAGE\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "SEND_BROADCAST_MESSAGE"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "server!ChatEventType.SEND_PLAYER_MESSAGE:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SEND_PLAYER_MESSAGE = "
                },
                {
                  "kind": "Content",
                  "text": "\"CHAT.SEND_PLAYER_MESSAGE\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "SEND_PLAYER_MESSAGE"
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "server!ChatManager:class",
          "docComment": "/**\n * Manages chat and commands in a world.\n *\n * @remarks\n *\n * The ChatManager is created internally as a singleton for each {@link World} instance in a game server. The ChatManager allows you to broadcast messages, send messages to specific players, and register commands that can be used in chat to execute game logic.\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `ChatManager` class.\n *\n * @example\n * ```typescript\n * world.chatManager.registerCommand('/kick', (player, args, message) => {\n *   const admins = [ 'arkdev', 'testuser123' ];\n *   if (admins.includes(player.username)) {\n *     const targetUsername = args[0];\n *     const targetPlayer = world.playerManager.getConnectedPlayerByUsername(targetUsername);\n *\n *     if (targetPlayer) {\n *       targetPlayer.disconnect();\n *     }\n *   }\n * });\n * ```\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default class ChatManager "
            }
          ],
          "fileUrlPath": "src/world/chat/ChatManager.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ChatManager",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "server!ChatManager#registerCommand:member(1)",
              "docComment": "/**\n * Register a command and its callback.\n *\n * @param command - The command to register.\n *\n * @param callback - The callback function to execute when the command is used.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "registerCommand(command: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "CommandCallback",
                  "canonicalReference": "server!CommandCallback:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "command",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "registerCommand"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!ChatManager#sendBroadcastMessage:member(1)",
              "docComment": "/**\n * Send a broadcast message to all players in the world.\n *\n * @param message - The message to send.\n *\n * @param color - The color of the message as a hex color code, excluding #.\n *\n * @example\n * ```typescript\n * chatManager.sendBroadcastMessage('Hello, world!', 'FF00AA');\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sendBroadcastMessage(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", color?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "sendBroadcastMessage"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!ChatManager#sendPlayerMessage:member(1)",
              "docComment": "/**\n * Send a message to a specific player, only visible to them.\n *\n * @param player - The player to send the message to.\n *\n * @param message - The message to send.\n *\n * @param color - The color of the message as a hex color code, excluding #.\n *\n * @example\n * ```typescript\n * chatManager.sendPlayerMessage(player, 'Hello, player!', 'FF00AA');\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sendPlayerMessage(player: "
                },
                {
                  "kind": "Reference",
                  "text": "Player",
                  "canonicalReference": "server!Player:class"
                },
                {
                  "kind": "Content",
                  "text": ", message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", color?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "player",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "sendPlayerMessage"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!ChatManager#unregisterCommand:member(1)",
              "docComment": "/**\n * Unregister a command.\n *\n * @param command - The command to unregister.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "unregisterCommand(command: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "command",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "unregisterCommand"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "server!Chunk:class",
          "docComment": "/**\n * A 16^3 chunk of blocks. Used to represent a world's terrain.\n *\n * @remarks\n *\n * Chunks make up the bulk of the terrain in a world. Chunks are fixed size, each containing 16^3 possible blocks as a 16x16x16 cube. Chunks can be spawned, despawned, have their unique blocks set or removed, and more. Chunks represent their internal block coordinates in local space, meaning only coordinates x: 0...15, y: 0...15, z: 0...15 are valid.\n *\n * The Chunk follows a spawn and despawn lifecycle pattern. When you create a chunk, when you're ready to load it in your world you use .spawn(). To remove it, you use .despawn().\n *\n * Use .setBlock() to set the block type id at a specific local cooridnate. Block type ids are ones that have been registered in the {@link BlockTypeRegistry} associated with the {@link World} the chunk belongs to. A block type id of 0 is used to represent no block. Removing a block is done by .setBlock(localCoordinate, 0).\n *\n * @example\n * ```typescript\n * // Assume we previously registered a stone block with type id of 10..\n *\n * const chunk = new Chunk();\n *\n * chunk.setBlock({ x: 0, y: 0, z: 0 }, 10); // Set the block at 0, 0, 0 to stone\n * chunk.spawn(world, { x: 16, y: 0, z: 16 }); // Spawn the chunk at global coordinate 16, 0, 16\n * ```\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default class Chunk implements "
            },
            {
              "kind": "Reference",
              "text": "protocol.Serializable",
              "canonicalReference": "@hytopia.com/server-protocol!Serializable:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/world/blocks/Chunk.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Chunk",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "server!Chunk:constructor(1)",
              "docComment": "/**\n * Creates a new chunk instance.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": []
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Chunk.blockIndexToLocalCoordinate:member(1)",
              "docComment": "/**\n * Convert a block index to a local coordinate.\n *\n * @param index - The index of the block to convert.\n *\n * @returns The local coordinate of the block.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static blockIndexToLocalCoordinate(index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "blockIndexToLocalCoordinate"
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Chunk#blocks:member",
              "docComment": "/**\n * The blocks in the chunk as a flat Uint8Array[4096], each index as 0 or a block type id.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get blocks(): "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly",
                  "canonicalReference": "!Readonly:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Uint8Array",
                  "canonicalReference": "!Uint8Array:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "blocks",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Chunk#despawn:member(1)",
              "docComment": "/**\n * Despawn the chunk from the world.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "despawn(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "despawn"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Chunk.globalCoordinateToLocalCoordinate:member(1)",
              "docComment": "/**\n * Convert a global coordinate to a local coordinate.\n *\n * @param globalCoordinate - The global coordinate to convert.\n *\n * @returns The local coordinate.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static globalCoordinateToLocalCoordinate(globalCoordinate: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "globalCoordinate",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "globalCoordinateToLocalCoordinate"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Chunk.globalCoordinateToOriginCoordinate:member(1)",
              "docComment": "/**\n * Convert a global coordinate to an origin coordinate.\n *\n * @param globalCoordinate - The global coordinate to convert.\n *\n * @returns The origin coordinate.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static globalCoordinateToOriginCoordinate(globalCoordinate: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "globalCoordinate",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "globalCoordinateToOriginCoordinate"
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Chunk#isSimulated:member",
              "docComment": "/**\n * Whether the chunk is actively simulated in the internal physics engine.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isSimulated(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isSimulated",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Chunk#isSpawned:member",
              "docComment": "/**\n * Whether the chunk has been spawned.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isSpawned(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isSpawned",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Chunk.isValidOriginCoordinate:member(1)",
              "docComment": "/**\n * Check if an origin coordinate is valid.\n *\n * @param coordinate - The coordinate to check.\n *\n * @returns Whether the coordinate is valid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static isValidOriginCoordinate(coordinate: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "coordinate",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "isValidOriginCoordinate"
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Chunk#originCoordinate:member",
              "docComment": "/**\n * The origin coordinate of the chunk.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get originCoordinate(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "originCoordinate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Chunk#setBlock:member(1)",
              "docComment": "/**\n * Set the block at a specific local coordinate by block type id.\n *\n * @param localCoordinate - The local coordinate of the block to set.\n *\n * @param blockTypeId - The block type id to set.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setBlock(localCoordinate: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": ", blockTypeId: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "localCoordinate",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "blockTypeId",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setBlock"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Chunk#spawn:member(1)",
              "docComment": "/**\n * Spawn the chunk in the world.\n *\n * @param world - The world to spawn the chunk in.\n *\n * @param originCoordinate - The origin coordinate of the chunk.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "spawn(world: "
                },
                {
                  "kind": "Reference",
                  "text": "World",
                  "canonicalReference": "server!World:class"
                },
                {
                  "kind": "Content",
                  "text": ", originCoordinate: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "world",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "originCoordinate",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "spawn"
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Chunk#world:member",
              "docComment": "/**\n * The world the chunk belongs to.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get world(): "
                },
                {
                  "kind": "Reference",
                  "text": "World",
                  "canonicalReference": "server!World:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "world",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "server!ChunkEventPayload:namespace",
          "docComment": "/**\n * Payloads for events a Chunk instance can emit.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace ChunkEventPayload "
            }
          ],
          "fileUrlPath": "src/world/blocks/Chunk.ts",
          "releaseTag": "Public",
          "name": "ChunkEventPayload",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Interface",
              "canonicalReference": "server!ChunkEventPayload.Despawn:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface Despawn "
                }
              ],
              "releaseTag": "Public",
              "name": "Despawn",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!ChunkEventPayload.Despawn#chunk:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "chunk: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Chunk",
                      "canonicalReference": "server!Chunk:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "chunk",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "server!ChunkEventPayload.SetBlock:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface SetBlock "
                }
              ],
              "releaseTag": "Public",
              "name": "SetBlock",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!ChunkEventPayload.SetBlock#blockTypeId:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "blockTypeId: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "blockTypeId",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!ChunkEventPayload.SetBlock#chunk:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "chunk: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Chunk",
                      "canonicalReference": "server!Chunk:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "chunk",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!ChunkEventPayload.SetBlock#globalCoordinate:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "globalCoordinate: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "globalCoordinate",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!ChunkEventPayload.SetBlock#localCoordinate:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "localCoordinate: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "localCoordinate",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "server!ChunkEventPayload.Spawn:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface Spawn "
                }
              ],
              "releaseTag": "Public",
              "name": "Spawn",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!ChunkEventPayload.Spawn#chunk:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "chunk: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Chunk",
                      "canonicalReference": "server!Chunk:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "chunk",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "server!ChunkEventType:enum",
          "docComment": "/**\n * Event types a Chunk instance can emit.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum ChunkEventType "
            }
          ],
          "fileUrlPath": "src/world/blocks/Chunk.ts",
          "releaseTag": "Public",
          "name": "ChunkEventType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "server!ChunkEventType.DESPAWN:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DESPAWN = "
                },
                {
                  "kind": "Content",
                  "text": "\"CHUNK.DESPAWN\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "DESPAWN"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "server!ChunkEventType.SET_BLOCK:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SET_BLOCK = "
                },
                {
                  "kind": "Content",
                  "text": "\"CHUNK.SET_BLOCK\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "SET_BLOCK"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "server!ChunkEventType.SPAWN:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SPAWN = "
                },
                {
                  "kind": "Content",
                  "text": "\"CHUNK.SPAWN\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "SPAWN"
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "server!ChunkLattice:class",
          "docComment": "/**\n * A lattice of chunks that represent a world's terrain.\n *\n * @remarks\n *\n * The ChunkLattice lattice tracks the current terrain of a world, comprised of {@link Chunk} instances.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default class ChunkLattice "
            }
          ],
          "fileUrlPath": "src/world/blocks/ChunkLattice.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ChunkLattice",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "server!ChunkLattice:constructor(1)",
              "docComment": "/**\n * Creates a new chunk lattice instance.\n *\n * @param world - The world the chunk lattice is for.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(world: "
                },
                {
                  "kind": "Reference",
                  "text": "World",
                  "canonicalReference": "server!World:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "world",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "server!ChunkLattice#getAllChunks:member(1)",
              "docComment": "/**\n * Get all chunks in the lattice.\n *\n * @returns An array of all chunks in the lattice.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAllChunks(): "
                },
                {
                  "kind": "Reference",
                  "text": "Chunk",
                  "canonicalReference": "server!Chunk:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getAllChunks"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!ChunkLattice#getChunk:member(1)",
              "docComment": "/**\n * Get a chunk by its origin coordinate.\n *\n * @param originCoordinate - The origin coordinate of the chunk to get.\n *\n * @returns The chunk at the given origin coordinate or undefined if not found.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getChunk(originCoordinate: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Chunk",
                  "canonicalReference": "server!Chunk:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "originCoordinate",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getChunk"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!ChunkLattice#hasChunk:member(1)",
              "docComment": "/**\n * Check if a chunk exists by its origin coordinate.\n *\n * @param originCoordinate - The origin coordinate of the chunk to check.\n *\n * @returns Whether the chunk exists.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasChunk(originCoordinate: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "originCoordinate",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "hasChunk"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!ChunkLattice#setBlock:member(1)",
              "docComment": "/**\n * Set the block at a global coordinate by block type id, automatically creating a chunk if it doesn't exist.\n *\n * @param globalCoordinate - The global coordinate of the block to set.\n *\n * @param blockTypeId - The block type id to set.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setBlock(globalCoordinate: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": ", blockTypeId: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "globalCoordinate",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "blockTypeId",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setBlock"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "server!Collider:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default class Collider "
            }
          ],
          "fileUrlPath": "src/world/physics/Collider.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Collider",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "server!Collider:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Collider` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(colliderOptions: "
                },
                {
                  "kind": "Reference",
                  "text": "ColliderOptions",
                  "canonicalReference": "server!ColliderOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "colliderOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Collider#addToSimulation:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addToSimulation(simulation: "
                },
                {
                  "kind": "Reference",
                  "text": "Simulation",
                  "canonicalReference": "server!Simulation:class"
                },
                {
                  "kind": "Content",
                  "text": ", parentRigidBody?: "
                },
                {
                  "kind": "Reference",
                  "text": "RigidBody",
                  "canonicalReference": "server!RigidBody:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "simulation",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "parentRigidBody",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addToSimulation"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Collider#enableCollisionEvents:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enableCollisionEvents(enabled: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "enabled",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "enableCollisionEvents"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Collider#enableContactForceEvents:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enableContactForceEvents(enabled: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "enabled",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "enableContactForceEvents"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Collider#getCollisionGroups:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCollisionGroups(): "
                },
                {
                  "kind": "Reference",
                  "text": "CollisionGroups",
                  "canonicalReference": "server!CollisionGroups:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getCollisionGroups"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Collider#getFriction:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getFriction(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getFriction"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Collider#getRelativeRotation:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getRelativeRotation(): "
                },
                {
                  "kind": "Reference",
                  "text": "Rotation",
                  "canonicalReference": "server!Rotation:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getRelativeRotation"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Collider#getRelativeTranslation:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getRelativeTranslation(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getRelativeTranslation"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Collider#getRestitution:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getRestitution(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getRestitution"
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Collider#isEnabled:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isEnabled(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isEnabled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Collider#isRemoved:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isRemoved(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isRemoved",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Collider#isSensor:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isSensor(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isSensor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Collider#isSimulated:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isSimulated(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isSimulated",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Collider#parentRigidBody:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get parentRigidBody(): "
                },
                {
                  "kind": "Reference",
                  "text": "RigidBody",
                  "canonicalReference": "server!RigidBody:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parentRigidBody",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Collider#rawCollider:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get rawCollider(): "
                },
                {
                  "kind": "Reference",
                  "text": "RAPIER.Collider",
                  "canonicalReference": "@dimforge/rapier3d-compat!Collider:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "rawCollider",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Collider#removeFromSimulation:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeFromSimulation(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "removeFromSimulation"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Collider#setBounciness:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setBounciness(bounciness: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "bounciness",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setBounciness"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Collider#setCollisionGroups:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setCollisionGroups(collisionGroups: "
                },
                {
                  "kind": "Reference",
                  "text": "CollisionGroups",
                  "canonicalReference": "server!CollisionGroups:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "collisionGroups",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setCollisionGroups"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Collider#setEnabled:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setEnabled(enabled: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "enabled",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setEnabled"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Collider#setFriction:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setFriction(friction: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "friction",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setFriction"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Collider#setMass:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setMass(mass: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mass",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setMass"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Collider#setOnCollision:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setOnCollision(callback: "
                },
                {
                  "kind": "Reference",
                  "text": "CollisionCallback",
                  "canonicalReference": "server!CollisionCallback:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setOnCollision"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Collider#setRelativeRotation:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setRelativeRotation(rotation: "
                },
                {
                  "kind": "Reference",
                  "text": "Rotation",
                  "canonicalReference": "server!Rotation:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "rotation",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setRelativeRotation"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Collider#setRelativeTranslation:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setRelativeTranslation(translation: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "translation",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setRelativeTranslation"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Collider#setSensor:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setSensor(sensor: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "sensor",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setSensor"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Collider#setTag:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setTag(tag: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tag",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setTag"
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Collider#tag:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get tag(): "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tag",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "server!ColliderMap:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default class ColliderMap "
            }
          ],
          "fileUrlPath": "src/world/physics/ColliderMap.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ColliderMap",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "server!ColliderMap#getColliderBlockType:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getColliderBlockType(collider: "
                },
                {
                  "kind": "Reference",
                  "text": "Collider",
                  "canonicalReference": "server!Collider:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "BlockType",
                  "canonicalReference": "server!BlockType:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "collider",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getColliderBlockType"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!ColliderMap#getColliderCollisionCallback:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getColliderCollisionCallback(collider: "
                },
                {
                  "kind": "Reference",
                  "text": "Collider",
                  "canonicalReference": "server!Collider:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "CollisionCallback",
                  "canonicalReference": "server!CollisionCallback:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "collider",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getColliderCollisionCallback"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!ColliderMap#getRawColliderBlockType:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getRawColliderBlockType(collider: "
                },
                {
                  "kind": "Reference",
                  "text": "RAPIER.Collider",
                  "canonicalReference": "@dimforge/rapier3d-compat!Collider:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "BlockType",
                  "canonicalReference": "server!BlockType:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "collider",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getRawColliderBlockType"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!ColliderMap#getRawColliderCollisionCallback:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getRawColliderCollisionCallback(collider: "
                },
                {
                  "kind": "Reference",
                  "text": "RAPIER.Collider",
                  "canonicalReference": "@dimforge/rapier3d-compat!Collider:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "CollisionCallback",
                  "canonicalReference": "server!CollisionCallback:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "collider",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getRawColliderCollisionCallback"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!ColliderMap#getRawRigidBodyEntity:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getRawRigidBodyEntity(rigidBody: "
                },
                {
                  "kind": "Reference",
                  "text": "RAPIER.RigidBody",
                  "canonicalReference": "@dimforge/rapier3d-compat!RigidBody:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Entity",
                  "canonicalReference": "server!Entity:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "rigidBody",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getRawRigidBodyEntity"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!ColliderMap#removeColliderBlockType:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeColliderBlockType(collider: "
                },
                {
                  "kind": "Reference",
                  "text": "Collider",
                  "canonicalReference": "server!Collider:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "collider",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "removeColliderBlockType"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!ColliderMap#removeColliderCollisionCallback:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeColliderCollisionCallback(collider: "
                },
                {
                  "kind": "Reference",
                  "text": "Collider",
                  "canonicalReference": "server!Collider:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "collider",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "removeColliderCollisionCallback"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!ColliderMap#removeRawRigidBodyEntity:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeRawRigidBodyEntity(rigidBody: "
                },
                {
                  "kind": "Reference",
                  "text": "RAPIER.RigidBody",
                  "canonicalReference": "@dimforge/rapier3d-compat!RigidBody:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "rigidBody",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "removeRawRigidBodyEntity"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!ColliderMap#setColliderBlockType:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setColliderBlockType(collider: "
                },
                {
                  "kind": "Reference",
                  "text": "Collider",
                  "canonicalReference": "server!Collider:class"
                },
                {
                  "kind": "Content",
                  "text": ", block: "
                },
                {
                  "kind": "Reference",
                  "text": "BlockType",
                  "canonicalReference": "server!BlockType:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "collider",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "block",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setColliderBlockType"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!ColliderMap#setColliderCollisionCallback:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setColliderCollisionCallback(collider: "
                },
                {
                  "kind": "Reference",
                  "text": "Collider",
                  "canonicalReference": "server!Collider:class"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "CollisionCallback",
                  "canonicalReference": "server!CollisionCallback:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "collider",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setColliderCollisionCallback"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!ColliderMap#setRawRigidBodyEntity:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setRawRigidBodyEntity(rigidBody: "
                },
                {
                  "kind": "Reference",
                  "text": "RAPIER.RigidBody",
                  "canonicalReference": "@dimforge/rapier3d-compat!RigidBody:class"
                },
                {
                  "kind": "Content",
                  "text": ", entity: "
                },
                {
                  "kind": "Reference",
                  "text": "Entity",
                  "canonicalReference": "server!Entity:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "rigidBody",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "entity",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setRawRigidBodyEntity"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "server!ColliderOptions:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ColliderOptions "
            }
          ],
          "fileUrlPath": "src/world/physics/Collider.ts",
          "releaseTag": "Public",
          "name": "ColliderOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!ColliderOptions#borderRadius:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "borderRadius?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "borderRadius",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!ColliderOptions#bounciness:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bounciness?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "bounciness",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!ColliderOptions#collisionGroups:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collisionGroups?: "
                },
                {
                  "kind": "Reference",
                  "text": "CollisionGroups",
                  "canonicalReference": "server!CollisionGroups:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "collisionGroups",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!ColliderOptions#enabled:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enabled?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "enabled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!ColliderOptions#friction:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "friction?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "friction",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!ColliderOptions#halfExtents:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "halfExtents?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "halfExtents",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!ColliderOptions#halfHeight:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "halfHeight?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "halfHeight",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!ColliderOptions#isSensor:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isSensor?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "isSensor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!ColliderOptions#mass:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mass?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "mass",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!ColliderOptions#onCollision:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onCollision?: "
                },
                {
                  "kind": "Reference",
                  "text": "CollisionCallback",
                  "canonicalReference": "server!CollisionCallback:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onCollision",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!ColliderOptions#parentRigidBody:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parentRigidBody?: "
                },
                {
                  "kind": "Reference",
                  "text": "RigidBody",
                  "canonicalReference": "server!RigidBody:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "parentRigidBody",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!ColliderOptions#radius:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "radius?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "radius",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!ColliderOptions#relativeRotation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "relativeRotation?: "
                },
                {
                  "kind": "Reference",
                  "text": "Rotation",
                  "canonicalReference": "server!Rotation:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "relativeRotation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!ColliderOptions#relativeTranslation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "relativeTranslation?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "relativeTranslation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!ColliderOptions#shape:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "shape: "
                },
                {
                  "kind": "Reference",
                  "text": "ColliderShape",
                  "canonicalReference": "server!ColliderShape:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "shape",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!ColliderOptions#simulation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "simulation?: "
                },
                {
                  "kind": "Reference",
                  "text": "Simulation",
                  "canonicalReference": "server!Simulation:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "simulation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!ColliderOptions#tag:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tag?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tag",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "server!ColliderShape:enum",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum ColliderShape "
            }
          ],
          "fileUrlPath": "src/world/physics/Collider.ts",
          "releaseTag": "Public",
          "name": "ColliderShape",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "server!ColliderShape.BALL:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "BALL = "
                },
                {
                  "kind": "Content",
                  "text": "\"ball\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "BALL"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "server!ColliderShape.BLOCK:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "BLOCK = "
                },
                {
                  "kind": "Content",
                  "text": "\"block\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "BLOCK"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "server!ColliderShape.CAPSULE:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CAPSULE = "
                },
                {
                  "kind": "Content",
                  "text": "\"capsule\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "CAPSULE"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "server!ColliderShape.CONE:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CONE = "
                },
                {
                  "kind": "Content",
                  "text": "\"cone\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "CONE"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "server!ColliderShape.CYLINDER:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CYLINDER = "
                },
                {
                  "kind": "Content",
                  "text": "\"cylinder\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "CYLINDER"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "server!ColliderShape.ROUND_CYLINDER:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ROUND_CYLINDER = "
                },
                {
                  "kind": "Content",
                  "text": "\"round-cylinder\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "ROUND_CYLINDER"
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "server!CollisionCallback:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CollisionCallback = "
            },
            {
              "kind": "Content",
              "text": "(other: "
            },
            {
              "kind": "Reference",
              "text": "BlockType",
              "canonicalReference": "server!BlockType:class"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Entity",
              "canonicalReference": "server!Entity:class"
            },
            {
              "kind": "Content",
              "text": ", started: boolean) => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/world/physics/ColliderMap.ts",
          "releaseTag": "Public",
          "name": "CollisionCallback",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Enum",
          "canonicalReference": "server!CollisionGroup:enum",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum CollisionGroup "
            }
          ],
          "fileUrlPath": "src/world/physics/CollisionGroupsBuilder.ts",
          "releaseTag": "Public",
          "name": "CollisionGroup",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "server!CollisionGroup.ALL:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ALL = "
                },
                {
                  "kind": "Content",
                  "text": "65535"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "ALL"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "server!CollisionGroup.BLOCK:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "BLOCK = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "BLOCK"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "server!CollisionGroup.ENTITY:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ENTITY = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "ENTITY"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "server!CollisionGroup.ENTITY_SENSOR:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ENTITY_SENSOR = "
                },
                {
                  "kind": "Content",
                  "text": "4"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "ENTITY_SENSOR"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "server!CollisionGroup.PLAYER:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PLAYER = "
                },
                {
                  "kind": "Content",
                  "text": "8"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "PLAYER"
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "server!CollisionGroups:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CollisionGroups = "
            },
            {
              "kind": "Content",
              "text": "{\n    belongsTo: "
            },
            {
              "kind": "Reference",
              "text": "CollisionGroup",
              "canonicalReference": "server!CollisionGroup:enum"
            },
            {
              "kind": "Content",
              "text": "[];\n    collidesWith: "
            },
            {
              "kind": "Reference",
              "text": "CollisionGroup",
              "canonicalReference": "server!CollisionGroup:enum"
            },
            {
              "kind": "Content",
              "text": "[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/world/physics/CollisionGroupsBuilder.ts",
          "releaseTag": "Public",
          "name": "CollisionGroups",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "server!CollisionGroupsBuilder:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default class CollisionGroupsBuilder "
            }
          ],
          "fileUrlPath": "src/world/physics/CollisionGroupsBuilder.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "CollisionGroupsBuilder",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "server!CollisionGroupsBuilder.buildRawCollisionGroups:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static buildRawCollisionGroups(collisionGroups: "
                },
                {
                  "kind": "Reference",
                  "text": "CollisionGroups",
                  "canonicalReference": "server!CollisionGroups:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "RawCollisionGroups",
                  "canonicalReference": "server!RawCollisionGroups:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "collisionGroups",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "buildRawCollisionGroups"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!CollisionGroupsBuilder.decodeCollisionGroups:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static decodeCollisionGroups(collisionGroups: "
                },
                {
                  "kind": "Reference",
                  "text": "CollisionGroups",
                  "canonicalReference": "server!CollisionGroups:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "DecodedCollisionGroups",
                  "canonicalReference": "server!DecodedCollisionGroups:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "collisionGroups",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "decodeCollisionGroups"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!CollisionGroupsBuilder.decodeRawCollisionGroups:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static decodeRawCollisionGroups(groups: "
                },
                {
                  "kind": "Reference",
                  "text": "RawCollisionGroups",
                  "canonicalReference": "server!RawCollisionGroups:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "CollisionGroups",
                  "canonicalReference": "server!CollisionGroups:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "groups",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "decodeRawCollisionGroups"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!CollisionGroupsBuilder.isDefaultCollisionGroups:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static isDefaultCollisionGroups(collisionGroups: "
                },
                {
                  "kind": "Reference",
                  "text": "CollisionGroups",
                  "canonicalReference": "server!CollisionGroups:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "collisionGroups",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "isDefaultCollisionGroups"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "server!CollisionObject:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CollisionObject = "
            },
            {
              "kind": "Reference",
              "text": "BlockType",
              "canonicalReference": "server!BlockType:class"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Entity",
              "canonicalReference": "server!Entity:class"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "CollisionCallback",
              "canonicalReference": "server!CollisionCallback:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/world/physics/ColliderMap.ts",
          "releaseTag": "Public",
          "name": "CollisionObject",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "server!CommandCallback:type",
          "docComment": "/**\n * A callback function for a chat command.\n *\n * @param player - The player that sent the command.\n *\n * @param args - An array of arguments, comprised of all space separated text after the command.\n *\n * @param message - The full message of the command.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CommandCallback = "
            },
            {
              "kind": "Content",
              "text": "(player: "
            },
            {
              "kind": "Reference",
              "text": "Player",
              "canonicalReference": "server!Player:class"
            },
            {
              "kind": "Content",
              "text": ", args: string[], message: string) => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/world/chat/ChatManager.ts",
          "releaseTag": "Public",
          "name": "CommandCallback",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "server!DecodedCollisionGroups:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DecodedCollisionGroups = "
            },
            {
              "kind": "Content",
              "text": "{\n    belongsTo: string[];\n    collidesWith: string[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/world/physics/CollisionGroupsBuilder.ts",
          "releaseTag": "Public",
          "name": "DecodedCollisionGroups",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "server!DEFAULT_ENTITY_RIGID_BODY_OPTIONS:var",
          "docComment": "/**\n * The default rigid body options when EntityOptions.rigidBodyOptions is not provided.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DEFAULT_ENTITY_RIGID_BODY_OPTIONS: "
            },
            {
              "kind": "Reference",
              "text": "RigidBodyOptions",
              "canonicalReference": "server!RigidBodyOptions:interface"
            }
          ],
          "fileUrlPath": "src/world/entities/Entity.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DEFAULT_ENTITY_RIGID_BODY_OPTIONS",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "server!DefaultCharacterController:class",
          "docComment": "/**\n * The default character controller implementation.\n *\n * @remarks\n *\n * This class extends {@link BaseCharacterController} and implements the default movement logic for a character entity. This is used as the default for players when they join your game. This class may be extended if you'd like to implement additional logic on top of the DefaultCharacterController implementation.\n *\n * @example\n * ```typescript\n * // Create a custom character controller for myEntity, prior to spawning it.\n * myEntity.createCustomCharacterController = () => {\n *   return new DefaultCharacterController(myEntity, {\n *     jumpVelocity: 10,\n *     runVelocity: 8,\n *     walkVelocity: 4,\n *   });\n * };\n *\n * // Spawn the entity in the world.\n * myEntity.spawn(world, { x: 53, y: 10, z: 23 });\n * ```\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default class DefaultCharacterController extends "
            },
            {
              "kind": "Reference",
              "text": "BaseCharacterController",
              "canonicalReference": "server!BaseCharacterController:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/world/entities/controllers/DefaultCharacterController.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DefaultCharacterController",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "server!DefaultCharacterController:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `DefaultCharacterController` class\n *\n * @param entity - The entity the controller is for.\n *\n * @param options - Options for the controller.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(entity: "
                },
                {
                  "kind": "Reference",
                  "text": "Entity",
                  "canonicalReference": "server!Entity:class"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "DefaultCharacterControllerOptions",
                  "canonicalReference": "server!DefaultCharacterControllerOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "entity",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "server!DefaultCharacterController#canJump:member",
              "docComment": "/**\n * A function allowing custom logic to determine if the entity can jump.\n *\n * @param this - The character controller instance.\n *\n * @returns Whether the entity can jump.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canJump: "
                },
                {
                  "kind": "Content",
                  "text": "(this: "
                },
                {
                  "kind": "Reference",
                  "text": "DefaultCharacterController",
                  "canonicalReference": "server!DefaultCharacterController:class"
                },
                {
                  "kind": "Content",
                  "text": ") => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "canJump",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!DefaultCharacterController#canRun:member",
              "docComment": "/**\n * A function allowing custom logic to determine if the entity can run.\n *\n * @param this - The character controller instance.\n *\n * @returns Whether the entity can run.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canRun: "
                },
                {
                  "kind": "Content",
                  "text": "(this: "
                },
                {
                  "kind": "Reference",
                  "text": "DefaultCharacterController",
                  "canonicalReference": "server!DefaultCharacterController:class"
                },
                {
                  "kind": "Content",
                  "text": ") => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "canRun",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!DefaultCharacterController#canWalk:member",
              "docComment": "/**\n * A function allowing custom logic to determine if the entity can walk.\n *\n * @param this - The character controller instance.\n *\n * @returns Whether the entity can walk.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canWalk: "
                },
                {
                  "kind": "Content",
                  "text": "(this: "
                },
                {
                  "kind": "Reference",
                  "text": "DefaultCharacterController",
                  "canonicalReference": "server!DefaultCharacterController:class"
                },
                {
                  "kind": "Content",
                  "text": ") => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "canWalk",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "server!DefaultCharacterController#createSensorColliders:member(1)",
              "docComment": "/**\n * Creates the sensor colliders for the character controller, overriding the default implementation.\n *\n * @returns An array of colliders.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createSensorColliders(): "
                },
                {
                  "kind": "Reference",
                  "text": "Collider",
                  "canonicalReference": "server!Collider:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "createSensorColliders"
            },
            {
              "kind": "Property",
              "canonicalReference": "server!DefaultCharacterController#isGrounded:member",
              "docComment": "/**\n * Whether the entity is grounded.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isGrounded(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isGrounded",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!DefaultCharacterController#isOnPlatform:member",
              "docComment": "/**\n * Whether the entity is on a platform, a platform is any entity with a kinematic rigid body.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isOnPlatform(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isOnPlatform",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!DefaultCharacterController#jumpVelocity:member",
              "docComment": "/**\n * The upward velocity applied to the entity when it jumps.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "jumpVelocity: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "jumpVelocity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!DefaultCharacterController#platform:member",
              "docComment": "/**\n * The platform the entity is on, if any.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get platform(): "
                },
                {
                  "kind": "Reference",
                  "text": "Entity",
                  "canonicalReference": "server!Entity:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "platform",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!DefaultCharacterController#runVelocity:member",
              "docComment": "/**\n * The normalized horizontal velocity applied to the entity when it runs.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "runVelocity: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "runVelocity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "server!DefaultCharacterController#tickPathfindingMovement:member(1)",
              "docComment": "/**\n * Ticks the pathfinding movement for the character controller, overriding the default implementation.\n *\n * @param destination - The destination to move to.\n *\n * @param deltaTimeMs - The delta time in milliseconds since the last tick.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tickPathfindingMovement(destination: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": ", deltaTimeMs: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "destination",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "deltaTimeMs",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "tickPathfindingMovement"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!DefaultCharacterController#tickPlayerMovement:member(1)",
              "docComment": "/**\n * Ticks the player movement for the character controller, overriding the default implementation.\n *\n * @param inputState - The current input state of the player.\n *\n * @param orientationState - The current orientation state of the player.\n *\n * @param deltaTimeMs - The delta time in milliseconds since the last tick.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tickPlayerMovement(inputState: "
                },
                {
                  "kind": "Reference",
                  "text": "PlayerInputState",
                  "canonicalReference": "server!PlayerInputState:type"
                },
                {
                  "kind": "Content",
                  "text": ", orientationState: "
                },
                {
                  "kind": "Reference",
                  "text": "PlayerOrientationState",
                  "canonicalReference": "server!PlayerOrientationState:type"
                },
                {
                  "kind": "Content",
                  "text": ", deltaTimeMs: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "inputState",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "orientationState",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "deltaTimeMs",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "tickPlayerMovement"
            },
            {
              "kind": "Property",
              "canonicalReference": "server!DefaultCharacterController#walkVelocity:member",
              "docComment": "/**\n * The normalized horizontal velocity applied to the entity when it walks.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "walkVelocity: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "walkVelocity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "server!DefaultCharacterControllerOptions:interface",
          "docComment": "/**\n * Options for creating a DefaultCharacterController instance.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DefaultCharacterControllerOptions "
            }
          ],
          "fileUrlPath": "src/world/entities/controllers/DefaultCharacterController.ts",
          "releaseTag": "Public",
          "name": "DefaultCharacterControllerOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!DefaultCharacterControllerOptions#canJump:member",
              "docComment": "/**\n * A function allowing custom logic to determine if the entity can jump.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canJump?: "
                },
                {
                  "kind": "Content",
                  "text": "() => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "canJump",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!DefaultCharacterControllerOptions#canRun:member",
              "docComment": "/**\n * A function allowing custom logic to determine if the entity can run.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canRun?: "
                },
                {
                  "kind": "Content",
                  "text": "() => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "canRun",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!DefaultCharacterControllerOptions#canWalk:member",
              "docComment": "/**\n * A function allowing custom logic to determine if the entity can walk.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canWalk?: "
                },
                {
                  "kind": "Content",
                  "text": "() => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "canWalk",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!DefaultCharacterControllerOptions#jumpVelocity:member",
              "docComment": "/**\n * The upward velocity applied to the entity when it jumps.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "jumpVelocity?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "jumpVelocity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!DefaultCharacterControllerOptions#runVelocity:member",
              "docComment": "/**\n * The normalized horizontal velocity applied to the entity when it runs.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "runVelocity?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "runVelocity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!DefaultCharacterControllerOptions#walkVelocity:member",
              "docComment": "/**\n * The normalized horizontal velocity applied to the entity when it walks.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "walkVelocity?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "walkVelocity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "server!Entity:class",
          "docComment": "/**\n * Represents an entity in a world.\n *\n * @remarks\n *\n * Entities are highly configurable and controllable. All entities are created from a .gltf model asset and allow full control of their rigid body and attached collider dynamics.\n *\n * @example\n * ```typescript\n * const spider = new Entity({\n *   name: 'Spider',\n *   modelUri: 'models/spider.gltf',\n *   modelLoopedAnimations: [ 'walk' ],\n *   rigidBodyOptions: {\n *     type: RigidBodyType.DYNAMIC,\n *     enabledRotations: { x: false, y: true, z: false },\n *     colliders: [\n *       {\n *         shape: ColliderShape.ROUND_CYLINDER,\n *         borderRadius: 0.1,\n *         halfHeight: 0.225,\n *         radius: 0.5,\n *         tag: 'body',\n *       }\n *     ],\n *   },\n * });\n *\n * spider.spawn(world, { x: 20, y: 6, z: 10 });\n * ```\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default class Entity extends "
            },
            {
              "kind": "Reference",
              "text": "RigidBody",
              "canonicalReference": "server!RigidBody:class"
            },
            {
              "kind": "Content",
              "text": " implements "
            },
            {
              "kind": "Reference",
              "text": "protocol.Serializable",
              "canonicalReference": "@hytopia.com/server-protocol!Serializable:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/world/entities/Entity.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Entity",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "server!Entity:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Entity` class\n *\n * @param options - The options for the entity instance.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(options: "
                },
                {
                  "kind": "Reference",
                  "text": "EntityOptions",
                  "canonicalReference": "server!EntityOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Entity#characterController:member",
              "docComment": "/**\n * The character controller for the entity.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get characterController(): "
                },
                {
                  "kind": "Reference",
                  "text": "BaseCharacterController",
                  "canonicalReference": "server!BaseCharacterController:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "characterController",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Entity#createCustomCharacterController:member",
              "docComment": "/**\n * A function that creates a custom character controller for the entity.\n *\n * @param this - The Entity instance.\n *\n * @returns A character controller that extends {@link BaseCharacterController}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createCustomCharacterController?: "
                },
                {
                  "kind": "Content",
                  "text": "(this: "
                },
                {
                  "kind": "Reference",
                  "text": "Entity",
                  "canonicalReference": "server!Entity:class"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "BaseCharacterController",
                  "canonicalReference": "server!BaseCharacterController:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "createCustomCharacterController",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Entity#despawn:member(1)",
              "docComment": "/**\n * Despawns the entity from the world.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "despawn(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "despawn"
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Entity#id:member",
              "docComment": "/**\n * The unique identifier for the entity.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get id(): "
                },
                {
                  "kind": "Content",
                  "text": "number | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Entity#isSpawned:member",
              "docComment": "/**\n * Whether the entity is spawned.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isSpawned(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isSpawned",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Entity#modelLoopedAnimations:member",
              "docComment": "/**\n * The looped animations to start when the entity is spawned.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get modelLoopedAnimations(): "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlySet",
                  "canonicalReference": "!ReadonlySet:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "modelLoopedAnimations",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Entity#modelScale:member",
              "docComment": "/**\n * The scale of the entity's model.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get modelScale(): "
                },
                {
                  "kind": "Content",
                  "text": "number | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "modelScale",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Entity#modelUri:member",
              "docComment": "/**\n * The URI or path to the .gltf model asset to be used for the entity.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get modelUri(): "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "modelUri",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Entity#name:member",
              "docComment": "/**\n * The name of the entity.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Entity#onBlockCollision:member",
              "docComment": "/**\n * A function that is called when the entity collides with a block.\n *\n * @param this - The Entity instance.\n *\n * @param block - The block that the entity collided with.\n *\n * @param started - Whether the collision started or ended.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onBlockCollision?: "
                },
                {
                  "kind": "Content",
                  "text": "(this: "
                },
                {
                  "kind": "Reference",
                  "text": "Entity",
                  "canonicalReference": "server!Entity:class"
                },
                {
                  "kind": "Content",
                  "text": ", block: "
                },
                {
                  "kind": "Reference",
                  "text": "BlockType",
                  "canonicalReference": "server!BlockType:class"
                },
                {
                  "kind": "Content",
                  "text": ", started: boolean) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onBlockCollision",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Entity#onBlockContactForce:member",
              "docComment": "/**\n * A function that is called when the entity collides with a block.\n *\n * @param this - The Entity instance.\n *\n * @param block - The block that the entity collided with.\n *\n * @param contactForceData - The contact force data.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onBlockContactForce?: "
                },
                {
                  "kind": "Content",
                  "text": "(this: "
                },
                {
                  "kind": "Reference",
                  "text": "Entity",
                  "canonicalReference": "server!Entity:class"
                },
                {
                  "kind": "Content",
                  "text": ", block: "
                },
                {
                  "kind": "Reference",
                  "text": "BlockType",
                  "canonicalReference": "server!BlockType:class"
                },
                {
                  "kind": "Content",
                  "text": ", contactForceData: "
                },
                {
                  "kind": "Reference",
                  "text": "ContactForceData",
                  "canonicalReference": "server!~ContactForceData:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onBlockContactForce",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Entity#onDespawn:member",
              "docComment": "/**\n * A function that is called when the entity is despawned.\n *\n * @param this - The Entity instance.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onDespawn?: "
                },
                {
                  "kind": "Content",
                  "text": "(this: "
                },
                {
                  "kind": "Reference",
                  "text": "Entity",
                  "canonicalReference": "server!Entity:class"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onDespawn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Entity#onEntityCollision:member",
              "docComment": "/**\n * A function that is called when the entity collides with another entity.\n *\n * @param this - The Entity instance.\n *\n * @param entity - The entity that the entity collided with.\n *\n * @param started - Whether the collision started or ended.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onEntityCollision?: "
                },
                {
                  "kind": "Content",
                  "text": "(this: "
                },
                {
                  "kind": "Reference",
                  "text": "Entity",
                  "canonicalReference": "server!Entity:class"
                },
                {
                  "kind": "Content",
                  "text": ", entity: "
                },
                {
                  "kind": "Reference",
                  "text": "Entity",
                  "canonicalReference": "server!Entity:class"
                },
                {
                  "kind": "Content",
                  "text": ", started: boolean) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onEntityCollision",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Entity#onEntityContactForce:member",
              "docComment": "/**\n * A function that is called when the entity contacts another entity.\n *\n * @param this - The Entity instance.\n *\n * @param entity - The entity that the entity collided with.\n *\n * @param contactForceData - The contact force data.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onEntityContactForce?: "
                },
                {
                  "kind": "Content",
                  "text": "(this: "
                },
                {
                  "kind": "Reference",
                  "text": "Entity",
                  "canonicalReference": "server!Entity:class"
                },
                {
                  "kind": "Content",
                  "text": ", entity: "
                },
                {
                  "kind": "Reference",
                  "text": "Entity",
                  "canonicalReference": "server!Entity:class"
                },
                {
                  "kind": "Content",
                  "text": ", contactForceData: "
                },
                {
                  "kind": "Reference",
                  "text": "ContactForceData",
                  "canonicalReference": "server!~ContactForceData:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onEntityContactForce",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Entity#onSpawn:member",
              "docComment": "/**\n * A function that is called when the entity is spawned.\n *\n * @param this - The Entity instance.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onSpawn?: "
                },
                {
                  "kind": "Content",
                  "text": "(this: "
                },
                {
                  "kind": "Reference",
                  "text": "Entity",
                  "canonicalReference": "server!Entity:class"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onSpawn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Entity#onTick:member",
              "docComment": "/**\n * A function that is called every tick.\n *\n * @param this - The Entity instance.\n *\n * @param tickDeltaMs - The delta time in milliseconds since the last tick.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onTick?: "
                },
                {
                  "kind": "Content",
                  "text": "(this: "
                },
                {
                  "kind": "Reference",
                  "text": "Entity",
                  "canonicalReference": "server!Entity:class"
                },
                {
                  "kind": "Content",
                  "text": ", tickDeltaMs: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onTick",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Entity#setCharacterController:member(1)",
              "docComment": "/**\n * Sets the character controller for the entity.\n *\n * @param characterController - The character controller to set.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setCharacterController(characterController: "
                },
                {
                  "kind": "Reference",
                  "text": "BaseCharacterController",
                  "canonicalReference": "server!BaseCharacterController:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "characterController",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setCharacterController"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Entity#spawn:member(1)",
              "docComment": "/**\n * Spawns the entity in the world.\n *\n * @param world - The world to spawn the entity in.\n *\n * @param coordinate - The coordinate to spawn the entity at.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "spawn(world: "
                },
                {
                  "kind": "Reference",
                  "text": "World",
                  "canonicalReference": "server!World:class"
                },
                {
                  "kind": "Content",
                  "text": ", coordinate: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "world",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "coordinate",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "spawn"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Entity#startModelLoopedAnimations:member(1)",
              "docComment": "/**\n * Starts looped animations for the entity, blending with other animations currently playing.\n *\n * @param animations - The animations to start.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "startModelLoopedAnimations(animations: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "animations",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "startModelLoopedAnimations"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Entity#startModelOneshotAnimations:member(1)",
              "docComment": "/**\n * Starts a oneshot animation for the entity, blending with other animations currently playing.\n *\n * @param animations - The animations to start.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "startModelOneshotAnimations(animations: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "animations",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "startModelOneshotAnimations"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Entity#stopModelAnimations:member(1)",
              "docComment": "/**\n * Stops the provided model animations for the entity.\n *\n * @param animations - The animations to stop.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stopModelAnimations(animations: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "animations",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "stopModelAnimations"
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Entity#world:member",
              "docComment": "/**\n * The world the entity is in.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get world(): "
                },
                {
                  "kind": "Reference",
                  "text": "World",
                  "canonicalReference": "server!World:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "world",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "server!EntityEventPayload:namespace",
          "docComment": "/**\n * Payloads for events an Entity instance can emit.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace EntityEventPayload "
            }
          ],
          "fileUrlPath": "src/world/entities/Entity.ts",
          "releaseTag": "Public",
          "name": "EntityEventPayload",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Interface",
              "canonicalReference": "server!EntityEventPayload.Despawn:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface Despawn "
                }
              ],
              "releaseTag": "Public",
              "name": "Despawn",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!EntityEventPayload.Despawn#entity:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "entity: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entity",
                      "canonicalReference": "server!Entity:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "entity",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "server!EntityEventPayload.Spawn:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface Spawn "
                }
              ],
              "releaseTag": "Public",
              "name": "Spawn",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!EntityEventPayload.Spawn#entity:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "entity: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entity",
                      "canonicalReference": "server!Entity:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "entity",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "server!EntityEventPayload.StartModelLoopedAnimations:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface StartModelLoopedAnimations "
                }
              ],
              "releaseTag": "Public",
              "name": "StartModelLoopedAnimations",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!EntityEventPayload.StartModelLoopedAnimations#animations:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "animations: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Set",
                      "canonicalReference": "!Set:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "animations",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!EntityEventPayload.StartModelLoopedAnimations#entity:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "entity: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entity",
                      "canonicalReference": "server!Entity:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "entity",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "server!EntityEventPayload.StartModelOneshotAnimations:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface StartModelOneshotAnimations "
                }
              ],
              "releaseTag": "Public",
              "name": "StartModelOneshotAnimations",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!EntityEventPayload.StartModelOneshotAnimations#animations:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "animations: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Set",
                      "canonicalReference": "!Set:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "animations",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!EntityEventPayload.StartModelOneshotAnimations#entity:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "entity: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entity",
                      "canonicalReference": "server!Entity:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "entity",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "server!EntityEventPayload.StopModelAnimations:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface StopModelAnimations "
                }
              ],
              "releaseTag": "Public",
              "name": "StopModelAnimations",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!EntityEventPayload.StopModelAnimations#animations:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "animations: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Set",
                      "canonicalReference": "!Set:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "animations",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!EntityEventPayload.StopModelAnimations#entity:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "entity: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entity",
                      "canonicalReference": "server!Entity:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "entity",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "server!EntityEventPayload.UpdateRotation:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface UpdateRotation "
                }
              ],
              "releaseTag": "Public",
              "name": "UpdateRotation",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!EntityEventPayload.UpdateRotation#entity:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "entity: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entity",
                      "canonicalReference": "server!Entity:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "entity",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!EntityEventPayload.UpdateRotation#rotation:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rotation: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Rotation",
                      "canonicalReference": "server!Rotation:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "rotation",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "server!EntityEventPayload.UpdateTranslation:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface UpdateTranslation "
                }
              ],
              "releaseTag": "Public",
              "name": "UpdateTranslation",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!EntityEventPayload.UpdateTranslation#entity:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "entity: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entity",
                      "canonicalReference": "server!Entity:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "entity",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!EntityEventPayload.UpdateTranslation#translation:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "translation: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "translation",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "server!EntityEventType:enum",
          "docComment": "/**\n * Event types an Entity instance can emit.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum EntityEventType "
            }
          ],
          "fileUrlPath": "src/world/entities/Entity.ts",
          "releaseTag": "Public",
          "name": "EntityEventType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "server!EntityEventType.DESPAWN:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DESPAWN = "
                },
                {
                  "kind": "Content",
                  "text": "\"ENTITY.DESPAWN\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "DESPAWN"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "server!EntityEventType.SPAWN:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SPAWN = "
                },
                {
                  "kind": "Content",
                  "text": "\"ENTITY.SPAWN\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "SPAWN"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "server!EntityEventType.START_MODEL_LOOPED_ANIMATIONS:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "START_MODEL_LOOPED_ANIMATIONS = "
                },
                {
                  "kind": "Content",
                  "text": "\"ENTITY.UPDATE_MODEL_LOOPED_ANIMATIONS\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "START_MODEL_LOOPED_ANIMATIONS"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "server!EntityEventType.START_MODEL_ONESHOT_ANIMATIONS:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "START_MODEL_ONESHOT_ANIMATIONS = "
                },
                {
                  "kind": "Content",
                  "text": "\"ENTITY.START_MODEL_ONESHOT_ANIMATIONS\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "START_MODEL_ONESHOT_ANIMATIONS"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "server!EntityEventType.STOP_MODEL_ANIMATIONS:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "STOP_MODEL_ANIMATIONS = "
                },
                {
                  "kind": "Content",
                  "text": "\"ENTITY.STOP_MODEL_ANIMATIONS\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "STOP_MODEL_ANIMATIONS"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "server!EntityEventType.UPDATE_ROTATION:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "UPDATE_ROTATION = "
                },
                {
                  "kind": "Content",
                  "text": "\"ENTITY.UPDATE_ROTATION\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "UPDATE_ROTATION"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "server!EntityEventType.UPDATE_TRANSLATION:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "UPDATE_TRANSLATION = "
                },
                {
                  "kind": "Content",
                  "text": "\"ENTITY.UPDATE_TRANSLATION\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "UPDATE_TRANSLATION"
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "server!EntityManager:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default class EntityManager "
            }
          ],
          "fileUrlPath": "src/world/entities/EntityManager.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "EntityManager",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "server!EntityManager:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `EntityManager` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(world: "
                },
                {
                  "kind": "Reference",
                  "text": "World",
                  "canonicalReference": "server!World:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "world",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "server!EntityManager#checkAndEmitUpdates:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checkAndEmitUpdates(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "checkAndEmitUpdates"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!EntityManager#getAllEntities:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAllEntities(): "
                },
                {
                  "kind": "Reference",
                  "text": "Entity",
                  "canonicalReference": "server!Entity:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getAllEntities"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!EntityManager#getAllPlayerEntities:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAllPlayerEntities(player: "
                },
                {
                  "kind": "Reference",
                  "text": "Player",
                  "canonicalReference": "server!Player:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "PlayerEntity",
                  "canonicalReference": "server!PlayerEntity:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "player",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getAllPlayerEntities"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!EntityManager#getEntity:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getEntity<T extends "
                },
                {
                  "kind": "Reference",
                  "text": "Entity",
                  "canonicalReference": "server!Entity:class"
                },
                {
                  "kind": "Content",
                  "text": ">(id: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "T | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getEntity"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!EntityManager#registerEntity:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "registerEntity(entity: "
                },
                {
                  "kind": "Reference",
                  "text": "Entity",
                  "canonicalReference": "server!Entity:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "entity",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "registerEntity"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!EntityManager#tickEntities:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tickEntities(tickDeltaMs: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tickDeltaMs",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "tickEntities"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!EntityManager#unregisterEntity:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "unregisterEntity(entity: "
                },
                {
                  "kind": "Reference",
                  "text": "Entity",
                  "canonicalReference": "server!Entity:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "entity",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "unregisterEntity"
            },
            {
              "kind": "Property",
              "canonicalReference": "server!EntityManager#world:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get world(): "
                },
                {
                  "kind": "Reference",
                  "text": "World",
                  "canonicalReference": "server!World:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "world",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "server!EntityOptions:interface",
          "docComment": "/**\n * Options for creating an Entity instance.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface EntityOptions "
            }
          ],
          "fileUrlPath": "src/world/entities/Entity.ts",
          "releaseTag": "Public",
          "name": "EntityOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!EntityOptions#modelLoopedAnimations:member",
              "docComment": "/**\n * The looped animations to start when the entity is spawned.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "modelLoopedAnimations?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "modelLoopedAnimations",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!EntityOptions#modelScale:member",
              "docComment": "/**\n * The scale of the entity's model.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "modelScale?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "modelScale",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!EntityOptions#modelUri:member",
              "docComment": "/**\n * The URI or path to the .gltf model asset to be used for the entity.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "modelUri?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "modelUri",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!EntityOptions#name:member",
              "docComment": "/**\n * The name of the entity.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!EntityOptions#rigidBodyOptions:member",
              "docComment": "/**\n * The rigid body options for the entity.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rigidBodyOptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "RigidBodyOptions",
                  "canonicalReference": "server!RigidBodyOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "rigidBodyOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "server!Event_2:interface",
          "docComment": "/**\n * An EventRouter event.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Event<TPayload> "
            }
          ],
          "fileUrlPath": "src/events/EventRouter.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TPayload",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "Event_2",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!Event_2#payload:member",
              "docComment": "/**\n * The payload of the event, passed to listeners\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "payload: "
                },
                {
                  "kind": "Content",
                  "text": "TPayload"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "payload",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!Event_2#type:member",
              "docComment": "/**\n * The type of event\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "server!EventRouter:class",
          "docComment": "/**\n * Manages event emission and assigned listener callbacks.\n *\n * @remarks\n *\n * This class is used as a singleton for global server events via {@link EventRouter.serverInstance}. For individual worlds, an internal EventRouter instance is instantiated per world. EventRouters only have visibility of events emitted and subscribed to relative to their unique instances.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default class EventRouter "
            }
          ],
          "fileUrlPath": "src/events/EventRouter.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "EventRouter",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "server!EventRouter:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `EventRouter` class\n *\n * @param tag - Tag for logging, used to identify EventRouter instances in logs.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(tag: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tag",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "server!EventRouter#emit:member(1)",
              "docComment": "/**\n * Emit an event, invoking all registered listeners for the event type.\n *\n * @param event - The event to emit.\n *\n * @returns `true` if listeners were found and invoked, `false` otherwise.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "emit<TPayload>(event: "
                },
                {
                  "kind": "Reference",
                  "text": "Event",
                  "canonicalReference": "server!Event_2:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TPayload>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TPayload",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "emit"
            },
            {
              "kind": "Property",
              "canonicalReference": "server!EventRouter#logAllEvents:member",
              "docComment": "/**\n * Enable logging of all events. Default: false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logAllEvents: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "logAllEvents",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!EventRouter#logEventsPayloads:member",
              "docComment": "/**\n * Enable logging of event payloads. Default: false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logEventsPayloads: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "logEventsPayloads",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!EventRouter#logIgnoreEventPrefixes:member",
              "docComment": "/**\n * Array of event prefixes to exclude from logging\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logIgnoreEventPrefixes: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "logIgnoreEventPrefixes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!EventRouter#logIgnoreEvents:member",
              "docComment": "/**\n * Array of events to exclude from logging\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logIgnoreEvents: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "logIgnoreEvents",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!EventRouter#logUnlistenedEvents:member",
              "docComment": "/**\n * Enable logging of events with no listeners. Default: false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logUnlistenedEvents: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "logUnlistenedEvents",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "server!EventRouter#off:member(1)",
              "docComment": "/**\n * Remove a listener for a specific event type.\n *\n * @param eventType - The type of event to remove the listener from.\n *\n * @param listener - The listener function to remove.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "off<TPayload>(eventType: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(payload: TPayload) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TPayload",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "eventType",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "off"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!EventRouter#offAll:member(1)",
              "docComment": "/**\n * Remove all listeners for a specific event type.\n *\n * @param eventType - The type of event to remove all listeners from.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "offAll(eventType: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "eventType",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "offAll"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!EventRouter#on:member(1)",
              "docComment": "/**\n * Register a listener for a specific event type.\n *\n * @remarks\n *\n * When the same event router instance used to register a listener emits an event a listener was registered for, the listener will be invoked with the event payload. Listeners are called in the order they are registered.\n *\n * @param eventType - The type of event to listen for.\n *\n * @param listener - The listener function to invoke when the event is emitted.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "on<TPayload>(eventType: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Content",
                  "text": "(payload: TPayload) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TPayload",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "eventType",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "on"
            },
            {
              "kind": "Property",
              "canonicalReference": "server!EventRouter.serverInstance:member",
              "docComment": "/**\n * The singleton instance for global server events.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly serverInstance: "
                },
                {
                  "kind": "Reference",
                  "text": "EventRouter",
                  "canonicalReference": "server!EventRouter:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "serverInstance",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Namespace",
          "canonicalReference": "server!HYTOPIA:namespace",
          "docComment": "",
          "excerptTokens": [],
          "fileUrlPath": "src/index.ts",
          "releaseTag": "None",
          "name": "HYTOPIA",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Class",
              "canonicalReference": "server!HYTOPIA.Audio:class",
              "docComment": "/**\n * An instance of audio, supporting a variety of configuration options.\n *\n * @remarks\n *\n * Audio instances are created directly as instances. They support a variety of configuration options through the {@link AudioOptions} constructor argument.\n *\n * @example\n * ```typescript\n * (new Audio({\n *   uri: 'assets/music/song.mp3',\n *   loop: true,\n *   volume: 0.5,\n * })).play(world);\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export default class Audio implements "
                },
                {
                  "kind": "Reference",
                  "text": "protocol.Serializable",
                  "canonicalReference": "@hytopia.com/server-protocol!Serializable:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                }
              ],
              "fileUrlPath": "src/world/audios/Audio.ts",
              "releaseTag": "Public",
              "isAbstract": false,
              "name": "Audio",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Constructor",
                  "canonicalReference": "server!HYTOPIA.Audio:constructor(1)",
                  "docComment": "/**\n * Constructs a new instance of the `Audio` class\n *\n * @param audioData - The options for the audio instance.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "constructor(options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "AudioOptions",
                      "canonicalReference": "server!AudioOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ");"
                    }
                  ],
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ]
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Audio#attachedToEntity:member",
                  "docComment": "/**\n * The entity to which the audio is attached if explicitly set.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get attachedToEntity(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entity",
                      "canonicalReference": "server!Entity:class"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "attachedToEntity",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Audio#detune:member",
                  "docComment": "/**\n * The detune of the audio in cents if explicitly set.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get detune(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "detune",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Audio#distortion:member",
                  "docComment": "/**\n * The amount of distortion to apply to the audio if explicitly set.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get distortion(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "distortion",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Audio#duration:member",
                  "docComment": "/**\n * The duration of the audio in seconds if explicitly set.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get duration(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "duration",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Audio#id:member",
                  "docComment": "/**\n * The unique identifier for the audio.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get id(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "id",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Audio#isLoaded:member",
                  "docComment": "/**\n * Whether the audio has loaded into the world. Audio is loaded the first time play() is called.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get isLoaded(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "isLoaded",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Audio#isPlaying:member",
                  "docComment": "/**\n * Whether the audio is currently playing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get isPlaying(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "isPlaying",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Audio#isPositional:member",
                  "docComment": "/**\n * Whether the audio is positional (Entity or position attached).\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get isPositional(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "isPositional",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Audio#loop:member",
                  "docComment": "/**\n * Whether the audio is looped.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get loop(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "loop",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Audio#offset:member",
                  "docComment": "/**\n * The offset time in seconds from which the audio should start playing if explicitly set.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get offset(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "offset",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Audio#pause:member(1)",
                  "docComment": "/**\n * Pauses the audio.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "pause(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "pause"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Audio#play:member(1)",
                  "docComment": "/**\n * Plays or resumes the audio.\n *\n * @param world - The world to play the audio in.\n *\n * @param restart - If true, the audio will restart from the beginning if it is already playing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "play(world: "
                    },
                    {
                      "kind": "Reference",
                      "text": "World",
                      "canonicalReference": "server!World:class"
                    },
                    {
                      "kind": "Content",
                      "text": ", restart?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "world",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "restart",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      },
                      "isOptional": true
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "play"
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Audio#playbackRate:member",
                  "docComment": "/**\n * The playback rate of the audio if explicitly set.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get playbackRate(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "playbackRate",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Audio#position:member",
                  "docComment": "/**\n * The position of the audio in the world if explicitly set.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get position(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "position",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Audio#referenceDistance:member",
                  "docComment": "/**\n * The reference distance of the audio if explicitly set.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get referenceDistance(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "referenceDistance",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Audio#setAttachedToEntity:member(1)",
                  "docComment": "/**\n * Sets the entity to which the audio is attached, following its position.\n *\n * @param entity - The entity to attach the audio to.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAttachedToEntity(entity: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entity",
                      "canonicalReference": "server!Entity:class"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "entity",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setAttachedToEntity"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Audio#setDetune:member(1)",
                  "docComment": "/**\n * Sets the detune of the audio.\n *\n * @param detune - The detune in cents.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setDetune(detune: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "detune",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setDetune"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Audio#setDistortion:member(1)",
                  "docComment": "/**\n * Sets the distortion of the audio.\n *\n * @param distortion - The distortion amount.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setDistortion(distortion: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "distortion",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setDistortion"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Audio#setPlaybackRate:member(1)",
                  "docComment": "/**\n * Sets the playback rate of the audio.\n *\n * @param playbackRate - The playback rate.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPlaybackRate(playbackRate: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "playbackRate",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setPlaybackRate"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Audio#setPosition:member(1)",
                  "docComment": "/**\n * Sets the position of the audio. Will detach from entity if attached.\n *\n * @param position - The position in the world.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setPosition(position: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "position",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setPosition"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Audio#setReferenceDistance:member(1)",
                  "docComment": "/**\n * Sets the reference distance of the audio.\n *\n * @param referenceDistance - The reference distance.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setReferenceDistance(referenceDistance: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "referenceDistance",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setReferenceDistance"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Audio#setVolume:member(1)",
                  "docComment": "/**\n * Sets the volume of the audio.\n *\n * @param volume - The volume level.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setVolume(volume: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "volume",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setVolume"
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Audio#startTick:member",
                  "docComment": "/**\n * The server tick at which the audio started playing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get startTick(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "startTick",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Audio#uri:member",
                  "docComment": "/**\n * The URI of the audio asset.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get uri(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "uri",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Audio#volume:member",
                  "docComment": "/**\n * The volume of the audio if explicitly set.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get volume(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "volume",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Audio#world:member",
                  "docComment": "/**\n * The world the audio is in if already loaded.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get world(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "World",
                      "canonicalReference": "server!World:class"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "world",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                }
              ],
              "implementsTokenRanges": [
                {
                  "startIndex": 1,
                  "endIndex": 2
                }
              ]
            },
            {
              "kind": "Namespace",
              "canonicalReference": "server!HYTOPIA.AudioEventPayload:namespace",
              "docComment": "/**\n * Payloads for events an Audio instance can emit.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare namespace AudioEventPayload "
                }
              ],
              "fileUrlPath": "src/world/audios/Audio.ts",
              "releaseTag": "Public",
              "name": "AudioEventPayload",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "server!HYTOPIA.AudioEventPayload.Pause:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Pause "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Pause",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.AudioEventPayload.Pause#audio:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "audio: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Audio",
                          "canonicalReference": "server!Audio:class"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "audio",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "server!HYTOPIA.AudioEventPayload.Play:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Play "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Play",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.AudioEventPayload.Play#audio:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "audio: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Audio",
                          "canonicalReference": "server!Audio:class"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "audio",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "server!HYTOPIA.AudioEventPayload.PlayRestart:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface PlayRestart "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "PlayRestart",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.AudioEventPayload.PlayRestart#audio:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "audio: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Audio",
                          "canonicalReference": "server!Audio:class"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "audio",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "server!HYTOPIA.AudioEventPayload.SetAttachedToEntity:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface SetAttachedToEntity "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "SetAttachedToEntity",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.AudioEventPayload.SetAttachedToEntity#audio:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "audio: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Audio",
                          "canonicalReference": "server!Audio:class"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "audio",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.AudioEventPayload.SetAttachedToEntity#entity:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "entity: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Entity",
                          "canonicalReference": "server!Entity:class"
                        },
                        {
                          "kind": "Content",
                          "text": " | undefined"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "entity",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "server!HYTOPIA.AudioEventPayload.SetDetune:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface SetDetune "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "SetDetune",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.AudioEventPayload.SetDetune#audio:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "audio: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Audio",
                          "canonicalReference": "server!Audio:class"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "audio",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.AudioEventPayload.SetDetune#detune:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "detune: "
                        },
                        {
                          "kind": "Content",
                          "text": "number"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "detune",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "server!HYTOPIA.AudioEventPayload.SetDistortion:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface SetDistortion "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "SetDistortion",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.AudioEventPayload.SetDistortion#audio:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "audio: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Audio",
                          "canonicalReference": "server!Audio:class"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "audio",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.AudioEventPayload.SetDistortion#distortion:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "distortion: "
                        },
                        {
                          "kind": "Content",
                          "text": "number"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "distortion",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "server!HYTOPIA.AudioEventPayload.SetPlaybackRate:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface SetPlaybackRate "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "SetPlaybackRate",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.AudioEventPayload.SetPlaybackRate#audio:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "audio: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Audio",
                          "canonicalReference": "server!Audio:class"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "audio",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.AudioEventPayload.SetPlaybackRate#playbackRate:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "playbackRate: "
                        },
                        {
                          "kind": "Content",
                          "text": "number"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "playbackRate",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "server!HYTOPIA.AudioEventPayload.SetPosition:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface SetPosition "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "SetPosition",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.AudioEventPayload.SetPosition#audio:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "audio: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Audio",
                          "canonicalReference": "server!Audio:class"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "audio",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.AudioEventPayload.SetPosition#position:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "position: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Vector3",
                          "canonicalReference": "server!Vector3:interface"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "position",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "server!HYTOPIA.AudioEventPayload.SetReferenceDistance:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface SetReferenceDistance "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "SetReferenceDistance",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.AudioEventPayload.SetReferenceDistance#audio:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "audio: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Audio",
                          "canonicalReference": "server!Audio:class"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "audio",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.AudioEventPayload.SetReferenceDistance#referenceDistance:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "referenceDistance: "
                        },
                        {
                          "kind": "Content",
                          "text": "number"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "referenceDistance",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "server!HYTOPIA.AudioEventPayload.SetVolume:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface SetVolume "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "SetVolume",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.AudioEventPayload.SetVolume#audio:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "audio: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Audio",
                          "canonicalReference": "server!Audio:class"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "audio",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.AudioEventPayload.SetVolume#volume:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "volume: "
                        },
                        {
                          "kind": "Content",
                          "text": "number"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "volume",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "server!HYTOPIA.AudioEventType:enum",
              "docComment": "/**\n * Event types an Audio instance can emit.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare enum AudioEventType "
                }
              ],
              "fileUrlPath": "src/world/audios/Audio.ts",
              "releaseTag": "Public",
              "name": "AudioEventType",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.AudioEventType.PAUSE:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "PAUSE = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"AUDIO.PAUSE\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "PAUSE"
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.AudioEventType.PLAY:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "PLAY = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"AUDIO.PLAY\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "PLAY"
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.AudioEventType.PLAY_RESTART:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "PLAY_RESTART = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"AUDIO.PLAY_RESTART\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "PLAY_RESTART"
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.AudioEventType.SET_ATTACHED_TO_ENTITY:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "SET_ATTACHED_TO_ENTITY = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"AUDIO.SET_ATTACHED_TO_ENTITY\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "SET_ATTACHED_TO_ENTITY"
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.AudioEventType.SET_DETUNE:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "SET_DETUNE = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"AUDIO.SET_DETUNE\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "SET_DETUNE"
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.AudioEventType.SET_DISTORTION:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "SET_DISTORTION = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"AUDIO.SET_DISTORTION\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "SET_DISTORTION"
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.AudioEventType.SET_PLAYBACK_RATE:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "SET_PLAYBACK_RATE = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"AUDIO.SET_PLAYBACK_RATE\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "SET_PLAYBACK_RATE"
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.AudioEventType.SET_POSITION:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "SET_POSITION = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"AUDIO.SET_POSITION\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "SET_POSITION"
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.AudioEventType.SET_REFERENCE_DISTANCE:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "SET_REFERENCE_DISTANCE = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"AUDIO.SET_REFERENCE_DISTANCE\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "SET_REFERENCE_DISTANCE"
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.AudioEventType.SET_VOLUME:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "SET_VOLUME = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"AUDIO.SET_VOLUME\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "SET_VOLUME"
                }
              ]
            },
            {
              "kind": "Class",
              "canonicalReference": "server!HYTOPIA.AudioManager:class",
              "docComment": "/**\n * Manages audio instances in a world.\n *\n * @remarks\n *\n * The AudioManager is created internally as a singleton for each {@link World} instance in a game server. It allows retrieval of all loaded audio, entity attached audio, looped audio, and more.\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `AudioManager` class.\n *\n * @example\n * ```typescript\n * // Stop all audio in the world\n * const audioManager = world.audioManager;\n * audioManager.getAllAudios().map(audio => audio.pause());\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export default class AudioManager "
                }
              ],
              "fileUrlPath": "src/world/audios/AudioManager.ts",
              "releaseTag": "Public",
              "isAbstract": false,
              "name": "AudioManager",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.AudioManager#getAllAudios:member(1)",
                  "docComment": "/**\n * Retrieves all loaded audio instances for the world.\n *\n * @returns An array of audio instances.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAllAudios(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Audio",
                      "canonicalReference": "server!Audio:class"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getAllAudios"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.AudioManager#getAllEntityAttachedAudios:member(1)",
                  "docComment": "/**\n * Retrieves all loaded audio instances attached to a specific entity.\n *\n * @param entity - The entity to get attached audio instances for.\n *\n * @returns An array of audio instances.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAllEntityAttachedAudios(entity: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entity",
                      "canonicalReference": "server!Entity:class"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Audio",
                      "canonicalReference": "server!Audio:class"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "entity",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getAllEntityAttachedAudios"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.AudioManager#getAllLoopedAudios:member(1)",
                  "docComment": "/**\n * Retrieves all looped audio instances for the world.\n *\n * @returns An array of audio instances.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAllLoopedAudios(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Audio",
                      "canonicalReference": "server!Audio:class"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getAllLoopedAudios"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.AudioManager#getAllOneshotAudios:member(1)",
                  "docComment": "/**\n * Retrieves all oneshot (non-looped) audio instances for the world.\n *\n * @returns An array of audio instances.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAllOneshotAudios(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Audio",
                      "canonicalReference": "server!Audio:class"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getAllOneshotAudios"
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.AudioManager#world:member",
                  "docComment": "/**\n * The world the audio manager is for.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get world(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "World",
                      "canonicalReference": "server!World:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "world",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                }
              ],
              "implementsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "server!HYTOPIA.AudioOptions:interface",
              "docComment": "/**\n * Options for creating an Audio instance.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface AudioOptions "
                }
              ],
              "fileUrlPath": "src/world/audios/Audio.ts",
              "releaseTag": "Public",
              "name": "AudioOptions",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.AudioOptions#attachedToEntity:member",
                  "docComment": "/**\n * If set, audio playback will follow the entity's position.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "attachedToEntity?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entity",
                      "canonicalReference": "server!Entity:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "attachedToEntity",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.AudioOptions#detune:member",
                  "docComment": "/**\n * The detuning of the audio in cents.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "detune?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "detune",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.AudioOptions#distortion:member",
                  "docComment": "/**\n * The amount of distortion to apply to the audio.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "distortion?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "distortion",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.AudioOptions#duration:member",
                  "docComment": "/**\n * The duration of the audio in seconds. Defaults to full duration.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "duration?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "duration",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.AudioOptions#loop:member",
                  "docComment": "/**\n * Whether the audio should loop when it reaches the end. Defaults to false.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "loop?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "loop",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.AudioOptions#offset:member",
                  "docComment": "/**\n * The offset time in seconds from which the audio should start playing.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "offset?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "offset",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.AudioOptions#playbackRate:member",
                  "docComment": "/**\n * The playback speed of the audio. Defaults to 1.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "playbackRate?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "playbackRate",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.AudioOptions#position:member",
                  "docComment": "/**\n * The position in the world where the audio is played.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "position?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "position",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.AudioOptions#referenceDistance:member",
                  "docComment": "/**\n * The reference distance for reducing volume as the audio source moves away from the listener.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "referenceDistance?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "referenceDistance",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.AudioOptions#uri:member",
                  "docComment": "/**\n * The URI or path to the audio asset to be played.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "uri: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "uri",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.AudioOptions#volume:member",
                  "docComment": "/**\n * The volume level of the audio. Defaults to 0.5.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "volume?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "volume",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Class",
              "canonicalReference": "server!HYTOPIA.BaseCharacterController:class",
              "docComment": "/**\n * A base class for character controller implementations.\n *\n * @remarks\n *\n * The BaseCharacterController should be extended by a more specific character controller that you or a plugin implements.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export default abstract class BaseCharacterController "
                }
              ],
              "fileUrlPath": "src/world/entities/controllers/BaseCharacterController.ts",
              "releaseTag": "Public",
              "isAbstract": true,
              "name": "BaseCharacterController",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Constructor",
                  "canonicalReference": "server!HYTOPIA.BaseCharacterController:constructor(1)",
                  "docComment": "/**\n * Constructs a new instance of the `BaseCharacterController` class\n *\n * @param entity - The entity the controller is for.\n *\n * @param _options - Arbitrary options you may provide or omit for your controller implementation.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "constructor(entity: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entity",
                      "canonicalReference": "server!Entity:class"
                    },
                    {
                      "kind": "Content",
                      "text": ", _options?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Record",
                      "canonicalReference": "!Record:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<string, unknown>"
                    },
                    {
                      "kind": "Content",
                      "text": ");"
                    }
                  ],
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "entity",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "_options",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 5
                      },
                      "isOptional": true
                    }
                  ]
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.BaseCharacterController#createSensorColliders:member(1)",
                  "docComment": "/**\n * Override this method to create sensor colliders to be attached to the controlled entity when it spawns.\n *\n * @returns An array of colliders.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "createSensorColliders(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Collider",
                      "canonicalReference": "server!Collider:class"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "createSensorColliders"
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.BaseCharacterController#entity:member",
                  "docComment": "/**\n * The entity the controller is for.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly entity: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entity",
                      "canonicalReference": "server!Entity:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "entity",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.BaseCharacterController#onTickPathfindingMovement:member",
                  "docComment": "/**\n * A callback function for when the controller ticks pathfinding movement.\n *\n * @param destination - The destination to move to.\n *\n * @param deltaTimeMs - The delta time in milliseconds since the last tick.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "onTickPathfindingMovement?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(destination: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", deltaTimeMs: number) => void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "onTickPathfindingMovement",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.BaseCharacterController#onTickPlayerMovement:member",
                  "docComment": "/**\n * A callback function for when the controller ticks player movement.\n *\n * @param inputState - The current input state of the player.\n *\n * @param orientationState - The current orientation state of the player.\n *\n * @param deltaTimeMs - The delta time in milliseconds since the last tick.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "onTickPlayerMovement?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(inputState: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PlayerInputState",
                      "canonicalReference": "server!PlayerInputState:type"
                    },
                    {
                      "kind": "Content",
                      "text": ", orientationState: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PlayerOrientationState",
                      "canonicalReference": "server!PlayerOrientationState:type"
                    },
                    {
                      "kind": "Content",
                      "text": ", deltaTimeMs: number) => void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "onTickPlayerMovement",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.BaseCharacterController#tickPathfindingMovement:member(1)",
                  "docComment": "/**\n * Override this method to implement pathfinding movement logic for your character controller. NOTE: This method is not fully supported yet.\n *\n * @param destination - The destination target to move to.\n *\n * @param deltaTimeMs - The delta time in milliseconds since the last tick.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tickPathfindingMovement(destination: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", deltaTimeMs: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "destination",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "deltaTimeMs",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "tickPathfindingMovement"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.BaseCharacterController#tickPlayerMovement:member(1)",
                  "docComment": "/**\n * Override this method to handle entity movements based on player input for your character controller.\n *\n * @param inputState - The current input state of the player.\n *\n * @param orientationState - The current orientation state of the player.\n *\n * @param deltaTimeMs - The delta time in milliseconds since the last tick.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tickPlayerMovement(inputState: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PlayerInputState",
                      "canonicalReference": "server!PlayerInputState:type"
                    },
                    {
                      "kind": "Content",
                      "text": ", orientationState: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PlayerOrientationState",
                      "canonicalReference": "server!PlayerOrientationState:type"
                    },
                    {
                      "kind": "Content",
                      "text": ", deltaTimeMs: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "inputState",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "orientationState",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "deltaTimeMs",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 6
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "tickPlayerMovement"
                }
              ],
              "implementsTokenRanges": []
            },
            {
              "kind": "Class",
              "canonicalReference": "server!HYTOPIA.Block:class",
              "docComment": "/**\n * Represents a block in a world.\n *\n * @remarks\n *\n * Instances of this class are created internally but made publicly available through various public facing API methods.\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `Block` class.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export default class Block "
                }
              ],
              "fileUrlPath": "src/world/blocks/Block.ts",
              "releaseTag": "Public",
              "isAbstract": false,
              "name": "Block",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Block#blockType:member",
                  "docComment": "/**\n * The block type of the block.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly blockType: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BlockType",
                      "canonicalReference": "server!BlockType:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "blockType",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Block#globalCoordinate:member",
                  "docComment": "/**\n * The global coordinate of the block.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly globalCoordinate: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "globalCoordinate",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                }
              ],
              "implementsTokenRanges": []
            },
            {
              "kind": "Class",
              "canonicalReference": "server!HYTOPIA.BlockType:class",
              "docComment": "/**\n * An instance of a block type, supporting a variety of configuration options.\n *\n * @remarks\n *\n * Block types are created directly as instances. They support a variety of configuration options through the {@link BlockTypeOptions} constructor argument. Block types are registered with a {@link BlockTypeRegistry} instance, allowing you to create custom blocks with unique visual representations and behaviors.\n *\n * @example\n * ```typescript\n * const stoneBlockTypeId = 10;\n * world.blockTypeRegistry.registerBlockType(stoneBlockTypeId, new BlockType({\n *   id: stoneBlockTypeId,\n *   textureUri: 'assets/textures/stone.png',\n *   name: 'Stone',\n * }));\n *\n * // Create a stone block at coordinate 0, 1, 0\n * world.chunkLattice.setBlock({ x: 0, y: 1, z: 0 }, stoneBlockTypeId);\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export default class BlockType implements "
                },
                {
                  "kind": "Reference",
                  "text": "protocol.Serializable",
                  "canonicalReference": "@hytopia.com/server-protocol!Serializable:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                }
              ],
              "fileUrlPath": "src/world/blocks/BlockType.ts",
              "releaseTag": "Public",
              "isAbstract": false,
              "name": "BlockType",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Constructor",
                  "canonicalReference": "server!HYTOPIA.BlockType:constructor(1)",
                  "docComment": "/**\n * Creates a new block type instance.\n *\n * @param world - The world the block type is for.\n *\n * @param options - The options for the block type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "constructor(options?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BlockTypeOptions",
                      "canonicalReference": "server!BlockTypeOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ");"
                    }
                  ],
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": true
                    }
                  ]
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.BlockType#colliderOptions:member",
                  "docComment": "/**\n * The collider options for the block type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get colliderOptions(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ColliderOptions",
                      "canonicalReference": "server!ColliderOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "colliderOptions",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.BlockType#id:member",
                  "docComment": "/**\n * The unique identifier for the block type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get id(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "id",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.BlockType#isMeshable:member",
                  "docComment": "/**\n * Whether the block type is meshable.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get isMeshable(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "isMeshable",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.BlockType#name:member",
                  "docComment": "/**\n * The name of the block type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get name(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.BlockType#onEntityCollision:member",
                  "docComment": "/**\n * A callback function that is invoked when an entity collides with blocks of this type.\n *\n * @param entity - The entity that collided with the block.\n *\n * @param started - Whether the collision started.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "onEntityCollision?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(this: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BlockType",
                      "canonicalReference": "server!BlockType:class"
                    },
                    {
                      "kind": "Content",
                      "text": ", entity: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entity",
                      "canonicalReference": "server!Entity:class"
                    },
                    {
                      "kind": "Content",
                      "text": ", started: boolean) => void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "onEntityCollision",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.BlockType#onEntityContactForce:member",
                  "docComment": "/**\n * A callback function that is invoked when an entity contacts a block of this type.\n *\n * @param entity - The entity that contacted the block.\n *\n * @param contactForceData - The contact force data.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "onEntityContactForce?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(this: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BlockType",
                      "canonicalReference": "server!BlockType:class"
                    },
                    {
                      "kind": "Content",
                      "text": ", entity: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entity",
                      "canonicalReference": "server!Entity:class"
                    },
                    {
                      "kind": "Content",
                      "text": ", contactForceData: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ContactForceData",
                      "canonicalReference": "server!~ContactForceData:type"
                    },
                    {
                      "kind": "Content",
                      "text": ") => void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "onEntityContactForce",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 8
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.BlockType#textureUri:member",
                  "docComment": "/**\n * The URI of the texture for the block type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get textureUri(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "textureUri",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                }
              ],
              "implementsTokenRanges": [
                {
                  "startIndex": 1,
                  "endIndex": 2
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "server!HYTOPIA.BlockTypeOptions:interface",
              "docComment": "/**\n * Options for creating a block type instance.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface BlockTypeOptions "
                }
              ],
              "fileUrlPath": "src/world/blocks/BlockType.ts",
              "releaseTag": "Public",
              "name": "BlockTypeOptions",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.BlockTypeOptions#customColliderOptions:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "customColliderOptions?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ColliderOptions",
                      "canonicalReference": "server!ColliderOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "customColliderOptions",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.BlockTypeOptions#id:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "id: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "id",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.BlockTypeOptions#name:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.BlockTypeOptions#textureUri:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "textureUri: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "textureUri",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Class",
              "canonicalReference": "server!HYTOPIA.BlockTypeRegistry:class",
              "docComment": "/**\n * Manages known block types in a world.\n *\n * @remarks\n *\n * Block type registries are created internally as a singleton for each {@link World} instance in a game server. A block type registry allows you to register and retrieve block types by their unique id for a world.\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `BlockTypeRegistry` class.\n *\n * @example\n * ```typescript\n * world.blockTypeRegistry.registerGenericBlockType({\n *   id: 15,\n *   textureUri: 'assets/textures/dirt.png',\n *   name: 'Dirt',\n * });\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export default class BlockTypeRegistry implements "
                },
                {
                  "kind": "Reference",
                  "text": "protocol.Serializable",
                  "canonicalReference": "@hytopia.com/server-protocol!Serializable:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                }
              ],
              "fileUrlPath": "src/world/blocks/BlockTypeRegistry.ts",
              "releaseTag": "Public",
              "isAbstract": false,
              "name": "BlockTypeRegistry",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.BlockTypeRegistry#getAllBlockTypes:member(1)",
                  "docComment": "/**\n * Get all registered block types.\n *\n * @returns An array of all registered block types.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAllBlockTypes(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "BlockType",
                      "canonicalReference": "server!BlockType:class"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getAllBlockTypes"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.BlockTypeRegistry#getBlockType:member(1)",
                  "docComment": "/**\n * Get a registered block type by its id.\n *\n * @param id - The id of the block type to get.\n *\n * @returns The block type with the given id.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getBlockType(id: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "BlockType",
                      "canonicalReference": "server!BlockType:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "id",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getBlockType"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.BlockTypeRegistry#registerBlockType:member(1)",
                  "docComment": "/**\n * Register a block type.\n *\n * @param id - The id of the block type to register.\n *\n * @param blockTypeReference - The block type to register.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "registerBlockType(id: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ", blockTypeReference: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BlockType",
                      "canonicalReference": "server!BlockType:class"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "id",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "blockTypeReference",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "registerBlockType"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.BlockTypeRegistry#registerGenericBlockType:member(1)",
                  "docComment": "/**\n * Register a generic block type.\n *\n * @param blockTypeOptions - The options for the block type.\n *\n * @returns The registered block type.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "registerGenericBlockType(blockTypeOptions: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BlockTypeOptions",
                      "canonicalReference": "server!BlockTypeOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "BlockType",
                      "canonicalReference": "server!BlockType:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "blockTypeOptions",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "registerGenericBlockType"
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.BlockTypeRegistry#world:member",
                  "docComment": "/**\n * The world the block type registry is for.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get world(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "World",
                      "canonicalReference": "server!World:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "world",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                }
              ],
              "implementsTokenRanges": [
                {
                  "startIndex": 1,
                  "endIndex": 2
                }
              ]
            },
            {
              "kind": "Namespace",
              "canonicalReference": "server!HYTOPIA.BlockTypeRegistryEventPayload:namespace",
              "docComment": "/**\n * Payloads for events a BlockTypeRegistry instance can emit.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare namespace BlockTypeRegistryEventPayload "
                }
              ],
              "fileUrlPath": "src/world/blocks/BlockTypeRegistry.ts",
              "releaseTag": "Public",
              "name": "BlockTypeRegistryEventPayload",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "server!HYTOPIA.BlockTypeRegistryEventPayload.RegisterBlockType:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface RegisterBlockType "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "RegisterBlockType",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.BlockTypeRegistryEventPayload.RegisterBlockType#blockType:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "blockType: "
                        },
                        {
                          "kind": "Reference",
                          "text": "BlockType",
                          "canonicalReference": "server!BlockType:class"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "blockType",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.BlockTypeRegistryEventPayload.RegisterBlockType#blockTypeRegistry:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "blockTypeRegistry: "
                        },
                        {
                          "kind": "Reference",
                          "text": "BlockTypeRegistry",
                          "canonicalReference": "server!BlockTypeRegistry:class"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "blockTypeRegistry",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.BlockTypeRegistryEventPayload.RegisterBlockType#id:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "id: "
                        },
                        {
                          "kind": "Content",
                          "text": "number"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "id",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "server!HYTOPIA.BlockTypeRegistryEventType:enum",
              "docComment": "/**\n * Event types a BlockTypeRegistry instance can emit.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare enum BlockTypeRegistryEventType "
                }
              ],
              "fileUrlPath": "src/world/blocks/BlockTypeRegistry.ts",
              "releaseTag": "Public",
              "name": "BlockTypeRegistryEventType",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.BlockTypeRegistryEventType.REGISTER_BLOCK_TYPE:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "REGISTER_BLOCK_TYPE = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"BLOCK_TYPE_REGISTRY.REGISTER_BLOCK_TYPE\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "REGISTER_BLOCK_TYPE"
                }
              ]
            },
            {
              "kind": "Namespace",
              "canonicalReference": "server!HYTOPIA.ChatEventPayload:namespace",
              "docComment": "/**\n * Payloads for events a ChatManager instance can emit.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare namespace ChatEventPayload "
                }
              ],
              "fileUrlPath": "src/world/chat/ChatManager.ts",
              "releaseTag": "Public",
              "name": "ChatEventPayload",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "server!HYTOPIA.ChatEventPayload.SendBroadcastMessage:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface SendBroadcastMessage "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "SendBroadcastMessage",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.ChatEventPayload.SendBroadcastMessage#color:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "color?: "
                        },
                        {
                          "kind": "Content",
                          "text": "string"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "color",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.ChatEventPayload.SendBroadcastMessage#message:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "message: "
                        },
                        {
                          "kind": "Content",
                          "text": "string"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "message",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "server!HYTOPIA.ChatEventPayload.SendPlayerMessage:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface SendPlayerMessage "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "SendPlayerMessage",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.ChatEventPayload.SendPlayerMessage#color:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "color?: "
                        },
                        {
                          "kind": "Content",
                          "text": "string"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": true,
                      "releaseTag": "Public",
                      "name": "color",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.ChatEventPayload.SendPlayerMessage#message:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "message: "
                        },
                        {
                          "kind": "Content",
                          "text": "string"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "message",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.ChatEventPayload.SendPlayerMessage#player:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "player: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Player",
                          "canonicalReference": "server!Player:class"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "player",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "server!HYTOPIA.ChatEventType:enum",
              "docComment": "/**\n * Event types a ChatManager instance can emit.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare enum ChatEventType "
                }
              ],
              "fileUrlPath": "src/world/chat/ChatManager.ts",
              "releaseTag": "Public",
              "name": "ChatEventType",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.ChatEventType.SEND_BROADCAST_MESSAGE:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "SEND_BROADCAST_MESSAGE = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"CHAT.SEND_BROADCAST_MESSAGE\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "SEND_BROADCAST_MESSAGE"
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.ChatEventType.SEND_PLAYER_MESSAGE:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "SEND_PLAYER_MESSAGE = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"CHAT.SEND_PLAYER_MESSAGE\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "SEND_PLAYER_MESSAGE"
                }
              ]
            },
            {
              "kind": "Class",
              "canonicalReference": "server!HYTOPIA.ChatManager:class",
              "docComment": "/**\n * Manages chat and commands in a world.\n *\n * @remarks\n *\n * The ChatManager is created internally as a singleton for each {@link World} instance in a game server. The ChatManager allows you to broadcast messages, send messages to specific players, and register commands that can be used in chat to execute game logic.\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `ChatManager` class.\n *\n * @example\n * ```typescript\n * world.chatManager.registerCommand('/kick', (player, args, message) => {\n *   const admins = [ 'arkdev', 'testuser123' ];\n *   if (admins.includes(player.username)) {\n *     const targetUsername = args[0];\n *     const targetPlayer = world.playerManager.getConnectedPlayerByUsername(targetUsername);\n *\n *     if (targetPlayer) {\n *       targetPlayer.disconnect();\n *     }\n *   }\n * });\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export default class ChatManager "
                }
              ],
              "fileUrlPath": "src/world/chat/ChatManager.ts",
              "releaseTag": "Public",
              "isAbstract": false,
              "name": "ChatManager",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.ChatManager#registerCommand:member(1)",
                  "docComment": "/**\n * Register a command and its callback.\n *\n * @param command - The command to register.\n *\n * @param callback - The callback function to execute when the command is used.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "registerCommand(command: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CommandCallback",
                      "canonicalReference": "server!CommandCallback:type"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "command",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "registerCommand"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.ChatManager#sendBroadcastMessage:member(1)",
                  "docComment": "/**\n * Send a broadcast message to all players in the world.\n *\n * @param message - The message to send.\n *\n * @param color - The color of the message as a hex color code, excluding #.\n *\n * @example\n * ```typescript\n * chatManager.sendBroadcastMessage('Hello, world!', 'FF00AA');\n * ```\n *\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "sendBroadcastMessage(message: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", color?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "message",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "color",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      },
                      "isOptional": true
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "sendBroadcastMessage"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.ChatManager#sendPlayerMessage:member(1)",
                  "docComment": "/**\n * Send a message to a specific player, only visible to them.\n *\n * @param player - The player to send the message to.\n *\n * @param message - The message to send.\n *\n * @param color - The color of the message as a hex color code, excluding #.\n *\n * @example\n * ```typescript\n * chatManager.sendPlayerMessage(player, 'Hello, player!', 'FF00AA');\n * ```\n *\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "sendPlayerMessage(player: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Player",
                      "canonicalReference": "server!Player:class"
                    },
                    {
                      "kind": "Content",
                      "text": ", message: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", color?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "player",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "message",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "color",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 6
                      },
                      "isOptional": true
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "sendPlayerMessage"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.ChatManager#unregisterCommand:member(1)",
                  "docComment": "/**\n * Unregister a command.\n *\n * @param command - The command to unregister.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "unregisterCommand(command: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "command",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "unregisterCommand"
                }
              ],
              "implementsTokenRanges": []
            },
            {
              "kind": "Class",
              "canonicalReference": "server!HYTOPIA.Chunk:class",
              "docComment": "/**\n * A 16^3 chunk of blocks. Used to represent a world's terrain.\n *\n * @remarks\n *\n * Chunks make up the bulk of the terrain in a world. Chunks are fixed size, each containing 16^3 possible blocks as a 16x16x16 cube. Chunks can be spawned, despawned, have their unique blocks set or removed, and more. Chunks represent their internal block coordinates in local space, meaning only coordinates x: 0...15, y: 0...15, z: 0...15 are valid.\n *\n * The Chunk follows a spawn and despawn lifecycle pattern. When you create a chunk, when you're ready to load it in your world you use .spawn(). To remove it, you use .despawn().\n *\n * Use .setBlock() to set the block type id at a specific local cooridnate. Block type ids are ones that have been registered in the {@link BlockTypeRegistry} associated with the {@link World} the chunk belongs to. A block type id of 0 is used to represent no block. Removing a block is done by .setBlock(localCoordinate, 0).\n *\n * @example\n * ```typescript\n * // Assume we previously registered a stone block with type id of 10..\n *\n * const chunk = new Chunk();\n *\n * chunk.setBlock({ x: 0, y: 0, z: 0 }, 10); // Set the block at 0, 0, 0 to stone\n * chunk.spawn(world, { x: 16, y: 0, z: 16 }); // Spawn the chunk at global coordinate 16, 0, 16\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export default class Chunk implements "
                },
                {
                  "kind": "Reference",
                  "text": "protocol.Serializable",
                  "canonicalReference": "@hytopia.com/server-protocol!Serializable:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                }
              ],
              "fileUrlPath": "src/world/blocks/Chunk.ts",
              "releaseTag": "Public",
              "isAbstract": false,
              "name": "Chunk",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Constructor",
                  "canonicalReference": "server!HYTOPIA.Chunk:constructor(1)",
                  "docComment": "/**\n * Creates a new chunk instance.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "constructor();"
                    }
                  ],
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": []
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Chunk.blockIndexToLocalCoordinate:member(1)",
                  "docComment": "/**\n * Convert a block index to a local coordinate.\n *\n * @param index - The index of the block to convert.\n *\n * @returns The local coordinate of the block.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "static blockIndexToLocalCoordinate(index: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": true,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "index",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "blockIndexToLocalCoordinate"
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Chunk#blocks:member",
                  "docComment": "/**\n * The blocks in the chunk as a flat Uint8Array[4096], each index as 0 or a block type id.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get blocks(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Readonly",
                      "canonicalReference": "!Readonly:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "Uint8Array",
                      "canonicalReference": "!Uint8Array:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "blocks",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Chunk#despawn:member(1)",
                  "docComment": "/**\n * Despawn the chunk from the world.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "despawn(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "despawn"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Chunk.globalCoordinateToLocalCoordinate:member(1)",
                  "docComment": "/**\n * Convert a global coordinate to a local coordinate.\n *\n * @param globalCoordinate - The global coordinate to convert.\n *\n * @returns The local coordinate.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "static globalCoordinateToLocalCoordinate(globalCoordinate: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": true,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "globalCoordinate",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "globalCoordinateToLocalCoordinate"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Chunk.globalCoordinateToOriginCoordinate:member(1)",
                  "docComment": "/**\n * Convert a global coordinate to an origin coordinate.\n *\n * @param globalCoordinate - The global coordinate to convert.\n *\n * @returns The origin coordinate.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "static globalCoordinateToOriginCoordinate(globalCoordinate: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": true,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "globalCoordinate",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "globalCoordinateToOriginCoordinate"
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Chunk#isSimulated:member",
                  "docComment": "/**\n * Whether the chunk is actively simulated in the internal physics engine.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get isSimulated(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "isSimulated",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Chunk#isSpawned:member",
                  "docComment": "/**\n * Whether the chunk has been spawned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get isSpawned(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "isSpawned",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Chunk.isValidOriginCoordinate:member(1)",
                  "docComment": "/**\n * Check if an origin coordinate is valid.\n *\n * @param coordinate - The coordinate to check.\n *\n * @returns Whether the coordinate is valid.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "static isValidOriginCoordinate(coordinate: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": true,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "coordinate",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "isValidOriginCoordinate"
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Chunk#originCoordinate:member",
                  "docComment": "/**\n * The origin coordinate of the chunk.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get originCoordinate(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "originCoordinate",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Chunk#setBlock:member(1)",
                  "docComment": "/**\n * Set the block at a specific local coordinate by block type id.\n *\n * @param localCoordinate - The local coordinate of the block to set.\n *\n * @param blockTypeId - The block type id to set.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setBlock(localCoordinate: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", blockTypeId: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "localCoordinate",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "blockTypeId",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setBlock"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Chunk#spawn:member(1)",
                  "docComment": "/**\n * Spawn the chunk in the world.\n *\n * @param world - The world to spawn the chunk in.\n *\n * @param originCoordinate - The origin coordinate of the chunk.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "spawn(world: "
                    },
                    {
                      "kind": "Reference",
                      "text": "World",
                      "canonicalReference": "server!World:class"
                    },
                    {
                      "kind": "Content",
                      "text": ", originCoordinate: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "world",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "originCoordinate",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "spawn"
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Chunk#world:member",
                  "docComment": "/**\n * The world the chunk belongs to.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get world(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "World",
                      "canonicalReference": "server!World:class"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "world",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                }
              ],
              "implementsTokenRanges": [
                {
                  "startIndex": 1,
                  "endIndex": 2
                }
              ]
            },
            {
              "kind": "Namespace",
              "canonicalReference": "server!HYTOPIA.ChunkEventPayload:namespace",
              "docComment": "/**\n * Payloads for events a Chunk instance can emit.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare namespace ChunkEventPayload "
                }
              ],
              "fileUrlPath": "src/world/blocks/Chunk.ts",
              "releaseTag": "Public",
              "name": "ChunkEventPayload",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "server!HYTOPIA.ChunkEventPayload.Despawn:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Despawn "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Despawn",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.ChunkEventPayload.Despawn#chunk:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "chunk: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Chunk",
                          "canonicalReference": "server!Chunk:class"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "chunk",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "server!HYTOPIA.ChunkEventPayload.SetBlock:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface SetBlock "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "SetBlock",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.ChunkEventPayload.SetBlock#blockTypeId:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "blockTypeId: "
                        },
                        {
                          "kind": "Content",
                          "text": "number"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "blockTypeId",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.ChunkEventPayload.SetBlock#chunk:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "chunk: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Chunk",
                          "canonicalReference": "server!Chunk:class"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "chunk",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.ChunkEventPayload.SetBlock#globalCoordinate:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "globalCoordinate: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Vector3",
                          "canonicalReference": "server!Vector3:interface"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "globalCoordinate",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.ChunkEventPayload.SetBlock#localCoordinate:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "localCoordinate: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Vector3",
                          "canonicalReference": "server!Vector3:interface"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "localCoordinate",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "server!HYTOPIA.ChunkEventPayload.Spawn:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Spawn "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Spawn",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.ChunkEventPayload.Spawn#chunk:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "chunk: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Chunk",
                          "canonicalReference": "server!Chunk:class"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "chunk",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "server!HYTOPIA.ChunkEventType:enum",
              "docComment": "/**\n * Event types a Chunk instance can emit.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare enum ChunkEventType "
                }
              ],
              "fileUrlPath": "src/world/blocks/Chunk.ts",
              "releaseTag": "Public",
              "name": "ChunkEventType",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.ChunkEventType.DESPAWN:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "DESPAWN = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"CHUNK.DESPAWN\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "DESPAWN"
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.ChunkEventType.SET_BLOCK:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "SET_BLOCK = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"CHUNK.SET_BLOCK\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "SET_BLOCK"
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.ChunkEventType.SPAWN:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "SPAWN = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"CHUNK.SPAWN\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "SPAWN"
                }
              ]
            },
            {
              "kind": "Class",
              "canonicalReference": "server!HYTOPIA.ChunkLattice:class",
              "docComment": "/**\n * A lattice of chunks that represent a world's terrain.\n *\n * @remarks\n *\n * The ChunkLattice lattice tracks the current terrain of a world, comprised of {@link Chunk} instances.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export default class ChunkLattice "
                }
              ],
              "fileUrlPath": "src/world/blocks/ChunkLattice.ts",
              "releaseTag": "Public",
              "isAbstract": false,
              "name": "ChunkLattice",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Constructor",
                  "canonicalReference": "server!HYTOPIA.ChunkLattice:constructor(1)",
                  "docComment": "/**\n * Creates a new chunk lattice instance.\n *\n * @param world - The world the chunk lattice is for.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "constructor(world: "
                    },
                    {
                      "kind": "Reference",
                      "text": "World",
                      "canonicalReference": "server!World:class"
                    },
                    {
                      "kind": "Content",
                      "text": ");"
                    }
                  ],
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "world",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ]
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.ChunkLattice#getAllChunks:member(1)",
                  "docComment": "/**\n * Get all chunks in the lattice.\n *\n * @returns An array of all chunks in the lattice.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAllChunks(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Chunk",
                      "canonicalReference": "server!Chunk:class"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getAllChunks"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.ChunkLattice#getChunk:member(1)",
                  "docComment": "/**\n * Get a chunk by its origin coordinate.\n *\n * @param originCoordinate - The origin coordinate of the chunk to get.\n *\n * @returns The chunk at the given origin coordinate or undefined if not found.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getChunk(originCoordinate: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Chunk",
                      "canonicalReference": "server!Chunk:class"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "originCoordinate",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getChunk"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.ChunkLattice#hasChunk:member(1)",
                  "docComment": "/**\n * Check if a chunk exists by its origin coordinate.\n *\n * @param originCoordinate - The origin coordinate of the chunk to check.\n *\n * @returns Whether the chunk exists.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "hasChunk(originCoordinate: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "originCoordinate",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "hasChunk"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.ChunkLattice#setBlock:member(1)",
                  "docComment": "/**\n * Set the block at a global coordinate by block type id, automatically creating a chunk if it doesn't exist.\n *\n * @param globalCoordinate - The global coordinate of the block to set.\n *\n * @param blockTypeId - The block type id to set.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setBlock(globalCoordinate: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", blockTypeId: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "globalCoordinate",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "blockTypeId",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setBlock"
                }
              ],
              "implementsTokenRanges": []
            },
            {
              "kind": "Class",
              "canonicalReference": "server!HYTOPIA.Collider:class",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export default class Collider "
                }
              ],
              "fileUrlPath": "src/world/physics/Collider.ts",
              "releaseTag": "Public",
              "isAbstract": false,
              "name": "Collider",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Constructor",
                  "canonicalReference": "server!HYTOPIA.Collider:constructor(1)",
                  "docComment": "/**\n * Constructs a new instance of the `Collider` class\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "constructor(colliderOptions: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ColliderOptions",
                      "canonicalReference": "server!ColliderOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ");"
                    }
                  ],
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "colliderOptions",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ]
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Collider#addToSimulation:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addToSimulation(simulation: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Simulation",
                      "canonicalReference": "server!Simulation:class"
                    },
                    {
                      "kind": "Content",
                      "text": ", parentRigidBody?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RigidBody",
                      "canonicalReference": "server!RigidBody:class"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "simulation",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "parentRigidBody",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      },
                      "isOptional": true
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "addToSimulation"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Collider#enableCollisionEvents:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "enableCollisionEvents(enabled: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "enabled",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "enableCollisionEvents"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Collider#enableContactForceEvents:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "enableContactForceEvents(enabled: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "enabled",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "enableContactForceEvents"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Collider#getCollisionGroups:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCollisionGroups(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "CollisionGroups",
                      "canonicalReference": "server!CollisionGroups:type"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getCollisionGroups"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Collider#getFriction:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getFriction(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getFriction"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Collider#getRelativeRotation:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRelativeRotation(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Rotation",
                      "canonicalReference": "server!Rotation:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getRelativeRotation"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Collider#getRelativeTranslation:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRelativeTranslation(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getRelativeTranslation"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Collider#getRestitution:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRestitution(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getRestitution"
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Collider#isEnabled:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get isEnabled(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "isEnabled",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Collider#isRemoved:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get isRemoved(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "isRemoved",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Collider#isSensor:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get isSensor(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "isSensor",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Collider#isSimulated:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get isSimulated(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "isSimulated",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Collider#parentRigidBody:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get parentRigidBody(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RigidBody",
                      "canonicalReference": "server!RigidBody:class"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "parentRigidBody",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Collider#rawCollider:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get rawCollider(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RAPIER.Collider",
                      "canonicalReference": "@dimforge/rapier3d-compat!Collider:class"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "rawCollider",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Collider#removeFromSimulation:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeFromSimulation(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "removeFromSimulation"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Collider#setBounciness:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setBounciness(bounciness: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "bounciness",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setBounciness"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Collider#setCollisionGroups:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setCollisionGroups(collisionGroups: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CollisionGroups",
                      "canonicalReference": "server!CollisionGroups:type"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "collisionGroups",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setCollisionGroups"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Collider#setEnabled:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setEnabled(enabled: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "enabled",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setEnabled"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Collider#setFriction:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setFriction(friction: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "friction",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setFriction"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Collider#setMass:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setMass(mass: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "mass",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setMass"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Collider#setOnCollision:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setOnCollision(callback: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CollisionCallback",
                      "canonicalReference": "server!CollisionCallback:type"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setOnCollision"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Collider#setRelativeRotation:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setRelativeRotation(rotation: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Rotation",
                      "canonicalReference": "server!Rotation:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "rotation",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setRelativeRotation"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Collider#setRelativeTranslation:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setRelativeTranslation(translation: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "translation",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setRelativeTranslation"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Collider#setSensor:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setSensor(sensor: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "sensor",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setSensor"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Collider#setTag:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setTag(tag: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "tag",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setTag"
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Collider#tag:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get tag(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "tag",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                }
              ],
              "implementsTokenRanges": []
            },
            {
              "kind": "Class",
              "canonicalReference": "server!HYTOPIA.ColliderMap:class",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export default class ColliderMap "
                }
              ],
              "fileUrlPath": "src/world/physics/ColliderMap.ts",
              "releaseTag": "Public",
              "isAbstract": false,
              "name": "ColliderMap",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.ColliderMap#getColliderBlockType:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getColliderBlockType(collider: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Collider",
                      "canonicalReference": "server!Collider:class"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "BlockType",
                      "canonicalReference": "server!BlockType:class"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "collider",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getColliderBlockType"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.ColliderMap#getColliderCollisionCallback:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getColliderCollisionCallback(collider: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Collider",
                      "canonicalReference": "server!Collider:class"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "CollisionCallback",
                      "canonicalReference": "server!CollisionCallback:type"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "collider",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getColliderCollisionCallback"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.ColliderMap#getRawColliderBlockType:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRawColliderBlockType(collider: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RAPIER.Collider",
                      "canonicalReference": "@dimforge/rapier3d-compat!Collider:class"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "BlockType",
                      "canonicalReference": "server!BlockType:class"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "collider",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getRawColliderBlockType"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.ColliderMap#getRawColliderCollisionCallback:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRawColliderCollisionCallback(collider: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RAPIER.Collider",
                      "canonicalReference": "@dimforge/rapier3d-compat!Collider:class"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "CollisionCallback",
                      "canonicalReference": "server!CollisionCallback:type"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "collider",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getRawColliderCollisionCallback"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.ColliderMap#getRawRigidBodyEntity:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRawRigidBodyEntity(rigidBody: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RAPIER.RigidBody",
                      "canonicalReference": "@dimforge/rapier3d-compat!RigidBody:class"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entity",
                      "canonicalReference": "server!Entity:class"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "rigidBody",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getRawRigidBodyEntity"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.ColliderMap#removeColliderBlockType:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeColliderBlockType(collider: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Collider",
                      "canonicalReference": "server!Collider:class"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "collider",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "removeColliderBlockType"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.ColliderMap#removeColliderCollisionCallback:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeColliderCollisionCallback(collider: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Collider",
                      "canonicalReference": "server!Collider:class"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "collider",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "removeColliderCollisionCallback"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.ColliderMap#removeRawRigidBodyEntity:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeRawRigidBodyEntity(rigidBody: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RAPIER.RigidBody",
                      "canonicalReference": "@dimforge/rapier3d-compat!RigidBody:class"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "rigidBody",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "removeRawRigidBodyEntity"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.ColliderMap#setColliderBlockType:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setColliderBlockType(collider: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Collider",
                      "canonicalReference": "server!Collider:class"
                    },
                    {
                      "kind": "Content",
                      "text": ", block: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BlockType",
                      "canonicalReference": "server!BlockType:class"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "collider",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "block",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setColliderBlockType"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.ColliderMap#setColliderCollisionCallback:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setColliderCollisionCallback(collider: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Collider",
                      "canonicalReference": "server!Collider:class"
                    },
                    {
                      "kind": "Content",
                      "text": ", callback: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CollisionCallback",
                      "canonicalReference": "server!CollisionCallback:type"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "collider",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "callback",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setColliderCollisionCallback"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.ColliderMap#setRawRigidBodyEntity:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setRawRigidBodyEntity(rigidBody: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RAPIER.RigidBody",
                      "canonicalReference": "@dimforge/rapier3d-compat!RigidBody:class"
                    },
                    {
                      "kind": "Content",
                      "text": ", entity: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entity",
                      "canonicalReference": "server!Entity:class"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "rigidBody",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "entity",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setRawRigidBodyEntity"
                }
              ],
              "implementsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "server!HYTOPIA.ColliderOptions:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface ColliderOptions "
                }
              ],
              "fileUrlPath": "src/world/physics/Collider.ts",
              "releaseTag": "Public",
              "name": "ColliderOptions",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.ColliderOptions#borderRadius:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "borderRadius?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "borderRadius",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.ColliderOptions#bounciness:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "bounciness?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "bounciness",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.ColliderOptions#collisionGroups:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "collisionGroups?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CollisionGroups",
                      "canonicalReference": "server!CollisionGroups:type"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "collisionGroups",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.ColliderOptions#enabled:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "enabled?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "enabled",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.ColliderOptions#friction:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "friction?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "friction",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.ColliderOptions#halfExtents:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "halfExtents?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "halfExtents",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.ColliderOptions#halfHeight:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "halfHeight?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "halfHeight",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.ColliderOptions#isSensor:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "isSensor?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "isSensor",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.ColliderOptions#mass:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "mass?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "mass",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.ColliderOptions#onCollision:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "onCollision?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CollisionCallback",
                      "canonicalReference": "server!CollisionCallback:type"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "onCollision",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.ColliderOptions#parentRigidBody:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "parentRigidBody?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RigidBody",
                      "canonicalReference": "server!RigidBody:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "parentRigidBody",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.ColliderOptions#radius:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "radius?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "radius",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.ColliderOptions#relativeRotation:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "relativeRotation?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Rotation",
                      "canonicalReference": "server!Rotation:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "relativeRotation",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.ColliderOptions#relativeTranslation:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "relativeTranslation?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "relativeTranslation",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.ColliderOptions#shape:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "shape: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ColliderShape",
                      "canonicalReference": "server!ColliderShape:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "shape",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.ColliderOptions#simulation:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "simulation?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Simulation",
                      "canonicalReference": "server!Simulation:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "simulation",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.ColliderOptions#tag:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tag?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "tag",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "server!HYTOPIA.ColliderShape:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare enum ColliderShape "
                }
              ],
              "fileUrlPath": "src/world/physics/Collider.ts",
              "releaseTag": "Public",
              "name": "ColliderShape",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.ColliderShape.BALL:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "BALL = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"ball\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "BALL"
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.ColliderShape.BLOCK:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "BLOCK = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"block\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "BLOCK"
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.ColliderShape.CAPSULE:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "CAPSULE = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"capsule\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "CAPSULE"
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.ColliderShape.CONE:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "CONE = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"cone\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "CONE"
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.ColliderShape.CYLINDER:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "CYLINDER = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"cylinder\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "CYLINDER"
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.ColliderShape.ROUND_CYLINDER:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "ROUND_CYLINDER = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"round-cylinder\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "ROUND_CYLINDER"
                }
              ]
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "server!HYTOPIA.CollisionCallback:type",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export type CollisionCallback = "
                },
                {
                  "kind": "Content",
                  "text": "(other: "
                },
                {
                  "kind": "Reference",
                  "text": "BlockType",
                  "canonicalReference": "server!BlockType:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Entity",
                  "canonicalReference": "server!Entity:class"
                },
                {
                  "kind": "Content",
                  "text": ", started: boolean) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/world/physics/ColliderMap.ts",
              "releaseTag": "Public",
              "name": "CollisionCallback",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "Enum",
              "canonicalReference": "server!HYTOPIA.CollisionGroup:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare enum CollisionGroup "
                }
              ],
              "fileUrlPath": "src/world/physics/CollisionGroupsBuilder.ts",
              "releaseTag": "Public",
              "name": "CollisionGroup",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.CollisionGroup.ALL:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "ALL = "
                    },
                    {
                      "kind": "Content",
                      "text": "65535"
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "ALL"
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.CollisionGroup.BLOCK:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "BLOCK = "
                    },
                    {
                      "kind": "Content",
                      "text": "1"
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "BLOCK"
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.CollisionGroup.ENTITY:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "ENTITY = "
                    },
                    {
                      "kind": "Content",
                      "text": "2"
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "ENTITY"
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.CollisionGroup.ENTITY_SENSOR:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "ENTITY_SENSOR = "
                    },
                    {
                      "kind": "Content",
                      "text": "4"
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "ENTITY_SENSOR"
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.CollisionGroup.PLAYER:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "PLAYER = "
                    },
                    {
                      "kind": "Content",
                      "text": "8"
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "PLAYER"
                }
              ]
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "server!HYTOPIA.CollisionGroups:type",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export type CollisionGroups = "
                },
                {
                  "kind": "Content",
                  "text": "{\n    belongsTo: "
                },
                {
                  "kind": "Reference",
                  "text": "CollisionGroup",
                  "canonicalReference": "server!CollisionGroup:enum"
                },
                {
                  "kind": "Content",
                  "text": "[];\n    collidesWith: "
                },
                {
                  "kind": "Reference",
                  "text": "CollisionGroup",
                  "canonicalReference": "server!CollisionGroup:enum"
                },
                {
                  "kind": "Content",
                  "text": "[];\n}"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/world/physics/CollisionGroupsBuilder.ts",
              "releaseTag": "Public",
              "name": "CollisionGroups",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "Class",
              "canonicalReference": "server!HYTOPIA.CollisionGroupsBuilder:class",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export default class CollisionGroupsBuilder "
                }
              ],
              "fileUrlPath": "src/world/physics/CollisionGroupsBuilder.ts",
              "releaseTag": "Public",
              "isAbstract": false,
              "name": "CollisionGroupsBuilder",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.CollisionGroupsBuilder.buildRawCollisionGroups:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "static buildRawCollisionGroups(collisionGroups: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CollisionGroups",
                      "canonicalReference": "server!CollisionGroups:type"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RawCollisionGroups",
                      "canonicalReference": "server!RawCollisionGroups:type"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": true,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "collisionGroups",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "buildRawCollisionGroups"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.CollisionGroupsBuilder.decodeCollisionGroups:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "static decodeCollisionGroups(collisionGroups: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CollisionGroups",
                      "canonicalReference": "server!CollisionGroups:type"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "DecodedCollisionGroups",
                      "canonicalReference": "server!DecodedCollisionGroups:type"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": true,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "collisionGroups",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "decodeCollisionGroups"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.CollisionGroupsBuilder.decodeRawCollisionGroups:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "static decodeRawCollisionGroups(groups: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RawCollisionGroups",
                      "canonicalReference": "server!RawCollisionGroups:type"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "CollisionGroups",
                      "canonicalReference": "server!CollisionGroups:type"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": true,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "groups",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "decodeRawCollisionGroups"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.CollisionGroupsBuilder.isDefaultCollisionGroups:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "static isDefaultCollisionGroups(collisionGroups: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CollisionGroups",
                      "canonicalReference": "server!CollisionGroups:type"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": true,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "collisionGroups",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "isDefaultCollisionGroups"
                }
              ],
              "implementsTokenRanges": []
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "server!HYTOPIA.CollisionObject:type",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export type CollisionObject = "
                },
                {
                  "kind": "Reference",
                  "text": "BlockType",
                  "canonicalReference": "server!BlockType:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Entity",
                  "canonicalReference": "server!Entity:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "CollisionCallback",
                  "canonicalReference": "server!CollisionCallback:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/world/physics/ColliderMap.ts",
              "releaseTag": "Public",
              "name": "CollisionObject",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "server!HYTOPIA.CommandCallback:type",
              "docComment": "/**\n * A callback function for a chat command.\n *\n * @param player - The player that sent the command.\n *\n * @param args - An array of arguments, comprised of all space separated text after the command.\n *\n * @param message - The full message of the command.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export type CommandCallback = "
                },
                {
                  "kind": "Content",
                  "text": "(player: "
                },
                {
                  "kind": "Reference",
                  "text": "Player",
                  "canonicalReference": "server!Player:class"
                },
                {
                  "kind": "Content",
                  "text": ", args: string[], message: string) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/world/chat/ChatManager.ts",
              "releaseTag": "Public",
              "name": "CommandCallback",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "server!HYTOPIA.DecodedCollisionGroups:type",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export type DecodedCollisionGroups = "
                },
                {
                  "kind": "Content",
                  "text": "{\n    belongsTo: string[];\n    collidesWith: string[];\n}"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/world/physics/CollisionGroupsBuilder.ts",
              "releaseTag": "Public",
              "name": "DecodedCollisionGroups",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "server!HYTOPIA.DEFAULT_ENTITY_RIGID_BODY_OPTIONS:var",
              "docComment": "/**\n * The default rigid body options when EntityOptions.rigidBodyOptions is not provided.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DEFAULT_ENTITY_RIGID_BODY_OPTIONS: "
                },
                {
                  "kind": "Reference",
                  "text": "RigidBodyOptions",
                  "canonicalReference": "server!RigidBodyOptions:interface"
                }
              ],
              "fileUrlPath": "src/world/entities/Entity.ts",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "DEFAULT_ENTITY_RIGID_BODY_OPTIONS",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Class",
              "canonicalReference": "server!HYTOPIA.DefaultCharacterController:class",
              "docComment": "/**\n * The default character controller implementation.\n *\n * @remarks\n *\n * This class extends {@link BaseCharacterController} and implements the default movement logic for a character entity. This is used as the default for players when they join your game. This class may be extended if you'd like to implement additional logic on top of the DefaultCharacterController implementation.\n *\n * @example\n * ```typescript\n * // Create a custom character controller for myEntity, prior to spawning it.\n * myEntity.createCustomCharacterController = () => {\n *   return new DefaultCharacterController(myEntity, {\n *     jumpVelocity: 10,\n *     runVelocity: 8,\n *     walkVelocity: 4,\n *   });\n * };\n *\n * // Spawn the entity in the world.\n * myEntity.spawn(world, { x: 53, y: 10, z: 23 });\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export default class DefaultCharacterController extends "
                },
                {
                  "kind": "Reference",
                  "text": "BaseCharacterController",
                  "canonicalReference": "server!BaseCharacterController:class"
                },
                {
                  "kind": "Content",
                  "text": " "
                }
              ],
              "fileUrlPath": "src/world/entities/controllers/DefaultCharacterController.ts",
              "releaseTag": "Public",
              "isAbstract": false,
              "name": "DefaultCharacterController",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Constructor",
                  "canonicalReference": "server!HYTOPIA.DefaultCharacterController:constructor(1)",
                  "docComment": "/**\n * Constructs a new instance of the `DefaultCharacterController` class\n *\n * @param entity - The entity the controller is for.\n *\n * @param options - Options for the controller.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "constructor(entity: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entity",
                      "canonicalReference": "server!Entity:class"
                    },
                    {
                      "kind": "Content",
                      "text": ", options?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DefaultCharacterControllerOptions",
                      "canonicalReference": "server!DefaultCharacterControllerOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ");"
                    }
                  ],
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "entity",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      },
                      "isOptional": true
                    }
                  ]
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.DefaultCharacterController#canJump:member",
                  "docComment": "/**\n * A function allowing custom logic to determine if the entity can jump.\n *\n * @param this - The character controller instance.\n *\n * @returns Whether the entity can jump.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "canJump: "
                    },
                    {
                      "kind": "Content",
                      "text": "(this: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DefaultCharacterController",
                      "canonicalReference": "server!DefaultCharacterController:class"
                    },
                    {
                      "kind": "Content",
                      "text": ") => boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "canJump",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.DefaultCharacterController#canRun:member",
                  "docComment": "/**\n * A function allowing custom logic to determine if the entity can run.\n *\n * @param this - The character controller instance.\n *\n * @returns Whether the entity can run.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "canRun: "
                    },
                    {
                      "kind": "Content",
                      "text": "(this: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DefaultCharacterController",
                      "canonicalReference": "server!DefaultCharacterController:class"
                    },
                    {
                      "kind": "Content",
                      "text": ") => boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "canRun",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.DefaultCharacterController#canWalk:member",
                  "docComment": "/**\n * A function allowing custom logic to determine if the entity can walk.\n *\n * @param this - The character controller instance.\n *\n * @returns Whether the entity can walk.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "canWalk: "
                    },
                    {
                      "kind": "Content",
                      "text": "(this: "
                    },
                    {
                      "kind": "Reference",
                      "text": "DefaultCharacterController",
                      "canonicalReference": "server!DefaultCharacterController:class"
                    },
                    {
                      "kind": "Content",
                      "text": ") => boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "canWalk",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.DefaultCharacterController#createSensorColliders:member(1)",
                  "docComment": "/**\n * Creates the sensor colliders for the character controller, overriding the default implementation.\n *\n * @returns An array of colliders.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "createSensorColliders(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Collider",
                      "canonicalReference": "server!Collider:class"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "createSensorColliders"
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.DefaultCharacterController#isGrounded:member",
                  "docComment": "/**\n * Whether the entity is grounded.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get isGrounded(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "isGrounded",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.DefaultCharacterController#isOnPlatform:member",
                  "docComment": "/**\n * Whether the entity is on a platform, a platform is any entity with a kinematic rigid body.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get isOnPlatform(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "isOnPlatform",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.DefaultCharacterController#jumpVelocity:member",
                  "docComment": "/**\n * The upward velocity applied to the entity when it jumps.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "jumpVelocity: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "jumpVelocity",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.DefaultCharacterController#platform:member",
                  "docComment": "/**\n * The platform the entity is on, if any.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get platform(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entity",
                      "canonicalReference": "server!Entity:class"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "platform",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.DefaultCharacterController#runVelocity:member",
                  "docComment": "/**\n * The normalized horizontal velocity applied to the entity when it runs.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "runVelocity: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "runVelocity",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.DefaultCharacterController#tickPathfindingMovement:member(1)",
                  "docComment": "/**\n * Ticks the pathfinding movement for the character controller, overriding the default implementation.\n *\n * @param destination - The destination to move to.\n *\n * @param deltaTimeMs - The delta time in milliseconds since the last tick.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tickPathfindingMovement(destination: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", deltaTimeMs: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "destination",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "deltaTimeMs",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "tickPathfindingMovement"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.DefaultCharacterController#tickPlayerMovement:member(1)",
                  "docComment": "/**\n * Ticks the player movement for the character controller, overriding the default implementation.\n *\n * @param inputState - The current input state of the player.\n *\n * @param orientationState - The current orientation state of the player.\n *\n * @param deltaTimeMs - The delta time in milliseconds since the last tick.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tickPlayerMovement(inputState: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PlayerInputState",
                      "canonicalReference": "server!PlayerInputState:type"
                    },
                    {
                      "kind": "Content",
                      "text": ", orientationState: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PlayerOrientationState",
                      "canonicalReference": "server!PlayerOrientationState:type"
                    },
                    {
                      "kind": "Content",
                      "text": ", deltaTimeMs: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "inputState",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "orientationState",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "deltaTimeMs",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 6
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "tickPlayerMovement"
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.DefaultCharacterController#walkVelocity:member",
                  "docComment": "/**\n * The normalized horizontal velocity applied to the entity when it walks.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "walkVelocity: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "walkVelocity",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                }
              ],
              "extendsTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "implementsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "server!HYTOPIA.DefaultCharacterControllerOptions:interface",
              "docComment": "/**\n * Options for creating a DefaultCharacterController instance.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface DefaultCharacterControllerOptions "
                }
              ],
              "fileUrlPath": "src/world/entities/controllers/DefaultCharacterController.ts",
              "releaseTag": "Public",
              "name": "DefaultCharacterControllerOptions",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.DefaultCharacterControllerOptions#canJump:member",
                  "docComment": "/**\n * A function allowing custom logic to determine if the entity can jump.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "canJump?: "
                    },
                    {
                      "kind": "Content",
                      "text": "() => boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "canJump",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.DefaultCharacterControllerOptions#canRun:member",
                  "docComment": "/**\n * A function allowing custom logic to determine if the entity can run.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "canRun?: "
                    },
                    {
                      "kind": "Content",
                      "text": "() => boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "canRun",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.DefaultCharacterControllerOptions#canWalk:member",
                  "docComment": "/**\n * A function allowing custom logic to determine if the entity can walk.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "canWalk?: "
                    },
                    {
                      "kind": "Content",
                      "text": "() => boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "canWalk",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.DefaultCharacterControllerOptions#jumpVelocity:member",
                  "docComment": "/**\n * The upward velocity applied to the entity when it jumps.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "jumpVelocity?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "jumpVelocity",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.DefaultCharacterControllerOptions#runVelocity:member",
                  "docComment": "/**\n * The normalized horizontal velocity applied to the entity when it runs.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "runVelocity?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "runVelocity",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.DefaultCharacterControllerOptions#walkVelocity:member",
                  "docComment": "/**\n * The normalized horizontal velocity applied to the entity when it walks.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "walkVelocity?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "walkVelocity",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Class",
              "canonicalReference": "server!HYTOPIA.Entity:class",
              "docComment": "/**\n * Represents an entity in a world.\n *\n * @remarks\n *\n * Entities are highly configurable and controllable. All entities are created from a .gltf model asset and allow full control of their rigid body and attached collider dynamics.\n *\n * @example\n * ```typescript\n * const spider = new Entity({\n *   name: 'Spider',\n *   modelUri: 'models/spider.gltf',\n *   modelLoopedAnimations: [ 'walk' ],\n *   rigidBodyOptions: {\n *     type: RigidBodyType.DYNAMIC,\n *     enabledRotations: { x: false, y: true, z: false },\n *     colliders: [\n *       {\n *         shape: ColliderShape.ROUND_CYLINDER,\n *         borderRadius: 0.1,\n *         halfHeight: 0.225,\n *         radius: 0.5,\n *         tag: 'body',\n *       }\n *     ],\n *   },\n * });\n *\n * spider.spawn(world, { x: 20, y: 6, z: 10 });\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export default class Entity extends "
                },
                {
                  "kind": "Reference",
                  "text": "RigidBody",
                  "canonicalReference": "server!RigidBody:class"
                },
                {
                  "kind": "Content",
                  "text": " implements "
                },
                {
                  "kind": "Reference",
                  "text": "protocol.Serializable",
                  "canonicalReference": "@hytopia.com/server-protocol!Serializable:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                }
              ],
              "fileUrlPath": "src/world/entities/Entity.ts",
              "releaseTag": "Public",
              "isAbstract": false,
              "name": "Entity",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Constructor",
                  "canonicalReference": "server!HYTOPIA.Entity:constructor(1)",
                  "docComment": "/**\n * Constructs a new instance of the `Entity` class\n *\n * @param options - The options for the entity instance.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "constructor(options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "EntityOptions",
                      "canonicalReference": "server!EntityOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ");"
                    }
                  ],
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ]
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Entity#characterController:member",
                  "docComment": "/**\n * The character controller for the entity.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get characterController(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseCharacterController",
                      "canonicalReference": "server!BaseCharacterController:class"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "characterController",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Entity#createCustomCharacterController:member",
                  "docComment": "/**\n * A function that creates a custom character controller for the entity.\n *\n * @param this - The Entity instance.\n *\n * @returns A character controller that extends {@link BaseCharacterController}.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "createCustomCharacterController?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(this: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entity",
                      "canonicalReference": "server!Entity:class"
                    },
                    {
                      "kind": "Content",
                      "text": ") => "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseCharacterController",
                      "canonicalReference": "server!BaseCharacterController:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "createCustomCharacterController",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Entity#despawn:member(1)",
                  "docComment": "/**\n * Despawns the entity from the world.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "despawn(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "despawn"
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Entity#id:member",
                  "docComment": "/**\n * The unique identifier for the entity.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get id(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "id",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Entity#isSpawned:member",
                  "docComment": "/**\n * Whether the entity is spawned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get isSpawned(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "isSpawned",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Entity#modelLoopedAnimations:member",
                  "docComment": "/**\n * The looped animations to start when the entity is spawned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get modelLoopedAnimations(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ReadonlySet",
                      "canonicalReference": "!ReadonlySet:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<string>"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "modelLoopedAnimations",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Entity#modelScale:member",
                  "docComment": "/**\n * The scale of the entity's model.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get modelScale(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "modelScale",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Entity#modelUri:member",
                  "docComment": "/**\n * The URI or path to the .gltf model asset to be used for the entity.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get modelUri(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "modelUri",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Entity#name:member",
                  "docComment": "/**\n * The name of the entity.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get name(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Entity#onBlockCollision:member",
                  "docComment": "/**\n * A function that is called when the entity collides with a block.\n *\n * @param this - The Entity instance.\n *\n * @param block - The block that the entity collided with.\n *\n * @param started - Whether the collision started or ended.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "onBlockCollision?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(this: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entity",
                      "canonicalReference": "server!Entity:class"
                    },
                    {
                      "kind": "Content",
                      "text": ", block: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BlockType",
                      "canonicalReference": "server!BlockType:class"
                    },
                    {
                      "kind": "Content",
                      "text": ", started: boolean) => void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "onBlockCollision",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Entity#onBlockContactForce:member",
                  "docComment": "/**\n * A function that is called when the entity collides with a block.\n *\n * @param this - The Entity instance.\n *\n * @param block - The block that the entity collided with.\n *\n * @param contactForceData - The contact force data.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "onBlockContactForce?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(this: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entity",
                      "canonicalReference": "server!Entity:class"
                    },
                    {
                      "kind": "Content",
                      "text": ", block: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BlockType",
                      "canonicalReference": "server!BlockType:class"
                    },
                    {
                      "kind": "Content",
                      "text": ", contactForceData: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ContactForceData",
                      "canonicalReference": "server!~ContactForceData:type"
                    },
                    {
                      "kind": "Content",
                      "text": ") => void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "onBlockContactForce",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 8
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Entity#onDespawn:member",
                  "docComment": "/**\n * A function that is called when the entity is despawned.\n *\n * @param this - The Entity instance.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "onDespawn?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(this: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entity",
                      "canonicalReference": "server!Entity:class"
                    },
                    {
                      "kind": "Content",
                      "text": ") => void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "onDespawn",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Entity#onEntityCollision:member",
                  "docComment": "/**\n * A function that is called when the entity collides with another entity.\n *\n * @param this - The Entity instance.\n *\n * @param entity - The entity that the entity collided with.\n *\n * @param started - Whether the collision started or ended.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "onEntityCollision?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(this: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entity",
                      "canonicalReference": "server!Entity:class"
                    },
                    {
                      "kind": "Content",
                      "text": ", entity: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entity",
                      "canonicalReference": "server!Entity:class"
                    },
                    {
                      "kind": "Content",
                      "text": ", started: boolean) => void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "onEntityCollision",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Entity#onEntityContactForce:member",
                  "docComment": "/**\n * A function that is called when the entity contacts another entity.\n *\n * @param this - The Entity instance.\n *\n * @param entity - The entity that the entity collided with.\n *\n * @param contactForceData - The contact force data.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "onEntityContactForce?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(this: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entity",
                      "canonicalReference": "server!Entity:class"
                    },
                    {
                      "kind": "Content",
                      "text": ", entity: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entity",
                      "canonicalReference": "server!Entity:class"
                    },
                    {
                      "kind": "Content",
                      "text": ", contactForceData: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ContactForceData",
                      "canonicalReference": "server!~ContactForceData:type"
                    },
                    {
                      "kind": "Content",
                      "text": ") => void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "onEntityContactForce",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 8
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Entity#onSpawn:member",
                  "docComment": "/**\n * A function that is called when the entity is spawned.\n *\n * @param this - The Entity instance.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "onSpawn?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(this: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entity",
                      "canonicalReference": "server!Entity:class"
                    },
                    {
                      "kind": "Content",
                      "text": ") => void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "onSpawn",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Entity#onTick:member",
                  "docComment": "/**\n * A function that is called every tick.\n *\n * @param this - The Entity instance.\n *\n * @param tickDeltaMs - The delta time in milliseconds since the last tick.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "onTick?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(this: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entity",
                      "canonicalReference": "server!Entity:class"
                    },
                    {
                      "kind": "Content",
                      "text": ", tickDeltaMs: number) => void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "onTick",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Entity#setCharacterController:member(1)",
                  "docComment": "/**\n * Sets the character controller for the entity.\n *\n * @param characterController - The character controller to set.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setCharacterController(characterController: "
                    },
                    {
                      "kind": "Reference",
                      "text": "BaseCharacterController",
                      "canonicalReference": "server!BaseCharacterController:class"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "characterController",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setCharacterController"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Entity#spawn:member(1)",
                  "docComment": "/**\n * Spawns the entity in the world.\n *\n * @param world - The world to spawn the entity in.\n *\n * @param coordinate - The coordinate to spawn the entity at.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "spawn(world: "
                    },
                    {
                      "kind": "Reference",
                      "text": "World",
                      "canonicalReference": "server!World:class"
                    },
                    {
                      "kind": "Content",
                      "text": ", coordinate: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "world",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "coordinate",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "spawn"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Entity#startModelLoopedAnimations:member(1)",
                  "docComment": "/**\n * Starts looped animations for the entity, blending with other animations currently playing.\n *\n * @param animations - The animations to start.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "startModelLoopedAnimations(animations: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "animations",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "startModelLoopedAnimations"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Entity#startModelOneshotAnimations:member(1)",
                  "docComment": "/**\n * Starts a oneshot animation for the entity, blending with other animations currently playing.\n *\n * @param animations - The animations to start.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "startModelOneshotAnimations(animations: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "animations",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "startModelOneshotAnimations"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Entity#stopModelAnimations:member(1)",
                  "docComment": "/**\n * Stops the provided model animations for the entity.\n *\n * @param animations - The animations to stop.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "stopModelAnimations(animations: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "animations",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "stopModelAnimations"
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Entity#world:member",
                  "docComment": "/**\n * The world the entity is in.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get world(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "World",
                      "canonicalReference": "server!World:class"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "world",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                }
              ],
              "extendsTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "implementsTokenRanges": [
                {
                  "startIndex": 3,
                  "endIndex": 4
                }
              ]
            },
            {
              "kind": "Namespace",
              "canonicalReference": "server!HYTOPIA.EntityEventPayload:namespace",
              "docComment": "/**\n * Payloads for events an Entity instance can emit.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare namespace EntityEventPayload "
                }
              ],
              "fileUrlPath": "src/world/entities/Entity.ts",
              "releaseTag": "Public",
              "name": "EntityEventPayload",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "server!HYTOPIA.EntityEventPayload.Despawn:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Despawn "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Despawn",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.EntityEventPayload.Despawn#entity:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "entity: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Entity",
                          "canonicalReference": "server!Entity:class"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "entity",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "server!HYTOPIA.EntityEventPayload.Spawn:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface Spawn "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "Spawn",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.EntityEventPayload.Spawn#entity:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "entity: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Entity",
                          "canonicalReference": "server!Entity:class"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "entity",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "server!HYTOPIA.EntityEventPayload.StartModelLoopedAnimations:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface StartModelLoopedAnimations "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "StartModelLoopedAnimations",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.EntityEventPayload.StartModelLoopedAnimations#animations:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "animations: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Set",
                          "canonicalReference": "!Set:interface"
                        },
                        {
                          "kind": "Content",
                          "text": "<string>"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "animations",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.EntityEventPayload.StartModelLoopedAnimations#entity:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "entity: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Entity",
                          "canonicalReference": "server!Entity:class"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "entity",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "server!HYTOPIA.EntityEventPayload.StartModelOneshotAnimations:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface StartModelOneshotAnimations "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "StartModelOneshotAnimations",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.EntityEventPayload.StartModelOneshotAnimations#animations:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "animations: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Set",
                          "canonicalReference": "!Set:interface"
                        },
                        {
                          "kind": "Content",
                          "text": "<string>"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "animations",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.EntityEventPayload.StartModelOneshotAnimations#entity:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "entity: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Entity",
                          "canonicalReference": "server!Entity:class"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "entity",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "server!HYTOPIA.EntityEventPayload.StopModelAnimations:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface StopModelAnimations "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "StopModelAnimations",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.EntityEventPayload.StopModelAnimations#animations:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "animations: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Set",
                          "canonicalReference": "!Set:interface"
                        },
                        {
                          "kind": "Content",
                          "text": "<string>"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "animations",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.EntityEventPayload.StopModelAnimations#entity:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "entity: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Entity",
                          "canonicalReference": "server!Entity:class"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "entity",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "server!HYTOPIA.EntityEventPayload.UpdateRotation:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface UpdateRotation "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "UpdateRotation",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.EntityEventPayload.UpdateRotation#entity:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "entity: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Entity",
                          "canonicalReference": "server!Entity:class"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "entity",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.EntityEventPayload.UpdateRotation#rotation:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "rotation: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Rotation",
                          "canonicalReference": "server!Rotation:interface"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "rotation",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "server!HYTOPIA.EntityEventPayload.UpdateTranslation:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface UpdateTranslation "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "UpdateTranslation",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.EntityEventPayload.UpdateTranslation#entity:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "entity: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Entity",
                          "canonicalReference": "server!Entity:class"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "entity",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.EntityEventPayload.UpdateTranslation#translation:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "translation: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Vector3",
                          "canonicalReference": "server!Vector3:interface"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "translation",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "server!HYTOPIA.EntityEventType:enum",
              "docComment": "/**\n * Event types an Entity instance can emit.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare enum EntityEventType "
                }
              ],
              "fileUrlPath": "src/world/entities/Entity.ts",
              "releaseTag": "Public",
              "name": "EntityEventType",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.EntityEventType.DESPAWN:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "DESPAWN = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"ENTITY.DESPAWN\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "DESPAWN"
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.EntityEventType.SPAWN:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "SPAWN = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"ENTITY.SPAWN\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "SPAWN"
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.EntityEventType.START_MODEL_LOOPED_ANIMATIONS:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "START_MODEL_LOOPED_ANIMATIONS = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"ENTITY.UPDATE_MODEL_LOOPED_ANIMATIONS\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "START_MODEL_LOOPED_ANIMATIONS"
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.EntityEventType.START_MODEL_ONESHOT_ANIMATIONS:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "START_MODEL_ONESHOT_ANIMATIONS = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"ENTITY.START_MODEL_ONESHOT_ANIMATIONS\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "START_MODEL_ONESHOT_ANIMATIONS"
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.EntityEventType.STOP_MODEL_ANIMATIONS:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "STOP_MODEL_ANIMATIONS = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"ENTITY.STOP_MODEL_ANIMATIONS\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "STOP_MODEL_ANIMATIONS"
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.EntityEventType.UPDATE_ROTATION:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "UPDATE_ROTATION = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"ENTITY.UPDATE_ROTATION\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "UPDATE_ROTATION"
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.EntityEventType.UPDATE_TRANSLATION:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "UPDATE_TRANSLATION = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"ENTITY.UPDATE_TRANSLATION\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "UPDATE_TRANSLATION"
                }
              ]
            },
            {
              "kind": "Class",
              "canonicalReference": "server!HYTOPIA.EntityManager:class",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export default class EntityManager "
                }
              ],
              "fileUrlPath": "src/world/entities/EntityManager.ts",
              "releaseTag": "Public",
              "isAbstract": false,
              "name": "EntityManager",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Constructor",
                  "canonicalReference": "server!HYTOPIA.EntityManager:constructor(1)",
                  "docComment": "/**\n * Constructs a new instance of the `EntityManager` class\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "constructor(world: "
                    },
                    {
                      "kind": "Reference",
                      "text": "World",
                      "canonicalReference": "server!World:class"
                    },
                    {
                      "kind": "Content",
                      "text": ");"
                    }
                  ],
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "world",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ]
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.EntityManager#checkAndEmitUpdates:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "checkAndEmitUpdates(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "checkAndEmitUpdates"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.EntityManager#getAllEntities:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAllEntities(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entity",
                      "canonicalReference": "server!Entity:class"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getAllEntities"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.EntityManager#getAllPlayerEntities:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAllPlayerEntities(player: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Player",
                      "canonicalReference": "server!Player:class"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "PlayerEntity",
                      "canonicalReference": "server!PlayerEntity:class"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "player",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getAllPlayerEntities"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.EntityManager#getEntity:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getEntity<T extends "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entity",
                      "canonicalReference": "server!Entity:class"
                    },
                    {
                      "kind": "Content",
                      "text": ">(id: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "T | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "typeParameters": [
                    {
                      "typeParameterName": "T",
                      "constraintTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "defaultTypeTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      }
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "id",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getEntity"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.EntityManager#registerEntity:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "registerEntity(entity: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entity",
                      "canonicalReference": "server!Entity:class"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "entity",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "registerEntity"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.EntityManager#tickEntities:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tickEntities(tickDeltaMs: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "tickDeltaMs",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "tickEntities"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.EntityManager#unregisterEntity:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "unregisterEntity(entity: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entity",
                      "canonicalReference": "server!Entity:class"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "entity",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "unregisterEntity"
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.EntityManager#world:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get world(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "World",
                      "canonicalReference": "server!World:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "world",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                }
              ],
              "implementsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "server!HYTOPIA.EntityOptions:interface",
              "docComment": "/**\n * Options for creating an Entity instance.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface EntityOptions "
                }
              ],
              "fileUrlPath": "src/world/entities/Entity.ts",
              "releaseTag": "Public",
              "name": "EntityOptions",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.EntityOptions#modelLoopedAnimations:member",
                  "docComment": "/**\n * The looped animations to start when the entity is spawned.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "modelLoopedAnimations?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "modelLoopedAnimations",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.EntityOptions#modelScale:member",
                  "docComment": "/**\n * The scale of the entity's model.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "modelScale?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "modelScale",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.EntityOptions#modelUri:member",
                  "docComment": "/**\n * The URI or path to the .gltf model asset to be used for the entity.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "modelUri?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "modelUri",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.EntityOptions#name:member",
                  "docComment": "/**\n * The name of the entity.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.EntityOptions#rigidBodyOptions:member",
                  "docComment": "/**\n * The rigid body options for the entity.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rigidBodyOptions?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RigidBodyOptions",
                      "canonicalReference": "server!RigidBodyOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "rigidBodyOptions",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "server!HYTOPIA.Event:interface",
              "docComment": "/**\n * An EventRouter event.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface Event<TPayload> "
                }
              ],
              "fileUrlPath": "src/events/EventRouter.ts",
              "releaseTag": "Public",
              "typeParameters": [
                {
                  "typeParameterName": "TPayload",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "Event",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.Event#payload:member",
                  "docComment": "/**\n * The payload of the event, passed to listeners\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "payload: "
                    },
                    {
                      "kind": "Content",
                      "text": "TPayload"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "payload",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.Event#type:member",
                  "docComment": "/**\n * The type of event\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Class",
              "canonicalReference": "server!HYTOPIA.EventRouter:class",
              "docComment": "/**\n * Manages event emission and assigned listener callbacks.\n *\n * @remarks\n *\n * This class is used as a singleton for global server events via {@link EventRouter.serverInstance}. For individual worlds, an internal EventRouter instance is instantiated per world. EventRouters only have visibility of events emitted and subscribed to relative to their unique instances.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export default class EventRouter "
                }
              ],
              "fileUrlPath": "src/events/EventRouter.ts",
              "releaseTag": "Public",
              "isAbstract": false,
              "name": "EventRouter",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Constructor",
                  "canonicalReference": "server!HYTOPIA.EventRouter:constructor(1)",
                  "docComment": "/**\n * Constructs a new instance of the `EventRouter` class\n *\n * @param tag - Tag for logging, used to identify EventRouter instances in logs.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "constructor(tag: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ");"
                    }
                  ],
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "tag",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ]
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.EventRouter#emit:member(1)",
                  "docComment": "/**\n * Emit an event, invoking all registered listeners for the event type.\n *\n * @param event - The event to emit.\n *\n * @returns `true` if listeners were found and invoked, `false` otherwise.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "emit<TPayload>(event: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Event",
                      "canonicalReference": "server!Event_2:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<TPayload>"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "typeParameters": [
                    {
                      "typeParameterName": "TPayload",
                      "constraintTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      },
                      "defaultTypeTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      }
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "event",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "emit"
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.EventRouter#logAllEvents:member",
                  "docComment": "/**\n * Enable logging of all events. Default: false\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "logAllEvents: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "logAllEvents",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.EventRouter#logEventsPayloads:member",
                  "docComment": "/**\n * Enable logging of event payloads. Default: false\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "logEventsPayloads: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "logEventsPayloads",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.EventRouter#logIgnoreEventPrefixes:member",
                  "docComment": "/**\n * Array of event prefixes to exclude from logging\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "logIgnoreEventPrefixes: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "logIgnoreEventPrefixes",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.EventRouter#logIgnoreEvents:member",
                  "docComment": "/**\n * Array of events to exclude from logging\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "logIgnoreEvents: "
                    },
                    {
                      "kind": "Content",
                      "text": "string[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "logIgnoreEvents",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.EventRouter#logUnlistenedEvents:member",
                  "docComment": "/**\n * Enable logging of events with no listeners. Default: false\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "logUnlistenedEvents: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "logUnlistenedEvents",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.EventRouter#off:member(1)",
                  "docComment": "/**\n * Remove a listener for a specific event type.\n *\n * @param eventType - The type of event to remove the listener from.\n *\n * @param listener - The listener function to remove.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "off<TPayload>(eventType: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", listener: "
                    },
                    {
                      "kind": "Content",
                      "text": "(payload: TPayload) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "typeParameters": [
                    {
                      "typeParameterName": "TPayload",
                      "constraintTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      },
                      "defaultTypeTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      }
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "eventType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "listener",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "off"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.EventRouter#offAll:member(1)",
                  "docComment": "/**\n * Remove all listeners for a specific event type.\n *\n * @param eventType - The type of event to remove all listeners from.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "offAll(eventType: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "eventType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "offAll"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.EventRouter#on:member(1)",
                  "docComment": "/**\n * Register a listener for a specific event type.\n *\n * @remarks\n *\n * When the same event router instance used to register a listener emits an event a listener was registered for, the listener will be invoked with the event payload. Listeners are called in the order they are registered.\n *\n * @param eventType - The type of event to listen for.\n *\n * @param listener - The listener function to invoke when the event is emitted.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "on<TPayload>(eventType: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ", listener: "
                    },
                    {
                      "kind": "Content",
                      "text": "(payload: TPayload) => void"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "typeParameters": [
                    {
                      "typeParameterName": "TPayload",
                      "constraintTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      },
                      "defaultTypeTokenRange": {
                        "startIndex": 0,
                        "endIndex": 0
                      }
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "eventType",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "listener",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "on"
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.EventRouter.serverInstance:member",
                  "docComment": "/**\n * The singleton instance for global server events.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "static readonly serverInstance: "
                    },
                    {
                      "kind": "Reference",
                      "text": "EventRouter",
                      "canonicalReference": "server!EventRouter:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "serverInstance",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": true,
                  "isProtected": false,
                  "isAbstract": false
                }
              ],
              "implementsTokenRanges": []
            },
            {
              "kind": "Class",
              "canonicalReference": "server!HYTOPIA.Player:class",
              "docComment": "/**\n * A player in the game.\n *\n * @remarks\n *\n * Players are automatically created when they connect and authenticate with the game server. This is all handled internally.\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `Player` class.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export default class Player "
                }
              ],
              "fileUrlPath": "src/networking/players/Player.ts",
              "releaseTag": "Public",
              "isAbstract": false,
              "name": "Player",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Player#disconnect:member(1)",
                  "docComment": "/**\n * Disconnects the player from the game server.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "disconnect(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "disconnect"
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Player#id:member",
                  "docComment": "/**\n * The unique identifier for the player.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly id: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "id",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Player#inputState:member",
                  "docComment": "/**\n * The current {@link PlayerInputState} of the player.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get inputState(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Readonly",
                      "canonicalReference": "!Readonly:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "PlayerInputState",
                      "canonicalReference": "server!PlayerInputState:type"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "inputState",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Player#joinWorld:member(1)",
                  "docComment": "/**\n * Joins a player to a world.\n *\n * @remarks\n *\n * If the player is already in a {@link World}, they will be removed from their current world before joining the new world.\n *\n * @param world - The world to join the player to.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "joinWorld(world: "
                    },
                    {
                      "kind": "Reference",
                      "text": "World",
                      "canonicalReference": "server!World:class"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "world",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "joinWorld"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Player#leaveWorld:member(1)",
                  "docComment": "/**\n * Removes the player from the current {@link World} they are in.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "leaveWorld(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "leaveWorld"
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Player#orientationState:member",
                  "docComment": "/**\n * The current {@link PlayerOrientationState} of the player.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get orientationState(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Readonly",
                      "canonicalReference": "!Readonly:type"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "PlayerOrientationState",
                      "canonicalReference": "server!PlayerOrientationState:type"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "orientationState",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Player#username:member",
                  "docComment": "/**\n * The username for the player.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "readonly username: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "username",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Player#world:member",
                  "docComment": "/**\n * The current {@link World} the player is in.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get world(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "World",
                      "canonicalReference": "server!World:class"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "world",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                }
              ],
              "implementsTokenRanges": []
            },
            {
              "kind": "Class",
              "canonicalReference": "server!HYTOPIA.PlayerEntity:class",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export default class PlayerEntity extends "
                },
                {
                  "kind": "Reference",
                  "text": "Entity",
                  "canonicalReference": "server!Entity:class"
                },
                {
                  "kind": "Content",
                  "text": " "
                }
              ],
              "fileUrlPath": "src/world/entities/PlayerEntity.ts",
              "releaseTag": "Public",
              "isAbstract": false,
              "name": "PlayerEntity",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Constructor",
                  "canonicalReference": "server!HYTOPIA.PlayerEntity:constructor(1)",
                  "docComment": "/**\n * Constructs a new instance of the `PlayerEntity` class\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "constructor(options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PlayerEntityOptions",
                      "canonicalReference": "server!PlayerEntityOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ");"
                    }
                  ],
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ]
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.PlayerEntity#player:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "player: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Player",
                      "canonicalReference": "server!Player:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "player",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.PlayerEntity#tick:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tick(tickDeltaMs: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "tickDeltaMs",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "tick"
                }
              ],
              "extendsTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "implementsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "server!HYTOPIA.PlayerEntityOptions:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface PlayerEntityOptions extends "
                },
                {
                  "kind": "Reference",
                  "text": "EntityOptions",
                  "canonicalReference": "server!EntityOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                }
              ],
              "fileUrlPath": "src/world/entities/PlayerEntity.ts",
              "releaseTag": "Public",
              "name": "PlayerEntityOptions",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.PlayerEntityOptions#player:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "player: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Player",
                      "canonicalReference": "server!Player:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "player",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": [
                {
                  "startIndex": 1,
                  "endIndex": 2
                }
              ]
            },
            {
              "kind": "Namespace",
              "canonicalReference": "server!HYTOPIA.PlayerEventPayload:namespace",
              "docComment": "/**\n * Payloads for events a Player can emit.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare namespace PlayerEventPayload "
                }
              ],
              "fileUrlPath": "src/networking/players/Player.ts",
              "releaseTag": "Public",
              "name": "PlayerEventPayload",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Interface",
                  "canonicalReference": "server!HYTOPIA.PlayerEventPayload.ChatMessageSend:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface ChatMessageSend "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "ChatMessageSend",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.PlayerEventPayload.ChatMessageSend#message:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "message: "
                        },
                        {
                          "kind": "Reference",
                          "text": "protocol.ChatMessageSchema",
                          "canonicalReference": "@hytopia.com/server-protocol!ChatMessageSchema:type"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "message",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.PlayerEventPayload.ChatMessageSend#player:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "player: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Player",
                          "canonicalReference": "server!Player:class"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "player",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "server!HYTOPIA.PlayerEventPayload.JoinedWorld:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface JoinedWorld "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "JoinedWorld",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.PlayerEventPayload.JoinedWorld#player:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "player: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Player",
                          "canonicalReference": "server!Player:class"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "player",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.PlayerEventPayload.JoinedWorld#world:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "world: "
                        },
                        {
                          "kind": "Reference",
                          "text": "World",
                          "canonicalReference": "server!World:class"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "world",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "server!HYTOPIA.PlayerEventPayload.LeftWorld:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface LeftWorld "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "LeftWorld",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.PlayerEventPayload.LeftWorld#player:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "player: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Player",
                          "canonicalReference": "server!Player:class"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "player",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.PlayerEventPayload.LeftWorld#world:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "world: "
                        },
                        {
                          "kind": "Reference",
                          "text": "World",
                          "canonicalReference": "server!World:class"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "world",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                },
                {
                  "kind": "Interface",
                  "canonicalReference": "server!HYTOPIA.PlayerEventPayload.RequestSync:interface",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "interface RequestSync "
                    }
                  ],
                  "releaseTag": "Public",
                  "name": "RequestSync",
                  "preserveMemberOrder": false,
                  "members": [
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.PlayerEventPayload.RequestSync#player:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "player: "
                        },
                        {
                          "kind": "Reference",
                          "text": "Player",
                          "canonicalReference": "server!Player:class"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "player",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.PlayerEventPayload.RequestSync#receivedAt:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "receivedAt: "
                        },
                        {
                          "kind": "Content",
                          "text": "number"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "receivedAt",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    },
                    {
                      "kind": "PropertySignature",
                      "canonicalReference": "server!HYTOPIA.PlayerEventPayload.RequestSync#receivedAtMs:member",
                      "docComment": "",
                      "excerptTokens": [
                        {
                          "kind": "Content",
                          "text": "receivedAtMs: "
                        },
                        {
                          "kind": "Content",
                          "text": "number"
                        },
                        {
                          "kind": "Content",
                          "text": ";"
                        }
                      ],
                      "isReadonly": false,
                      "isOptional": false,
                      "releaseTag": "Public",
                      "name": "receivedAtMs",
                      "propertyTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      }
                    }
                  ],
                  "extendsTokenRanges": []
                }
              ]
            },
            {
              "kind": "Enum",
              "canonicalReference": "server!HYTOPIA.PlayerEventType:enum",
              "docComment": "/**\n * Event types a Player can emit.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare enum PlayerEventType "
                }
              ],
              "fileUrlPath": "src/networking/players/Player.ts",
              "releaseTag": "Public",
              "name": "PlayerEventType",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.PlayerEventType.CHAT_MESSAGE_SEND:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "CHAT_MESSAGE_SEND = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"PLAYER.CHAT_MESSAGE_SEND\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "CHAT_MESSAGE_SEND"
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.PlayerEventType.JOINED_WORLD:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "JOINED_WORLD = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"PLAYER.JOINED_WORLD\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "JOINED_WORLD"
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.PlayerEventType.LEFT_WORLD:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "LEFT_WORLD = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"PLAYER.LEFT_WORLD\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "LEFT_WORLD"
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.PlayerEventType.REQUEST_SYNC:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "REQUEST_SYNC = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"PLAYER.REQUEST_SYNC\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "REQUEST_SYNC"
                }
              ]
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "server!HYTOPIA.PlayerInputState:type",
              "docComment": "/**\n * The input state of a Player; keys from SUPPORTED_INPUT_KEYS.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export type PlayerInputState = "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<keyof "
                },
                {
                  "kind": "Reference",
                  "text": "InputSchema",
                  "canonicalReference": "@hytopia.com/server-protocol!InputSchema:type"
                },
                {
                  "kind": "Content",
                  "text": ", boolean>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/networking/players/Player.ts",
              "releaseTag": "Public",
              "name": "PlayerInputState",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "Class",
              "canonicalReference": "server!HYTOPIA.PlayerManager:class",
              "docComment": "/**\n * Manages all connected players in a game server.\n *\n * @remarks\n *\n * The PlayerManager is created internally as a global singleton accessible with the static property `PlayerManager.instance`.\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `PlayerManager` class.\n *\n * @example\n * ```typescript\n * import { PlayerManager } from 'hytopia';\n *\n * const playerManager = PlayerManager.instance;\n * const connectedPlayers = playerManager.getConnectedPlayers();\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export default class PlayerManager "
                }
              ],
              "fileUrlPath": "src/networking/players/PlayerManager.ts",
              "releaseTag": "Public",
              "isAbstract": false,
              "name": "PlayerManager",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.PlayerManager#getConnectedPlayerByUsername:member(1)",
                  "docComment": "/**\n * Get a connected player by their username (case insensitive).\n *\n * @param username - The username of the player to get.\n *\n * @returns The connected player with the given username or undefined if not found.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getConnectedPlayerByUsername(username: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Player",
                      "canonicalReference": "server!Player:class"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "username",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getConnectedPlayerByUsername"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.PlayerManager#getConnectedPlayers:member(1)",
                  "docComment": "/**\n * Get all connected players.\n *\n * @returns An array of all connected players.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getConnectedPlayers(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Player",
                      "canonicalReference": "server!Player:class"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getConnectedPlayers"
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.PlayerManager.instance:member",
                  "docComment": "/**\n * The global PlayerManager instance as a singleton.\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "static readonly instance: "
                    },
                    {
                      "kind": "Reference",
                      "text": "PlayerManager",
                      "canonicalReference": "server!PlayerManager:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "instance",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": true,
                  "isProtected": false,
                  "isAbstract": false
                }
              ],
              "implementsTokenRanges": []
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "server!HYTOPIA.PlayerOrientationState:type",
              "docComment": "/**\n * The camera orientation state of a Player.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export type PlayerOrientationState = "
                },
                {
                  "kind": "Content",
                  "text": "{\n    pitch: number;\n    yaw: number;\n}"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/networking/players/Player.ts",
              "releaseTag": "Public",
              "name": "PlayerOrientationState",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "server!HYTOPIA.RawCollisionGroups:type",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export type RawCollisionGroups = "
                },
                {
                  "kind": "Reference",
                  "text": "RAPIER.InteractionGroups",
                  "canonicalReference": "@dimforge/rapier3d-compat!InteractionGroups:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/world/physics/CollisionGroupsBuilder.ts",
              "releaseTag": "Public",
              "name": "RawCollisionGroups",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Class",
              "canonicalReference": "server!HYTOPIA.RigidBody:class",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export default class RigidBody "
                }
              ],
              "fileUrlPath": "src/world/physics/RigidBody.ts",
              "releaseTag": "Public",
              "isAbstract": false,
              "name": "RigidBody",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Constructor",
                  "canonicalReference": "server!HYTOPIA.RigidBody:constructor(1)",
                  "docComment": "/**\n * Constructs a new instance of the `RigidBody` class\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "constructor(options: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RigidBodyOptions",
                      "canonicalReference": "server!RigidBodyOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ");"
                    }
                  ],
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ]
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#addChildColliderToSimulation:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addChildColliderToSimulation(collider: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Collider",
                      "canonicalReference": "server!Collider:class"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "collider",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "addChildColliderToSimulation"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#addForce:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addForce(force: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector",
                      "canonicalReference": "@dimforge/rapier3d-compat!Vector:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "force",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "addForce"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#addTorque:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addTorque(torque: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector",
                      "canonicalReference": "@dimforge/rapier3d-compat!Vector:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "torque",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "addTorque"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#addToSimulation:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "addToSimulation(simulation: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Simulation",
                      "canonicalReference": "server!Simulation:class"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "simulation",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "addToSimulation"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#applyImpulse:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "applyImpulse(impulse: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector",
                      "canonicalReference": "@dimforge/rapier3d-compat!Vector:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "impulse",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "applyImpulse"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#applyImpulseAtPoint:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "applyImpulseAtPoint(impulse: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector",
                      "canonicalReference": "@dimforge/rapier3d-compat!Vector:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ", point: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector",
                      "canonicalReference": "@dimforge/rapier3d-compat!Vector:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "impulse",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "point",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "applyImpulseAtPoint"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#applyTorqueImpulse:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "applyTorqueImpulse(impulse: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector",
                      "canonicalReference": "@dimforge/rapier3d-compat!Vector:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "impulse",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "applyTorqueImpulse"
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.RigidBody#colliders:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get colliders(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Set",
                      "canonicalReference": "!Set:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "<"
                    },
                    {
                      "kind": "Reference",
                      "text": "Collider",
                      "canonicalReference": "server!Collider:class"
                    },
                    {
                      "kind": "Content",
                      "text": ">"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "colliders",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#createAndAddChildCollidersToSimulation:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "createAndAddChildCollidersToSimulation(colliderOptions: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ColliderOptions",
                      "canonicalReference": "server!ColliderOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Collider",
                      "canonicalReference": "server!Collider:class"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "colliderOptions",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "createAndAddChildCollidersToSimulation"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#createAndAddChildColliderToSimulation:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "createAndAddChildColliderToSimulation(colliderOptions: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ColliderOptions",
                      "canonicalReference": "server!ColliderOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Collider",
                      "canonicalReference": "server!Collider:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "colliderOptions",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "createAndAddChildColliderToSimulation"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#createAndAddPendingChildCollider:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "createAndAddPendingChildCollider(colliderOptions: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ColliderOptions",
                      "canonicalReference": "server!ColliderOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Collider",
                      "canonicalReference": "server!Collider:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "colliderOptions",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "createAndAddPendingChildCollider"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#createAndAddPendingChildColliders:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "createAndAddPendingChildColliders(colliderOptions: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ColliderOptions",
                      "canonicalReference": "server!ColliderOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Collider",
                      "canonicalReference": "server!Collider:class"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "colliderOptions",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 3
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "createAndAddPendingChildColliders"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#getAdditionalMass:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAdditionalMass(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getAdditionalMass"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#getAdditionalSolverIterations:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAdditionalSolverIterations(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getAdditionalSolverIterations"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#getAngularDamping:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAngularDamping(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getAngularDamping"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#getAngularVelocity:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getAngularVelocity(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getAngularVelocity"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#getCollidersByTag:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getCollidersByTag(tag: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Collider",
                      "canonicalReference": "server!Collider:class"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "tag",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getCollidersByTag"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#getDirectionFromRotation:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getDirectionFromRotation(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getDirectionFromRotation"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#getDominanceGroup:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getDominanceGroup(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getDominanceGroup"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#getEffectiveAngularInertia:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getEffectiveAngularInertia(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "SpdMatrix3",
                      "canonicalReference": "server!SpdMatrix3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getEffectiveAngularInertia"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#getEffectiveInverseMass:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getEffectiveInverseMass(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getEffectiveInverseMass"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#getEffectiveWorldInversePrincipalAngularInertiaSqrt:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getEffectiveWorldInversePrincipalAngularInertiaSqrt(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "SpdMatrix3",
                      "canonicalReference": "server!SpdMatrix3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getEffectiveWorldInversePrincipalAngularInertiaSqrt"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#getEnabledRotations:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getEnabledRotations(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3Boolean",
                      "canonicalReference": "server!Vector3Boolean:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getEnabledRotations"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#getEnabledTranslations:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getEnabledTranslations(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3Boolean",
                      "canonicalReference": "server!Vector3Boolean:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getEnabledTranslations"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#getGravityScale:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getGravityScale(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getGravityScale"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#getInverseMass:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getInverseMass(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getInverseMass"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#getInversePrincipalAngularInertiaSqrt:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getInversePrincipalAngularInertiaSqrt(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getInversePrincipalAngularInertiaSqrt"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#getLinearDamping:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLinearDamping(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getLinearDamping"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#getLinearVelocity:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLinearVelocity(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getLinearVelocity"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#getLocalCenterOfMass:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getLocalCenterOfMass(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getLocalCenterOfMass"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#getMass:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getMass(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getMass"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#getNextKinematicRotation:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getNextKinematicRotation(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Rotation",
                      "canonicalReference": "server!Rotation:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getNextKinematicRotation"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#getNextKinematicTranslation:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getNextKinematicTranslation(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getNextKinematicTranslation"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#getPrincipalAngularInertia:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPrincipalAngularInertia(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getPrincipalAngularInertia"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#getPrincipalAngularInertiaLocalFrame:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getPrincipalAngularInertiaLocalFrame(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Rotation",
                      "canonicalReference": "server!Rotation:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getPrincipalAngularInertiaLocalFrame"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#getRotation:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getRotation(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Rotation",
                      "canonicalReference": "server!Rotation:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getRotation"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#getSoftCcdPrediction:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getSoftCcdPrediction(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getSoftCcdPrediction"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#getTranslation:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getTranslation(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getTranslation"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#getType:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getType(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RigidBodyType",
                      "canonicalReference": "server!RigidBodyType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getType"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#getWorldCenterOfMass:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "getWorldCenterOfMass(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "getWorldCenterOfMass"
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.RigidBody#isCcdEnabled:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get isCcdEnabled(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "isCcdEnabled",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.RigidBody#isDynamic:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get isDynamic(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "isDynamic",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.RigidBody#isEnabled:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get isEnabled(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "isEnabled",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.RigidBody#isFixed:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get isFixed(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "isFixed",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.RigidBody#isKinematic:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get isKinematic(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "isKinematic",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.RigidBody#isKinematicPositionBased:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get isKinematicPositionBased(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "isKinematicPositionBased",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.RigidBody#isKinematicVelocityBased:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get isKinematicVelocityBased(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "isKinematicVelocityBased",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.RigidBody#isMoving:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get isMoving(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "isMoving",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.RigidBody#isRemoved:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get isRemoved(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "isRemoved",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.RigidBody#isSimulated:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get isSimulated(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "isSimulated",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.RigidBody#isSleeping:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get isSleeping(): "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "isSleeping",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#linkCollider:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "linkCollider(collider: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Collider",
                      "canonicalReference": "server!Collider:class"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "collider",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "linkCollider"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#lockAllRotations:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lockAllRotations(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "lockAllRotations"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#lockAllTranslations:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "lockAllTranslations(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "lockAllTranslations"
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.RigidBody#numColliders:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get numColliders(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "numColliders",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.RigidBody#rawRigidBody:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get rawRigidBody(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RAPIER.RigidBody",
                      "canonicalReference": "@dimforge/rapier3d-compat!RigidBody:class"
                    },
                    {
                      "kind": "Content",
                      "text": " | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "rawRigidBody",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#removeFromSimulation:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeFromSimulation(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "removeFromSimulation"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#setAdditionalMass:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAdditionalMass(additionalMass: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "additionalMass",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setAdditionalMass"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#setAdditionalMassProperties:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAdditionalMassProperties(additionalMassProperties: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RigidBodyAdditionalMassProperties",
                      "canonicalReference": "server!RigidBodyAdditionalMassProperties:type"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "additionalMassProperties",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setAdditionalMassProperties"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#setAdditionalSolverIterations:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAdditionalSolverIterations(solverIterations: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "solverIterations",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setAdditionalSolverIterations"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#setAngularDamping:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAngularDamping(angularDamping: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "angularDamping",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setAngularDamping"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#setAngularVelocity:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setAngularVelocity(angularVelocity: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector",
                      "canonicalReference": "@dimforge/rapier3d-compat!Vector:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "angularVelocity",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setAngularVelocity"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#setCcdEnabled:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setCcdEnabled(ccdEnabled: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "ccdEnabled",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setCcdEnabled"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#setCollisionGroupsForSolidColliders:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setCollisionGroupsForSolidColliders(collisionGroups: "
                    },
                    {
                      "kind": "Reference",
                      "text": "CollisionGroups",
                      "canonicalReference": "server!CollisionGroups:type"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "collisionGroups",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setCollisionGroupsForSolidColliders"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#setDominanceGroup:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setDominanceGroup(dominanceGroup: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "dominanceGroup",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setDominanceGroup"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#setEnabled:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setEnabled(enabled: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "enabled",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setEnabled"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#setEnabledRotations:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setEnabledRotations(enabledRotations: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3Boolean",
                      "canonicalReference": "server!Vector3Boolean:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "enabledRotations",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setEnabledRotations"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#setEnabledTranslations:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setEnabledTranslations(enabledTranslations: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3Boolean",
                      "canonicalReference": "server!Vector3Boolean:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "enabledTranslations",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setEnabledTranslations"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#setGravityScale:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setGravityScale(gravityScale: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "gravityScale",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setGravityScale"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#setLinearDamping:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setLinearDamping(linearDamping: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "linearDamping",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setLinearDamping"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#setLinearVelocity:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setLinearVelocity(linearVelocity: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector",
                      "canonicalReference": "@dimforge/rapier3d-compat!Vector:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "linearVelocity",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setLinearVelocity"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#setNextKinematicRotation:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setNextKinematicRotation(nextKinematicRotation: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Rotation",
                      "canonicalReference": "server!Rotation:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "nextKinematicRotation",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setNextKinematicRotation"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#setNextKinematicTranslation:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setNextKinematicTranslation(nextKinematicTranslation: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector",
                      "canonicalReference": "@dimforge/rapier3d-compat!Vector:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "nextKinematicTranslation",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setNextKinematicTranslation"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#setRotation:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setRotation(rotation: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Rotation",
                      "canonicalReference": "server!Rotation:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "rotation",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setRotation"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#setSleeping:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setSleeping(sleeping: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "sleeping",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setSleeping"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#setSoftCcdPrediction:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setSoftCcdPrediction(softCcdPrediction: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "softCcdPrediction",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setSoftCcdPrediction"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#setTag:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setTag(tag: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "tag",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setTag"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#setTranslation:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setTranslation(translation: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector",
                      "canonicalReference": "@dimforge/rapier3d-compat!Vector:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "translation",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setTranslation"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#setType:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "setType(type: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RigidBodyType",
                      "canonicalReference": "server!RigidBodyType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "type",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "setType"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#sleep:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "sleep(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "sleep"
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.RigidBody#tag:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get tag(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string | undefined"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "tag",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#unlinkCollider:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "unlinkCollider(collider: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Collider",
                      "canonicalReference": "server!Collider:class"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "collider",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "unlinkCollider"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.RigidBody#wakeUp:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "wakeUp(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "wakeUp"
                }
              ],
              "implementsTokenRanges": []
            },
            {
              "kind": "TypeAlias",
              "canonicalReference": "server!HYTOPIA.RigidBodyAdditionalMassProperties:type",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export type RigidBodyAdditionalMassProperties = "
                },
                {
                  "kind": "Content",
                  "text": "{\n    additionalMass: number;\n    centerOfMass: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    principalAngularInertia: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    principalAngularInertiaLocalFrame: "
                },
                {
                  "kind": "Reference",
                  "text": "Rotation",
                  "canonicalReference": "server!Rotation:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n}"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/world/physics/RigidBody.ts",
              "releaseTag": "Public",
              "name": "RigidBodyAdditionalMassProperties",
              "typeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            },
            {
              "kind": "Interface",
              "canonicalReference": "server!HYTOPIA.RigidBodyOptions:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface RigidBodyOptions "
                }
              ],
              "fileUrlPath": "src/world/physics/RigidBody.ts",
              "releaseTag": "Public",
              "name": "RigidBodyOptions",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.RigidBodyOptions#additionalMass:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "additionalMass?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "additionalMass",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.RigidBodyOptions#additionalMassProperties:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "additionalMassProperties?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RigidBodyAdditionalMassProperties",
                      "canonicalReference": "server!RigidBodyAdditionalMassProperties:type"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "additionalMassProperties",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.RigidBodyOptions#additionalSolverIterations:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "additionalSolverIterations?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "additionalSolverIterations",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.RigidBodyOptions#angularDamping:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "angularDamping?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "angularDamping",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.RigidBodyOptions#angularVelocity:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "angularVelocity?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "angularVelocity",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.RigidBodyOptions#ccdEnabled:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "ccdEnabled?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "ccdEnabled",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.RigidBodyOptions#colliders:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "colliders?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "ColliderOptions",
                      "canonicalReference": "server!ColliderOptions:interface"
                    },
                    {
                      "kind": "Content",
                      "text": "[]"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "colliders",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.RigidBodyOptions#dominanceGroup:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "dominanceGroup?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "dominanceGroup",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.RigidBodyOptions#enabled:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "enabled?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "enabled",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.RigidBodyOptions#enabledRotations:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "enabledRotations?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3Boolean",
                      "canonicalReference": "server!Vector3Boolean:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "enabledRotations",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.RigidBodyOptions#enabledTranslations:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "enabledTranslations?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3Boolean",
                      "canonicalReference": "server!Vector3Boolean:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "enabledTranslations",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.RigidBodyOptions#gravityScale:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "gravityScale?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "gravityScale",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.RigidBodyOptions#linearDamping:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "linearDamping?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "linearDamping",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.RigidBodyOptions#linearVelocity:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "linearVelocity?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "linearVelocity",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.RigidBodyOptions#rotation:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "rotation?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Rotation",
                      "canonicalReference": "server!Rotation:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "rotation",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.RigidBodyOptions#simulation:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "simulation?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Simulation",
                      "canonicalReference": "server!Simulation:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "simulation",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.RigidBodyOptions#sleeping:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "sleeping?: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "sleeping",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.RigidBodyOptions#softCcdPrediction:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "softCcdPrediction?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "softCcdPrediction",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.RigidBodyOptions#tag:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tag?: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "tag",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.RigidBodyOptions#translation:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "translation?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "translation",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.RigidBodyOptions#type:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "type: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RigidBodyType",
                      "canonicalReference": "server!RigidBodyType:enum"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "type",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Enum",
              "canonicalReference": "server!HYTOPIA.RigidBodyType:enum",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare enum RigidBodyType "
                }
              ],
              "fileUrlPath": "src/world/physics/RigidBody.ts",
              "releaseTag": "Public",
              "name": "RigidBodyType",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.RigidBodyType.DYNAMIC:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "DYNAMIC = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"dynamic\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "DYNAMIC"
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.RigidBodyType.FIXED:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "FIXED = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"fixed\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "FIXED"
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.RigidBodyType.KINEMATIC_POSITION:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "KINEMATIC_POSITION = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"kinematic_position\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "KINEMATIC_POSITION"
                },
                {
                  "kind": "EnumMember",
                  "canonicalReference": "server!HYTOPIA.RigidBodyType.KINEMATIC_VELOCITY:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "KINEMATIC_VELOCITY = "
                    },
                    {
                      "kind": "Content",
                      "text": "\"kinematic_velocity\""
                    }
                  ],
                  "initializerTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "name": "KINEMATIC_VELOCITY"
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "server!HYTOPIA.Rotation:interface",
              "docComment": "/**\n * A rotation in quaternion form.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface Rotation "
                }
              ],
              "fileUrlPath": "src/shared/types/math/Rotation.ts",
              "releaseTag": "Public",
              "name": "Rotation",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.Rotation#w:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "w: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "w",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.Rotation#x:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "x: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "x",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.Rotation#y:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "y: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "y",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.Rotation#z:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "z: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "z",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Class",
              "canonicalReference": "server!HYTOPIA.Simulation:class",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export default class Simulation "
                }
              ],
              "fileUrlPath": "src/world/physics/Simulation.ts",
              "releaseTag": "Public",
              "isAbstract": false,
              "name": "Simulation",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Constructor",
                  "canonicalReference": "server!HYTOPIA.Simulation:constructor(1)",
                  "docComment": "/**\n * Constructs a new instance of the `Simulation` class\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "constructor(world: "
                    },
                    {
                      "kind": "Reference",
                      "text": "World",
                      "canonicalReference": "server!World:class"
                    },
                    {
                      "kind": "Content",
                      "text": ", tickRate?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ", gravity?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RAPIER.Vector3",
                      "canonicalReference": "@dimforge/rapier3d-compat!Vector3:class"
                    },
                    {
                      "kind": "Content",
                      "text": ");"
                    }
                  ],
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "world",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "tickRate",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      },
                      "isOptional": true
                    },
                    {
                      "parameterName": "gravity",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 6
                      },
                      "isOptional": true
                    }
                  ]
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Simulation#castRay:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "castRay(origin: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RAPIER.Vector3",
                      "canonicalReference": "@dimforge/rapier3d-compat!Vector3:class"
                    },
                    {
                      "kind": "Content",
                      "text": ", direction: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RAPIER.Vector3",
                      "canonicalReference": "@dimforge/rapier3d-compat!Vector3:class"
                    },
                    {
                      "kind": "Content",
                      "text": ", length: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ", options?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RayCastOptions",
                      "canonicalReference": "server!~RayCastOptions:type"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Block",
                      "canonicalReference": "server!Block:class"
                    },
                    {
                      "kind": "Content",
                      "text": " | "
                    },
                    {
                      "kind": "Reference",
                      "text": "Entity",
                      "canonicalReference": "server!Entity:class"
                    },
                    {
                      "kind": "Content",
                      "text": " | null"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 13
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "origin",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "direction",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "length",
                      "parameterTypeTokenRange": {
                        "startIndex": 5,
                        "endIndex": 6
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "options",
                      "parameterTypeTokenRange": {
                        "startIndex": 7,
                        "endIndex": 8
                      },
                      "isOptional": true
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "castRay"
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Simulation#colliderMap:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get colliderMap(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ColliderMap",
                      "canonicalReference": "server!ColliderMap:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "colliderMap",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Simulation#createRawCollider:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "createRawCollider(rawColliderDesc: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RAPIER.ColliderDesc",
                      "canonicalReference": "@dimforge/rapier3d-compat!ColliderDesc:class"
                    },
                    {
                      "kind": "Content",
                      "text": ", rawParent?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RAPIER.RigidBody",
                      "canonicalReference": "@dimforge/rapier3d-compat!RigidBody:class"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RAPIER.Collider",
                      "canonicalReference": "@dimforge/rapier3d-compat!Collider:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "rawColliderDesc",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "rawParent",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      },
                      "isOptional": true
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "createRawCollider"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Simulation#createRawRigidBody:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "createRawRigidBody(rawRigidBodyDesc: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RAPIER.RigidBodyDesc",
                      "canonicalReference": "@dimforge/rapier3d-compat!RigidBodyDesc:class"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RAPIER.RigidBody",
                      "canonicalReference": "@dimforge/rapier3d-compat!RigidBody:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "rawRigidBodyDesc",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "createRawRigidBody"
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Simulation#gravity:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get gravity(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "RAPIER.Vector3",
                      "canonicalReference": "@dimforge/rapier3d-compat!Vector3:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "gravity",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Simulation#removeRawCollider:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeRawCollider(rawCollider: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RAPIER.Collider",
                      "canonicalReference": "@dimforge/rapier3d-compat!Collider:class"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "rawCollider",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "removeRawCollider"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.Simulation#removeRawRigidBody:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "removeRawRigidBody(rawRigidBody: "
                    },
                    {
                      "kind": "Reference",
                      "text": "RAPIER.RigidBody",
                      "canonicalReference": "@dimforge/rapier3d-compat!RigidBody:class"
                    },
                    {
                      "kind": "Content",
                      "text": "): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "rawRigidBody",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "removeRawRigidBody"
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Simulation#step:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "step: "
                    },
                    {
                      "kind": "Content",
                      "text": "(tickDeltaMs: number) => void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "step",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Simulation#timestepS:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get timestepS(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "timestepS",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.Simulation#world:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get world(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "World",
                      "canonicalReference": "server!World:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "world",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                }
              ],
              "implementsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "server!HYTOPIA.SpdMatrix3:interface",
              "docComment": "/**\n * A 3x3 symmetric positive-definite matrix for spatial dynamics.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface SpdMatrix3 extends "
                },
                {
                  "kind": "Reference",
                  "text": "RapierSdpMatrix3",
                  "canonicalReference": "@dimforge/rapier3d-compat!SdpMatrix3:class"
                },
                {
                  "kind": "Content",
                  "text": " "
                }
              ],
              "fileUrlPath": "src/shared/types/math/SpdMatrix3.ts",
              "releaseTag": "Public",
              "name": "SpdMatrix3",
              "preserveMemberOrder": false,
              "members": [],
              "extendsTokenRanges": [
                {
                  "startIndex": 1,
                  "endIndex": 2
                }
              ]
            },
            {
              "kind": "Function",
              "canonicalReference": "server!HYTOPIA.startServer:function(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function startServer(init: "
                },
                {
                  "kind": "Content",
                  "text": "(world: "
                },
                {
                  "kind": "Reference",
                  "text": "World",
                  "canonicalReference": "server!World:class"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/GameServer.ts",
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "init",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "name": "startServer"
            },
            {
              "kind": "Variable",
              "canonicalReference": "server!HYTOPIA.SUPPORTED_INPUT_KEYS:var",
              "docComment": "/**\n * The input keys included in the PlayerInputState.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SUPPORTED_INPUT_KEYS: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                }
              ],
              "fileUrlPath": "src/networking/players/Player.ts",
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "SUPPORTED_INPUT_KEYS",
              "variableTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "Interface",
              "canonicalReference": "server!HYTOPIA.Vector3:interface",
              "docComment": "/**\n * A 3-dimensional vector.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface Vector3 "
                }
              ],
              "fileUrlPath": "src/shared/types/math/Vector3.ts",
              "releaseTag": "Public",
              "name": "Vector3",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.Vector3#x:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "x: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "x",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.Vector3#y:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "y: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "y",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.Vector3#z:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "z: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "z",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "server!HYTOPIA.Vector3Boolean:interface",
              "docComment": "/**\n * A 3-dimensional vector of boolean values.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface Vector3Boolean "
                }
              ],
              "fileUrlPath": "src/shared/types/math/Vector3Boolean.ts",
              "releaseTag": "Public",
              "name": "Vector3Boolean",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.Vector3Boolean#x:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "x: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "x",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.Vector3Boolean#y:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "y: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "y",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.Vector3Boolean#z:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "z: "
                    },
                    {
                      "kind": "Content",
                      "text": "boolean"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "z",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Class",
              "canonicalReference": "server!HYTOPIA.World:class",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export default class World implements "
                },
                {
                  "kind": "Reference",
                  "text": "protocol.Serializable",
                  "canonicalReference": "@hytopia.com/server-protocol!Serializable:interface"
                },
                {
                  "kind": "Content",
                  "text": " "
                }
              ],
              "fileUrlPath": "src/world/World.ts",
              "releaseTag": "Public",
              "isAbstract": false,
              "name": "World",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Constructor",
                  "canonicalReference": "server!HYTOPIA.World:constructor(1)",
                  "docComment": "/**\n * Constructs a new instance of the `World` class\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "constructor(worldData: "
                    },
                    {
                      "kind": "Reference",
                      "text": "WorldData",
                      "canonicalReference": "server!WorldData:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ");"
                    }
                  ],
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "worldData",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    }
                  ]
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.World#audioManager:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get audioManager(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "AudioManager",
                      "canonicalReference": "server!AudioManager:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "audioManager",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.World#blockTypeRegistry:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get blockTypeRegistry(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "BlockTypeRegistry",
                      "canonicalReference": "server!BlockTypeRegistry:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "blockTypeRegistry",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.World#chatManager:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get chatManager(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChatManager",
                      "canonicalReference": "server!ChatManager:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "chatManager",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.World#chunkLattice:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get chunkLattice(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "ChunkLattice",
                      "canonicalReference": "server!ChunkLattice:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "chunkLattice",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.World#entityManager:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get entityManager(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "EntityManager",
                      "canonicalReference": "server!EntityManager:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "entityManager",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.World#eventRouter:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get eventRouter(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "EventRouter",
                      "canonicalReference": "server!EventRouter:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "eventRouter",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.World#id:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get id(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "id",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.World#loop:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get loop(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "WorldLoop",
                      "canonicalReference": "server!WorldLoop:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "loop",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.World#name:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get name(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.World#networkSynchronizer:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get networkSynchronizer(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "NetworkSynchronizer",
                      "canonicalReference": "server!~NetworkSynchronizer:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "networkSynchronizer",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.World#onPlayerJoin:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "onPlayerJoin?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(player: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Player",
                      "canonicalReference": "server!Player:class"
                    },
                    {
                      "kind": "Content",
                      "text": ") => void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "onPlayerJoin",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.World#onPlayerLeave:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "onPlayerLeave?: "
                    },
                    {
                      "kind": "Content",
                      "text": "(player: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Player",
                      "canonicalReference": "server!Player:class"
                    },
                    {
                      "kind": "Content",
                      "text": ") => void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "onPlayerLeave",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.World#serialize:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "serialize(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "protocol.WorldSchema",
                      "canonicalReference": "@hytopia.com/server-protocol!WorldSchema:type"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "serialize"
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.World#simulation:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get simulation(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "Simulation",
                      "canonicalReference": "server!Simulation:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "simulation",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.World#skyboxUri:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get skyboxUri(): "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "skyboxUri",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.World#start:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "start(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "start"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.World#stop:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "stop(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "stop"
                }
              ],
              "implementsTokenRanges": [
                {
                  "startIndex": 1,
                  "endIndex": 2
                }
              ]
            },
            {
              "kind": "Interface",
              "canonicalReference": "server!HYTOPIA.WorldData:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export interface WorldData "
                }
              ],
              "fileUrlPath": "src/world/World.ts",
              "releaseTag": "Public",
              "name": "WorldData",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.WorldData#gravity:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "gravity?: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Vector3",
                      "canonicalReference": "server!Vector3:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "gravity",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.WorldData#id:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "id: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "id",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.WorldData#name:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "name: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "name",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.WorldData#skyboxUri:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "skyboxUri: "
                    },
                    {
                      "kind": "Content",
                      "text": "string"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "skyboxUri",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!HYTOPIA.WorldData#tickRate:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "tickRate?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": true,
                  "releaseTag": "Public",
                  "name": "tickRate",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Class",
              "canonicalReference": "server!HYTOPIA.WorldLoop:class",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export default class WorldLoop "
                }
              ],
              "fileUrlPath": "src/world/WorldLoop.ts",
              "releaseTag": "Public",
              "isAbstract": false,
              "name": "WorldLoop",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.WorldLoop#_onTickError:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "protected _onTickError: "
                    },
                    {
                      "kind": "Content",
                      "text": "(error: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Error",
                      "canonicalReference": "!Error:interface"
                    },
                    {
                      "kind": "Content",
                      "text": ") => void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "_onTickError",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isStatic": false,
                  "isProtected": true,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.WorldLoop#_tick:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "protected _tick: "
                    },
                    {
                      "kind": "Content",
                      "text": "(tickDeltaMs: number) => void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "_tick",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": true,
                  "isAbstract": false
                },
                {
                  "kind": "Constructor",
                  "canonicalReference": "server!HYTOPIA.WorldLoop:constructor(1)",
                  "docComment": "/**\n * Constructs a new instance of the `WorldLoop` class\n */\n",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "constructor(world: "
                    },
                    {
                      "kind": "Reference",
                      "text": "World",
                      "canonicalReference": "server!World:class"
                    },
                    {
                      "kind": "Content",
                      "text": ", tickRate?: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ");"
                    }
                  ],
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [
                    {
                      "parameterName": "world",
                      "parameterTypeTokenRange": {
                        "startIndex": 1,
                        "endIndex": 2
                      },
                      "isOptional": false
                    },
                    {
                      "parameterName": "tickRate",
                      "parameterTypeTokenRange": {
                        "startIndex": 3,
                        "endIndex": 4
                      },
                      "isOptional": true
                    }
                  ]
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.WorldLoop#currentTick:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get currentTick(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "currentTick",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.WorldLoop#nextTickMs:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get nextTickMs(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "nextTickMs",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.WorldLoop#start:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "start(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "start"
                },
                {
                  "kind": "Method",
                  "canonicalReference": "server!HYTOPIA.WorldLoop#stop:member(1)",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "stop(): "
                    },
                    {
                      "kind": "Content",
                      "text": "void"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isStatic": false,
                  "returnTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "releaseTag": "Public",
                  "isProtected": false,
                  "overloadIndex": 1,
                  "parameters": [],
                  "isOptional": false,
                  "isAbstract": false,
                  "name": "stop"
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.WorldLoop#timestepS:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get timestepS(): "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "timestepS",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                },
                {
                  "kind": "Property",
                  "canonicalReference": "server!HYTOPIA.WorldLoop#world:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "get world(): "
                    },
                    {
                      "kind": "Reference",
                      "text": "World",
                      "canonicalReference": "server!World:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": true,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "world",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isStatic": false,
                  "isProtected": false,
                  "isAbstract": false
                }
              ],
              "implementsTokenRanges": []
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "server!Player:class",
          "docComment": "/**\n * A player in the game.\n *\n * @remarks\n *\n * Players are automatically created when they connect and authenticate with the game server. This is all handled internally.\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `Player` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default class Player "
            }
          ],
          "fileUrlPath": "src/networking/players/Player.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Player",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "server!Player#disconnect:member(1)",
              "docComment": "/**\n * Disconnects the player from the game server.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "disconnect(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "disconnect"
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Player#id:member",
              "docComment": "/**\n * The unique identifier for the player.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly id: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Player#inputState:member",
              "docComment": "/**\n * The current {@link PlayerInputState} of the player.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get inputState(): "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly",
                  "canonicalReference": "!Readonly:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PlayerInputState",
                  "canonicalReference": "server!PlayerInputState:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "inputState",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Player#joinWorld:member(1)",
              "docComment": "/**\n * Joins a player to a world.\n *\n * @remarks\n *\n * If the player is already in a {@link World}, they will be removed from their current world before joining the new world.\n *\n * @param world - The world to join the player to.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "joinWorld(world: "
                },
                {
                  "kind": "Reference",
                  "text": "World",
                  "canonicalReference": "server!World:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "world",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "joinWorld"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Player#leaveWorld:member(1)",
              "docComment": "/**\n * Removes the player from the current {@link World} they are in.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "leaveWorld(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "leaveWorld"
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Player#orientationState:member",
              "docComment": "/**\n * The current {@link PlayerOrientationState} of the player.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get orientationState(): "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly",
                  "canonicalReference": "!Readonly:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PlayerOrientationState",
                  "canonicalReference": "server!PlayerOrientationState:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "orientationState",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Player#username:member",
              "docComment": "/**\n * The username for the player.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly username: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "username",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Player#world:member",
              "docComment": "/**\n * The current {@link World} the player is in.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get world(): "
                },
                {
                  "kind": "Reference",
                  "text": "World",
                  "canonicalReference": "server!World:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "world",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "server!PlayerEntity:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default class PlayerEntity extends "
            },
            {
              "kind": "Reference",
              "text": "Entity",
              "canonicalReference": "server!Entity:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/world/entities/PlayerEntity.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "PlayerEntity",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "server!PlayerEntity:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `PlayerEntity` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(options: "
                },
                {
                  "kind": "Reference",
                  "text": "PlayerEntityOptions",
                  "canonicalReference": "server!PlayerEntityOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "server!PlayerEntity#player:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "player: "
                },
                {
                  "kind": "Reference",
                  "text": "Player",
                  "canonicalReference": "server!Player:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "player",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "server!PlayerEntity#tick:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tick(tickDeltaMs: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tickDeltaMs",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "tick"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "server!PlayerEntityOptions:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface PlayerEntityOptions extends "
            },
            {
              "kind": "Reference",
              "text": "EntityOptions",
              "canonicalReference": "server!EntityOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/world/entities/PlayerEntity.ts",
          "releaseTag": "Public",
          "name": "PlayerEntityOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!PlayerEntityOptions#player:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "player: "
                },
                {
                  "kind": "Reference",
                  "text": "Player",
                  "canonicalReference": "server!Player:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "player",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "server!PlayerEventPayload:namespace",
          "docComment": "/**\n * Payloads for events a Player can emit.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace PlayerEventPayload "
            }
          ],
          "fileUrlPath": "src/networking/players/Player.ts",
          "releaseTag": "Public",
          "name": "PlayerEventPayload",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Interface",
              "canonicalReference": "server!PlayerEventPayload.ChatMessageSend:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface ChatMessageSend "
                }
              ],
              "releaseTag": "Public",
              "name": "ChatMessageSend",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!PlayerEventPayload.ChatMessageSend#message:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "message: "
                    },
                    {
                      "kind": "Reference",
                      "text": "protocol.ChatMessageSchema",
                      "canonicalReference": "@hytopia.com/server-protocol!ChatMessageSchema:type"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "message",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!PlayerEventPayload.ChatMessageSend#player:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "player: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Player",
                      "canonicalReference": "server!Player:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "player",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "server!PlayerEventPayload.JoinedWorld:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface JoinedWorld "
                }
              ],
              "releaseTag": "Public",
              "name": "JoinedWorld",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!PlayerEventPayload.JoinedWorld#player:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "player: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Player",
                      "canonicalReference": "server!Player:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "player",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!PlayerEventPayload.JoinedWorld#world:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "world: "
                    },
                    {
                      "kind": "Reference",
                      "text": "World",
                      "canonicalReference": "server!World:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "world",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "server!PlayerEventPayload.LeftWorld:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface LeftWorld "
                }
              ],
              "releaseTag": "Public",
              "name": "LeftWorld",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!PlayerEventPayload.LeftWorld#player:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "player: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Player",
                      "canonicalReference": "server!Player:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "player",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!PlayerEventPayload.LeftWorld#world:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "world: "
                    },
                    {
                      "kind": "Reference",
                      "text": "World",
                      "canonicalReference": "server!World:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "world",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            },
            {
              "kind": "Interface",
              "canonicalReference": "server!PlayerEventPayload.RequestSync:interface",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interface RequestSync "
                }
              ],
              "releaseTag": "Public",
              "name": "RequestSync",
              "preserveMemberOrder": false,
              "members": [
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!PlayerEventPayload.RequestSync#player:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "player: "
                    },
                    {
                      "kind": "Reference",
                      "text": "Player",
                      "canonicalReference": "server!Player:class"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "player",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!PlayerEventPayload.RequestSync#receivedAt:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "receivedAt: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "receivedAt",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "kind": "PropertySignature",
                  "canonicalReference": "server!PlayerEventPayload.RequestSync#receivedAtMs:member",
                  "docComment": "",
                  "excerptTokens": [
                    {
                      "kind": "Content",
                      "text": "receivedAtMs: "
                    },
                    {
                      "kind": "Content",
                      "text": "number"
                    },
                    {
                      "kind": "Content",
                      "text": ";"
                    }
                  ],
                  "isReadonly": false,
                  "isOptional": false,
                  "releaseTag": "Public",
                  "name": "receivedAtMs",
                  "propertyTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "extendsTokenRanges": []
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "server!PlayerEventType:enum",
          "docComment": "/**\n * Event types a Player can emit.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum PlayerEventType "
            }
          ],
          "fileUrlPath": "src/networking/players/Player.ts",
          "releaseTag": "Public",
          "name": "PlayerEventType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "server!PlayerEventType.CHAT_MESSAGE_SEND:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CHAT_MESSAGE_SEND = "
                },
                {
                  "kind": "Content",
                  "text": "\"PLAYER.CHAT_MESSAGE_SEND\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "CHAT_MESSAGE_SEND"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "server!PlayerEventType.JOINED_WORLD:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "JOINED_WORLD = "
                },
                {
                  "kind": "Content",
                  "text": "\"PLAYER.JOINED_WORLD\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "JOINED_WORLD"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "server!PlayerEventType.LEFT_WORLD:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "LEFT_WORLD = "
                },
                {
                  "kind": "Content",
                  "text": "\"PLAYER.LEFT_WORLD\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "LEFT_WORLD"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "server!PlayerEventType.REQUEST_SYNC:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "REQUEST_SYNC = "
                },
                {
                  "kind": "Content",
                  "text": "\"PLAYER.REQUEST_SYNC\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "REQUEST_SYNC"
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "server!PlayerInputState:type",
          "docComment": "/**\n * The input state of a Player; keys from SUPPORTED_INPUT_KEYS.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PlayerInputState = "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<keyof "
            },
            {
              "kind": "Reference",
              "text": "InputSchema",
              "canonicalReference": "@hytopia.com/server-protocol!InputSchema:type"
            },
            {
              "kind": "Content",
              "text": ", boolean>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/networking/players/Player.ts",
          "releaseTag": "Public",
          "name": "PlayerInputState",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "server!PlayerManager:class",
          "docComment": "/**\n * Manages all connected players in a game server.\n *\n * @remarks\n *\n * The PlayerManager is created internally as a global singleton accessible with the static property `PlayerManager.instance`.\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `PlayerManager` class.\n *\n * @example\n * ```typescript\n * import { PlayerManager } from 'hytopia';\n *\n * const playerManager = PlayerManager.instance;\n * const connectedPlayers = playerManager.getConnectedPlayers();\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default class PlayerManager "
            }
          ],
          "fileUrlPath": "src/networking/players/PlayerManager.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "PlayerManager",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "server!PlayerManager#getConnectedPlayerByUsername:member(1)",
              "docComment": "/**\n * Get a connected player by their username (case insensitive).\n *\n * @param username - The username of the player to get.\n *\n * @returns The connected player with the given username or undefined if not found.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getConnectedPlayerByUsername(username: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Player",
                  "canonicalReference": "server!Player:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "username",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getConnectedPlayerByUsername"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!PlayerManager#getConnectedPlayers:member(1)",
              "docComment": "/**\n * Get all connected players.\n *\n * @returns An array of all connected players.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getConnectedPlayers(): "
                },
                {
                  "kind": "Reference",
                  "text": "Player",
                  "canonicalReference": "server!Player:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getConnectedPlayers"
            },
            {
              "kind": "Property",
              "canonicalReference": "server!PlayerManager.instance:member",
              "docComment": "/**\n * The global PlayerManager instance as a singleton.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly instance: "
                },
                {
                  "kind": "Reference",
                  "text": "PlayerManager",
                  "canonicalReference": "server!PlayerManager:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "instance",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "server!PlayerOrientationState:type",
          "docComment": "/**\n * The camera orientation state of a Player.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PlayerOrientationState = "
            },
            {
              "kind": "Content",
              "text": "{\n    pitch: number;\n    yaw: number;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/networking/players/Player.ts",
          "releaseTag": "Public",
          "name": "PlayerOrientationState",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "server!RawCollisionGroups:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type RawCollisionGroups = "
            },
            {
              "kind": "Reference",
              "text": "RAPIER.InteractionGroups",
              "canonicalReference": "@dimforge/rapier3d-compat!InteractionGroups:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/world/physics/CollisionGroupsBuilder.ts",
          "releaseTag": "Public",
          "name": "RawCollisionGroups",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "server!RigidBody:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default class RigidBody "
            }
          ],
          "fileUrlPath": "src/world/physics/RigidBody.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "RigidBody",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "server!RigidBody:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `RigidBody` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(options: "
                },
                {
                  "kind": "Reference",
                  "text": "RigidBodyOptions",
                  "canonicalReference": "server!RigidBodyOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#addChildColliderToSimulation:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addChildColliderToSimulation(collider: "
                },
                {
                  "kind": "Reference",
                  "text": "Collider",
                  "canonicalReference": "server!Collider:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "collider",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addChildColliderToSimulation"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#addForce:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addForce(force: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector",
                  "canonicalReference": "@dimforge/rapier3d-compat!Vector:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "force",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addForce"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#addTorque:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addTorque(torque: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector",
                  "canonicalReference": "@dimforge/rapier3d-compat!Vector:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "torque",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addTorque"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#addToSimulation:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addToSimulation(simulation: "
                },
                {
                  "kind": "Reference",
                  "text": "Simulation",
                  "canonicalReference": "server!Simulation:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "simulation",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addToSimulation"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#applyImpulse:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "applyImpulse(impulse: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector",
                  "canonicalReference": "@dimforge/rapier3d-compat!Vector:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "impulse",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "applyImpulse"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#applyImpulseAtPoint:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "applyImpulseAtPoint(impulse: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector",
                  "canonicalReference": "@dimforge/rapier3d-compat!Vector:interface"
                },
                {
                  "kind": "Content",
                  "text": ", point: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector",
                  "canonicalReference": "@dimforge/rapier3d-compat!Vector:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "impulse",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "point",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "applyImpulseAtPoint"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#applyTorqueImpulse:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "applyTorqueImpulse(impulse: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector",
                  "canonicalReference": "@dimforge/rapier3d-compat!Vector:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "impulse",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "applyTorqueImpulse"
            },
            {
              "kind": "Property",
              "canonicalReference": "server!RigidBody#colliders:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get colliders(): "
                },
                {
                  "kind": "Reference",
                  "text": "Set",
                  "canonicalReference": "!Set:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Collider",
                  "canonicalReference": "server!Collider:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "colliders",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#createAndAddChildCollidersToSimulation:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createAndAddChildCollidersToSimulation(colliderOptions: "
                },
                {
                  "kind": "Reference",
                  "text": "ColliderOptions",
                  "canonicalReference": "server!ColliderOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Collider",
                  "canonicalReference": "server!Collider:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "colliderOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "createAndAddChildCollidersToSimulation"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#createAndAddChildColliderToSimulation:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createAndAddChildColliderToSimulation(colliderOptions: "
                },
                {
                  "kind": "Reference",
                  "text": "ColliderOptions",
                  "canonicalReference": "server!ColliderOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Collider",
                  "canonicalReference": "server!Collider:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "colliderOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "createAndAddChildColliderToSimulation"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#createAndAddPendingChildCollider:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createAndAddPendingChildCollider(colliderOptions: "
                },
                {
                  "kind": "Reference",
                  "text": "ColliderOptions",
                  "canonicalReference": "server!ColliderOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Collider",
                  "canonicalReference": "server!Collider:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "colliderOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "createAndAddPendingChildCollider"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#createAndAddPendingChildColliders:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createAndAddPendingChildColliders(colliderOptions: "
                },
                {
                  "kind": "Reference",
                  "text": "ColliderOptions",
                  "canonicalReference": "server!ColliderOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Collider",
                  "canonicalReference": "server!Collider:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "colliderOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "createAndAddPendingChildColliders"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#getAdditionalMass:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAdditionalMass(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getAdditionalMass"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#getAdditionalSolverIterations:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAdditionalSolverIterations(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getAdditionalSolverIterations"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#getAngularDamping:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAngularDamping(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getAngularDamping"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#getAngularVelocity:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAngularVelocity(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getAngularVelocity"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#getCollidersByTag:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCollidersByTag(tag: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Collider",
                  "canonicalReference": "server!Collider:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tag",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getCollidersByTag"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#getDirectionFromRotation:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getDirectionFromRotation(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getDirectionFromRotation"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#getDominanceGroup:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getDominanceGroup(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getDominanceGroup"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#getEffectiveAngularInertia:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getEffectiveAngularInertia(): "
                },
                {
                  "kind": "Reference",
                  "text": "SpdMatrix3",
                  "canonicalReference": "server!SpdMatrix3:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getEffectiveAngularInertia"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#getEffectiveInverseMass:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getEffectiveInverseMass(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getEffectiveInverseMass"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#getEffectiveWorldInversePrincipalAngularInertiaSqrt:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getEffectiveWorldInversePrincipalAngularInertiaSqrt(): "
                },
                {
                  "kind": "Reference",
                  "text": "SpdMatrix3",
                  "canonicalReference": "server!SpdMatrix3:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getEffectiveWorldInversePrincipalAngularInertiaSqrt"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#getEnabledRotations:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getEnabledRotations(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3Boolean",
                  "canonicalReference": "server!Vector3Boolean:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getEnabledRotations"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#getEnabledTranslations:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getEnabledTranslations(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3Boolean",
                  "canonicalReference": "server!Vector3Boolean:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getEnabledTranslations"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#getGravityScale:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getGravityScale(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getGravityScale"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#getInverseMass:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getInverseMass(): "
                },
                {
                  "kind": "Content",
                  "text": "number | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getInverseMass"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#getInversePrincipalAngularInertiaSqrt:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getInversePrincipalAngularInertiaSqrt(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getInversePrincipalAngularInertiaSqrt"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#getLinearDamping:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getLinearDamping(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getLinearDamping"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#getLinearVelocity:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getLinearVelocity(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getLinearVelocity"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#getLocalCenterOfMass:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getLocalCenterOfMass(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getLocalCenterOfMass"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#getMass:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getMass(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getMass"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#getNextKinematicRotation:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getNextKinematicRotation(): "
                },
                {
                  "kind": "Reference",
                  "text": "Rotation",
                  "canonicalReference": "server!Rotation:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getNextKinematicRotation"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#getNextKinematicTranslation:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getNextKinematicTranslation(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getNextKinematicTranslation"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#getPrincipalAngularInertia:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getPrincipalAngularInertia(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getPrincipalAngularInertia"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#getPrincipalAngularInertiaLocalFrame:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getPrincipalAngularInertiaLocalFrame(): "
                },
                {
                  "kind": "Reference",
                  "text": "Rotation",
                  "canonicalReference": "server!Rotation:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getPrincipalAngularInertiaLocalFrame"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#getRotation:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getRotation(): "
                },
                {
                  "kind": "Reference",
                  "text": "Rotation",
                  "canonicalReference": "server!Rotation:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getRotation"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#getSoftCcdPrediction:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSoftCcdPrediction(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getSoftCcdPrediction"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#getTranslation:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTranslation(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getTranslation"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#getType:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getType(): "
                },
                {
                  "kind": "Reference",
                  "text": "RigidBodyType",
                  "canonicalReference": "server!RigidBodyType:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getType"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#getWorldCenterOfMass:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getWorldCenterOfMass(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getWorldCenterOfMass"
            },
            {
              "kind": "Property",
              "canonicalReference": "server!RigidBody#isCcdEnabled:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isCcdEnabled(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isCcdEnabled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!RigidBody#isDynamic:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isDynamic(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isDynamic",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!RigidBody#isEnabled:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isEnabled(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isEnabled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!RigidBody#isFixed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isFixed(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isFixed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!RigidBody#isKinematic:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isKinematic(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isKinematic",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!RigidBody#isKinematicPositionBased:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isKinematicPositionBased(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isKinematicPositionBased",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!RigidBody#isKinematicVelocityBased:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isKinematicVelocityBased(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isKinematicVelocityBased",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!RigidBody#isMoving:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isMoving(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isMoving",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!RigidBody#isRemoved:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isRemoved(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isRemoved",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!RigidBody#isSimulated:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isSimulated(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isSimulated",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!RigidBody#isSleeping:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isSleeping(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isSleeping",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#linkCollider:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "linkCollider(collider: "
                },
                {
                  "kind": "Reference",
                  "text": "Collider",
                  "canonicalReference": "server!Collider:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "collider",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "linkCollider"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#lockAllRotations:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lockAllRotations(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "lockAllRotations"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#lockAllTranslations:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lockAllTranslations(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "lockAllTranslations"
            },
            {
              "kind": "Property",
              "canonicalReference": "server!RigidBody#numColliders:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get numColliders(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "numColliders",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!RigidBody#rawRigidBody:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get rawRigidBody(): "
                },
                {
                  "kind": "Reference",
                  "text": "RAPIER.RigidBody",
                  "canonicalReference": "@dimforge/rapier3d-compat!RigidBody:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "rawRigidBody",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#removeFromSimulation:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeFromSimulation(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "removeFromSimulation"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#setAdditionalMass:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setAdditionalMass(additionalMass: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "additionalMass",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setAdditionalMass"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#setAdditionalMassProperties:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setAdditionalMassProperties(additionalMassProperties: "
                },
                {
                  "kind": "Reference",
                  "text": "RigidBodyAdditionalMassProperties",
                  "canonicalReference": "server!RigidBodyAdditionalMassProperties:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "additionalMassProperties",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setAdditionalMassProperties"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#setAdditionalSolverIterations:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setAdditionalSolverIterations(solverIterations: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "solverIterations",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setAdditionalSolverIterations"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#setAngularDamping:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setAngularDamping(angularDamping: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "angularDamping",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setAngularDamping"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#setAngularVelocity:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setAngularVelocity(angularVelocity: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector",
                  "canonicalReference": "@dimforge/rapier3d-compat!Vector:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "angularVelocity",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setAngularVelocity"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#setCcdEnabled:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setCcdEnabled(ccdEnabled: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "ccdEnabled",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setCcdEnabled"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#setCollisionGroupsForSolidColliders:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setCollisionGroupsForSolidColliders(collisionGroups: "
                },
                {
                  "kind": "Reference",
                  "text": "CollisionGroups",
                  "canonicalReference": "server!CollisionGroups:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "collisionGroups",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setCollisionGroupsForSolidColliders"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#setDominanceGroup:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setDominanceGroup(dominanceGroup: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "dominanceGroup",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setDominanceGroup"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#setEnabled:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setEnabled(enabled: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "enabled",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setEnabled"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#setEnabledRotations:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setEnabledRotations(enabledRotations: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3Boolean",
                  "canonicalReference": "server!Vector3Boolean:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "enabledRotations",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setEnabledRotations"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#setEnabledTranslations:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setEnabledTranslations(enabledTranslations: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3Boolean",
                  "canonicalReference": "server!Vector3Boolean:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "enabledTranslations",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setEnabledTranslations"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#setGravityScale:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setGravityScale(gravityScale: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "gravityScale",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setGravityScale"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#setLinearDamping:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setLinearDamping(linearDamping: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "linearDamping",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setLinearDamping"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#setLinearVelocity:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setLinearVelocity(linearVelocity: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector",
                  "canonicalReference": "@dimforge/rapier3d-compat!Vector:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "linearVelocity",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setLinearVelocity"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#setNextKinematicRotation:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setNextKinematicRotation(nextKinematicRotation: "
                },
                {
                  "kind": "Reference",
                  "text": "Rotation",
                  "canonicalReference": "server!Rotation:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "nextKinematicRotation",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setNextKinematicRotation"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#setNextKinematicTranslation:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setNextKinematicTranslation(nextKinematicTranslation: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector",
                  "canonicalReference": "@dimforge/rapier3d-compat!Vector:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "nextKinematicTranslation",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setNextKinematicTranslation"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#setRotation:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setRotation(rotation: "
                },
                {
                  "kind": "Reference",
                  "text": "Rotation",
                  "canonicalReference": "server!Rotation:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "rotation",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setRotation"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#setSleeping:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setSleeping(sleeping: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "sleeping",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setSleeping"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#setSoftCcdPrediction:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setSoftCcdPrediction(softCcdPrediction: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "softCcdPrediction",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setSoftCcdPrediction"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#setTag:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setTag(tag: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tag",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setTag"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#setTranslation:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setTranslation(translation: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector",
                  "canonicalReference": "@dimforge/rapier3d-compat!Vector:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "translation",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setTranslation"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#setType:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setType(type: "
                },
                {
                  "kind": "Reference",
                  "text": "RigidBodyType",
                  "canonicalReference": "server!RigidBodyType:enum"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setType"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#sleep:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sleep(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "sleep"
            },
            {
              "kind": "Property",
              "canonicalReference": "server!RigidBody#tag:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get tag(): "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tag",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#unlinkCollider:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "unlinkCollider(collider: "
                },
                {
                  "kind": "Reference",
                  "text": "Collider",
                  "canonicalReference": "server!Collider:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "collider",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "unlinkCollider"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!RigidBody#wakeUp:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "wakeUp(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "wakeUp"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "server!RigidBodyAdditionalMassProperties:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type RigidBodyAdditionalMassProperties = "
            },
            {
              "kind": "Content",
              "text": "{\n    additionalMass: number;\n    centerOfMass: "
            },
            {
              "kind": "Reference",
              "text": "Vector3",
              "canonicalReference": "server!Vector3:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    principalAngularInertia: "
            },
            {
              "kind": "Reference",
              "text": "Vector3",
              "canonicalReference": "server!Vector3:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    principalAngularInertiaLocalFrame: "
            },
            {
              "kind": "Reference",
              "text": "Rotation",
              "canonicalReference": "server!Rotation:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/world/physics/RigidBody.ts",
          "releaseTag": "Public",
          "name": "RigidBodyAdditionalMassProperties",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "server!RigidBodyOptions:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RigidBodyOptions "
            }
          ],
          "fileUrlPath": "src/world/physics/RigidBody.ts",
          "releaseTag": "Public",
          "name": "RigidBodyOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!RigidBodyOptions#additionalMass:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "additionalMass?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "additionalMass",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!RigidBodyOptions#additionalMassProperties:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "additionalMassProperties?: "
                },
                {
                  "kind": "Reference",
                  "text": "RigidBodyAdditionalMassProperties",
                  "canonicalReference": "server!RigidBodyAdditionalMassProperties:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "additionalMassProperties",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!RigidBodyOptions#additionalSolverIterations:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "additionalSolverIterations?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "additionalSolverIterations",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!RigidBodyOptions#angularDamping:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "angularDamping?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "angularDamping",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!RigidBodyOptions#angularVelocity:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "angularVelocity?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "angularVelocity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!RigidBodyOptions#ccdEnabled:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ccdEnabled?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "ccdEnabled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!RigidBodyOptions#colliders:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "colliders?: "
                },
                {
                  "kind": "Reference",
                  "text": "ColliderOptions",
                  "canonicalReference": "server!ColliderOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "colliders",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!RigidBodyOptions#dominanceGroup:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dominanceGroup?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "dominanceGroup",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!RigidBodyOptions#enabled:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enabled?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "enabled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!RigidBodyOptions#enabledRotations:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enabledRotations?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3Boolean",
                  "canonicalReference": "server!Vector3Boolean:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "enabledRotations",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!RigidBodyOptions#enabledTranslations:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enabledTranslations?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3Boolean",
                  "canonicalReference": "server!Vector3Boolean:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "enabledTranslations",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!RigidBodyOptions#gravityScale:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gravityScale?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "gravityScale",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!RigidBodyOptions#linearDamping:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "linearDamping?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "linearDamping",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!RigidBodyOptions#linearVelocity:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "linearVelocity?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "linearVelocity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!RigidBodyOptions#rotation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rotation?: "
                },
                {
                  "kind": "Reference",
                  "text": "Rotation",
                  "canonicalReference": "server!Rotation:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "rotation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!RigidBodyOptions#simulation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "simulation?: "
                },
                {
                  "kind": "Reference",
                  "text": "Simulation",
                  "canonicalReference": "server!Simulation:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "simulation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!RigidBodyOptions#sleeping:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sleeping?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "sleeping",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!RigidBodyOptions#softCcdPrediction:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "softCcdPrediction?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "softCcdPrediction",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!RigidBodyOptions#tag:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tag?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tag",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!RigidBodyOptions#translation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "translation?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "translation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!RigidBodyOptions#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "RigidBodyType",
                  "canonicalReference": "server!RigidBodyType:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "server!RigidBodyType:enum",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum RigidBodyType "
            }
          ],
          "fileUrlPath": "src/world/physics/RigidBody.ts",
          "releaseTag": "Public",
          "name": "RigidBodyType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "server!RigidBodyType.DYNAMIC:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DYNAMIC = "
                },
                {
                  "kind": "Content",
                  "text": "\"dynamic\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "DYNAMIC"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "server!RigidBodyType.FIXED:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "FIXED = "
                },
                {
                  "kind": "Content",
                  "text": "\"fixed\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "FIXED"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "server!RigidBodyType.KINEMATIC_POSITION:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "KINEMATIC_POSITION = "
                },
                {
                  "kind": "Content",
                  "text": "\"kinematic_position\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "KINEMATIC_POSITION"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "server!RigidBodyType.KINEMATIC_VELOCITY:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "KINEMATIC_VELOCITY = "
                },
                {
                  "kind": "Content",
                  "text": "\"kinematic_velocity\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "KINEMATIC_VELOCITY"
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "server!Rotation:interface",
          "docComment": "/**\n * A rotation in quaternion form.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface Rotation "
            }
          ],
          "fileUrlPath": "src/shared/types/math/Rotation.ts",
          "releaseTag": "Public",
          "name": "Rotation",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!Rotation#w:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "w: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "w",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!Rotation#x:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "x",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!Rotation#y:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "y",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!Rotation#z:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "z: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "z",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "server!Simulation:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default class Simulation "
            }
          ],
          "fileUrlPath": "src/world/physics/Simulation.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Simulation",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "server!Simulation:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Simulation` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(world: "
                },
                {
                  "kind": "Reference",
                  "text": "World",
                  "canonicalReference": "server!World:class"
                },
                {
                  "kind": "Content",
                  "text": ", tickRate?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", gravity?: "
                },
                {
                  "kind": "Reference",
                  "text": "RAPIER.Vector3",
                  "canonicalReference": "@dimforge/rapier3d-compat!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "world",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tickRate",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "gravity",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Simulation#castRay:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "castRay(origin: "
                },
                {
                  "kind": "Reference",
                  "text": "RAPIER.Vector3",
                  "canonicalReference": "@dimforge/rapier3d-compat!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", direction: "
                },
                {
                  "kind": "Reference",
                  "text": "RAPIER.Vector3",
                  "canonicalReference": "@dimforge/rapier3d-compat!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", length: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "RayCastOptions",
                  "canonicalReference": "server!~RayCastOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Block",
                  "canonicalReference": "server!Block:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Entity",
                  "canonicalReference": "server!Entity:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "origin",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "direction",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "length",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "castRay"
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Simulation#colliderMap:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get colliderMap(): "
                },
                {
                  "kind": "Reference",
                  "text": "ColliderMap",
                  "canonicalReference": "server!ColliderMap:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "colliderMap",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Simulation#createRawCollider:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createRawCollider(rawColliderDesc: "
                },
                {
                  "kind": "Reference",
                  "text": "RAPIER.ColliderDesc",
                  "canonicalReference": "@dimforge/rapier3d-compat!ColliderDesc:class"
                },
                {
                  "kind": "Content",
                  "text": ", rawParent?: "
                },
                {
                  "kind": "Reference",
                  "text": "RAPIER.RigidBody",
                  "canonicalReference": "@dimforge/rapier3d-compat!RigidBody:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "RAPIER.Collider",
                  "canonicalReference": "@dimforge/rapier3d-compat!Collider:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "rawColliderDesc",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "rawParent",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "createRawCollider"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Simulation#createRawRigidBody:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createRawRigidBody(rawRigidBodyDesc: "
                },
                {
                  "kind": "Reference",
                  "text": "RAPIER.RigidBodyDesc",
                  "canonicalReference": "@dimforge/rapier3d-compat!RigidBodyDesc:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "RAPIER.RigidBody",
                  "canonicalReference": "@dimforge/rapier3d-compat!RigidBody:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "rawRigidBodyDesc",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "createRawRigidBody"
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Simulation#gravity:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get gravity(): "
                },
                {
                  "kind": "Reference",
                  "text": "RAPIER.Vector3",
                  "canonicalReference": "@dimforge/rapier3d-compat!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "gravity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Simulation#removeRawCollider:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeRawCollider(rawCollider: "
                },
                {
                  "kind": "Reference",
                  "text": "RAPIER.Collider",
                  "canonicalReference": "@dimforge/rapier3d-compat!Collider:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "rawCollider",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "removeRawCollider"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!Simulation#removeRawRigidBody:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeRawRigidBody(rawRigidBody: "
                },
                {
                  "kind": "Reference",
                  "text": "RAPIER.RigidBody",
                  "canonicalReference": "@dimforge/rapier3d-compat!RigidBody:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "rawRigidBody",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "removeRawRigidBody"
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Simulation#step:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "step: "
                },
                {
                  "kind": "Content",
                  "text": "(tickDeltaMs: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "step",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Simulation#timestepS:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get timestepS(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "timestepS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!Simulation#world:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get world(): "
                },
                {
                  "kind": "Reference",
                  "text": "World",
                  "canonicalReference": "server!World:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "world",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "server!SpdMatrix3:interface",
          "docComment": "/**\n * A 3x3 symmetric positive-definite matrix for spatial dynamics.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface SpdMatrix3 extends "
            },
            {
              "kind": "Reference",
              "text": "RapierSdpMatrix3",
              "canonicalReference": "@dimforge/rapier3d-compat!SdpMatrix3:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/shared/types/math/SpdMatrix3.ts",
          "releaseTag": "Public",
          "name": "SpdMatrix3",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "server!startServer:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function startServer(init: "
            },
            {
              "kind": "Content",
              "text": "(world: "
            },
            {
              "kind": "Reference",
              "text": "World",
              "canonicalReference": "server!World:class"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/GameServer.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "init",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "startServer"
        },
        {
          "kind": "Variable",
          "canonicalReference": "server!SUPPORTED_INPUT_KEYS:var",
          "docComment": "/**\n * The input keys included in the PlayerInputState.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "SUPPORTED_INPUT_KEYS: "
            },
            {
              "kind": "Content",
              "text": "string[]"
            }
          ],
          "fileUrlPath": "src/networking/players/Player.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "SUPPORTED_INPUT_KEYS",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "server!Vector3:interface",
          "docComment": "/**\n * A 3-dimensional vector.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface Vector3 "
            }
          ],
          "fileUrlPath": "src/shared/types/math/Vector3.ts",
          "releaseTag": "Public",
          "name": "Vector3",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!Vector3#x:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "x",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!Vector3#y:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "y",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!Vector3#z:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "z: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "z",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "server!Vector3Boolean:interface",
          "docComment": "/**\n * A 3-dimensional vector of boolean values.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface Vector3Boolean "
            }
          ],
          "fileUrlPath": "src/shared/types/math/Vector3Boolean.ts",
          "releaseTag": "Public",
          "name": "Vector3Boolean",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!Vector3Boolean#x:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "x: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "x",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!Vector3Boolean#y:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "y: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "y",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!Vector3Boolean#z:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "z: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "z",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "server!World:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default class World implements "
            },
            {
              "kind": "Reference",
              "text": "protocol.Serializable",
              "canonicalReference": "@hytopia.com/server-protocol!Serializable:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/world/World.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "World",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "server!World:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `World` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(worldData: "
                },
                {
                  "kind": "Reference",
                  "text": "WorldData",
                  "canonicalReference": "server!WorldData:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "worldData",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "server!World#audioManager:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get audioManager(): "
                },
                {
                  "kind": "Reference",
                  "text": "AudioManager",
                  "canonicalReference": "server!AudioManager:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "audioManager",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!World#blockTypeRegistry:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get blockTypeRegistry(): "
                },
                {
                  "kind": "Reference",
                  "text": "BlockTypeRegistry",
                  "canonicalReference": "server!BlockTypeRegistry:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "blockTypeRegistry",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!World#chatManager:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get chatManager(): "
                },
                {
                  "kind": "Reference",
                  "text": "ChatManager",
                  "canonicalReference": "server!ChatManager:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "chatManager",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!World#chunkLattice:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get chunkLattice(): "
                },
                {
                  "kind": "Reference",
                  "text": "ChunkLattice",
                  "canonicalReference": "server!ChunkLattice:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "chunkLattice",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!World#entityManager:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get entityManager(): "
                },
                {
                  "kind": "Reference",
                  "text": "EntityManager",
                  "canonicalReference": "server!EntityManager:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "entityManager",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!World#eventRouter:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get eventRouter(): "
                },
                {
                  "kind": "Reference",
                  "text": "EventRouter",
                  "canonicalReference": "server!EventRouter:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "eventRouter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!World#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get id(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!World#loop:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get loop(): "
                },
                {
                  "kind": "Reference",
                  "text": "WorldLoop",
                  "canonicalReference": "server!WorldLoop:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "loop",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!World#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get name(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!World#networkSynchronizer:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get networkSynchronizer(): "
                },
                {
                  "kind": "Reference",
                  "text": "NetworkSynchronizer",
                  "canonicalReference": "server!~NetworkSynchronizer:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "networkSynchronizer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!World#onPlayerJoin:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onPlayerJoin?: "
                },
                {
                  "kind": "Content",
                  "text": "(player: "
                },
                {
                  "kind": "Reference",
                  "text": "Player",
                  "canonicalReference": "server!Player:class"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onPlayerJoin",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!World#onPlayerLeave:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onPlayerLeave?: "
                },
                {
                  "kind": "Content",
                  "text": "(player: "
                },
                {
                  "kind": "Reference",
                  "text": "Player",
                  "canonicalReference": "server!Player:class"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onPlayerLeave",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "server!World#serialize:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serialize(): "
                },
                {
                  "kind": "Reference",
                  "text": "protocol.WorldSchema",
                  "canonicalReference": "@hytopia.com/server-protocol!WorldSchema:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "serialize"
            },
            {
              "kind": "Property",
              "canonicalReference": "server!World#simulation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get simulation(): "
                },
                {
                  "kind": "Reference",
                  "text": "Simulation",
                  "canonicalReference": "server!Simulation:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "simulation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!World#skyboxUri:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get skyboxUri(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "skyboxUri",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "server!World#start:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "start(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "start"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!World#stop:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stop(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "stop"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "server!WorldData:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface WorldData "
            }
          ],
          "fileUrlPath": "src/world/World.ts",
          "releaseTag": "Public",
          "name": "WorldData",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!WorldData#gravity:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gravity?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "server!Vector3:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "gravity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!WorldData#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!WorldData#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!WorldData#skyboxUri:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "skyboxUri: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "skyboxUri",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "server!WorldData#tickRate:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tickRate?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tickRate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "server!WorldLoop:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default class WorldLoop "
            }
          ],
          "fileUrlPath": "src/world/WorldLoop.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "WorldLoop",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "server!WorldLoop#_onTickError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected _onTickError: "
                },
                {
                  "kind": "Content",
                  "text": "(error: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "_onTickError",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": true,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!WorldLoop#_tick:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected _tick: "
                },
                {
                  "kind": "Content",
                  "text": "(tickDeltaMs: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "_tick",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": true,
              "isAbstract": false
            },
            {
              "kind": "Constructor",
              "canonicalReference": "server!WorldLoop:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `WorldLoop` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(world: "
                },
                {
                  "kind": "Reference",
                  "text": "World",
                  "canonicalReference": "server!World:class"
                },
                {
                  "kind": "Content",
                  "text": ", tickRate?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "world",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tickRate",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "server!WorldLoop#currentTick:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get currentTick(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "currentTick",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!WorldLoop#nextTickMs:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get nextTickMs(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "nextTickMs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "server!WorldLoop#start:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "start(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "start"
            },
            {
              "kind": "Method",
              "canonicalReference": "server!WorldLoop#stop:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stop(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "stop"
            },
            {
              "kind": "Property",
              "canonicalReference": "server!WorldLoop#timestepS:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get timestepS(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "timestepS",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "server!WorldLoop#world:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get world(): "
                },
                {
                  "kind": "Reference",
                  "text": "World",
                  "canonicalReference": "server!World:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "world",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        }
      ]
    }
  ]
}
